%!PS-Adobe-3.1
%ADO_DSC_Encoding: MacOS Roman
%%Title: journal.pone.0032749.pdf
%%Creator: Adobe Acrobat 9.5.3
%%For: nuno
%%CreationDate: 03/31/2014, 03:42:07 PM
%%BoundingBox: 78 142 534 650
%%HiResBoundingBox: 78.0488 142.6030 533.9513 649.3971
%%CropBox: 78.0488 142.6030 533.9513 649.3971
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 0 1 -1 0
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq{pop}{setblackgeneration}ifelse
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq{pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 997 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-13:18:53        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="Acrobat Distiller 9.0.0 (Windows)"
   xmp:CreateDate="2012-02-20T10:23:04+08:00"
   xmp:CreatorTool="3B2 Total Publishing System 7.51n/W"
   xmp:ModifyDate="2012-02-23T10:48:20+08:00"
   xmp:MetadataDate="2012-02-23T10:48:20+08:00"
   xmpMM:DocumentID="uuid:c50a58dd-94b0-4fb9-b718-0b320395956b"
   xmpMM:InstanceID="uuid:cd803aea-f5f8-4e15-b83b-fd68def11baa"
   dc:format="application/pdf">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">pone.0032749 1..10</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[{Catalog} {Doc_Metadata} /Metadata pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
<</PageSize [612 792 ] >> setpagedevice
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_CoolType_Core/ps get exec
true set_gvm
%ADOBeginSubsetFont: GTQAAA+AdvP40319B Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /GTQAAA+AdvP40319B def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/BaseFontName (AdvP40319B) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-31 -239 1197 750} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NVLZYX+AdvP40319B /GTQAAA+AdvP40319B findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: UPTBAA+AdvP41461E Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /UPTBAA+AdvP41461E def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/BaseFontName (AdvP41461E) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-31 -239 1354 750} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NVLZYY+AdvP41461E /UPTBAA+AdvP41461E findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: ZFJAAA+AdvP403A40 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ZFJAAA+AdvP403A40 def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/BaseFontName (AdvP403A40) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-41 -239 1125 750} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NVLZYZ+AdvP403A40 /ZFJAAA+AdvP403A40 findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: ICAAAA+AdvT377 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ICAAAA+AdvT377 def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/BaseFontName (AdvT377) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-187 -218 1010 979} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NVLZZA+AdvT377 /ICAAAA+AdvT377 findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: ENZAAA+AdvP49811 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ENZAAA+AdvP49811 def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/BaseFontName (AdvP49811) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-156 -250 1000 666} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NVLZZB+AdvP49811 /ENZAAA+AdvP49811 findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: YFQAAA+AdvP49812 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /YFQAAA+AdvP49812 def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/BaseFontName (AdvP49812) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-197 -250 1083 687} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NVLZZC+AdvP49812 /YFQAAA+AdvP49812 findfont ct_VMDictPut
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/ps gx
gsave
/0 
<<
/Name (PANTONE 283 CVP)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/ColorLookup [
[0 0 0 0][0 0 0 0][.00389081 0 0 0][.00392157 0 0 0]
[.00392157 0 0 0][.00776624 0 0 0][.00784314 0 0 0][.00784314 0 0 0]
[.0116417 0 0 0][.0117647 .00378315 0 0][.0117647 .00392157 0 0][.0155171 .00392157 0 0]
[.0156863 .00392157 0 0][.0156863 .00392157 0 0][.0193925 .00392157 0 0][.0196078 .00392157 0 0]
[.0196078 .00392157 0 0][.023268 .00392157 0 0][.0235294 .00392157 0 0][.0235294 .00392157 0 0]
[.0271434 .00392157 0 0][.027451 .00392157 0 0][.0310342 .00392157 0 0][.0313725 .00392157 0 0]
[.0313725 .00392157 0 0][.0349096 .00745866 0 0][.0352941 .00784314 0 0][.0352941 .00784314 0 0]
[.0387851 .00784314 0 0][.0392157 .00784314 0 0][.0392157 .00784314 0 0][.0426605 .00784314 0 0]
[.0431373 .00784314 0 0][.0431373 .00784314 0 0][.0465359 .00784314 0 0][.0470588 .00784314 0 0]
[.0470588 .00784314 0 0][.0504114 .00784314 0 0][.0509804 .00784314 0 0][.0509804 .00784314 0 0]
[.0542868 .00784314 0 0][.054902 .00784314 0 0][.054902 .0111188 0 0][.0581622 .0117647 0 0]
[.0588235 .0117647 0 0][.0588235 .0117647 0 0][.0620377 .0117647 0 0][.0627451 .0117647 0 0]
[.0627451 .0117647 0 0][.0659131 .0117647 0 0][.0666667 .0117647 0 0][.0666667 .0117647 0 0]
[.0697885 .0117647 0 0][.0705882 .0117647 0 0][.0705882 .0117647 0 0][.073664 .0117647 0 0]
[.0745098 .0117647 0 0][.0745098 .0117647 0 0][.0775394 .0117647 0 0][.0784314 .0147789 0 0]
[.0784314 .0156863 0 0][.0814148 .0156863 0 0][.0823529 .0156863 0 0][.0853056 .0156863 0 0]
[.0862745 .0156863 0 0][.0862745 .0156863 0 0][.089181 .0156863 0 0][.0901961 .0156863 0 0]
[.0901961 .0156863 0 0][.0930565 .0156863 0 0][.0941176 .0156863 0 0][.0941176 .0156863 0 0]
[.0969319 .0156863 0 0][.0980392 .0156863 0 0][.0980392 .0156863 0 0][.100807 .0184544 0 0]
[.101961 .0196078 0 0][.101961 .0196078 0 0][.104683 .0196078 0 0][.105882 .0196078 0 0]
[.105882 .0196078 0 0][.108558 .0196078 0 0][.109804 .0196078 0 0][.109804 .0196078 0 0]
[.112434 .0196078 0 0][.113725 .0196078 0 0][.113725 .0196078 0 0][.116309 .0196078 0 0]
[.117647 .0196078 0 0][.117647 .0196078 0 0][.120185 .0196078 0 0][.121569 .0196078 0 0]
[.121569 .0221145 0 0][.12406 .0235294 0 0][.12549 .0235294 0 0][.12549 .0235294 0 0]
[.127935 .0235294 0 0][.129412 .0235294 0 0][.129412 .0235294 0 0][.131811 .0235294 0 0]
[.133333 .0235294 0 0][.133333 .0235294 0 0][.135686 .0235294 0 0][.137255 .0235294 0 0]
[.137255 .0235294 0 0][.139562 .0235294 0 0][.141176 .0235294 0 0][.143452 .0235294 0 0]
[.145098 .02579 0 0][.145098 .027451 0 0][.147328 .027451 0 0][.14902 .027451 0 0]
[.14902 .027451 0 0][.151203 .027451 0 0][.152941 .027451 0 0][.152941 .027451 0 0]
[.155079 .027451 0 0][.156863 .027451 0 0][.156863 .027451 0 0][.158954 .027451 0 0]
[.160784 .027451 0 0][.160784 .027451 0 0][.16283 .027451 0 0][.164706 .027451 0 0]
[.164706 .027451 0 0][.166705 .0294502 0 0][.168627 .0313725 0 0][.168627 .0313725 0 0]
[.170581 .0313725 0 0][.172549 .0313725 0 0][.172549 .0313725 0 0][.174456 .0313725 0 0]
[.176471 .0313725 0 0][.176471 .0313725 0 0][.178331 .0313725 0 0][.180392 .0313725 0 0]
[.180392 .0313725 0 0][.182207 .0313725 0 0][.184314 .0313725 0 0][.184314 .0313725 0 0]
[.186082 .0313725 0 0][.188235 .0313725 0 0][.188235 .0331103 0 0][.189958 .0352941 0 0]
[.192157 .0352941 0 0][.192157 .0352941 0 0][.193833 .0352941 0 0][.196078 .0352941 0 0]
[.197724 .0352941 0 0][.2 .0352941 0 0][.2 .0352941 0 0][.201599 .0352941 0 0]
[.203922 .0352941 0 0][.203922 .0352941 0 0][.205475 .0352941 0 0][.207843 .0352941 0 0]
[.207843 .0352941 0 0][.20935 .0352941 0 0][.211765 .0367858 0 0][.211765 .0392157 0 0]
[.213226 .0392157 0 0][.215686 .0392157 0 0][.215686 .0392157 0 0][.217101 .0392157 0 0]
[.219608 .0392157 0 0][.219608 .0392157 0 0][.220976 .0392157 0 0][.223529 .0392157 0 0]
[.223529 .0392157 0 0][.224852 .0392157 0 0][.227451 .0392157 0 0][.227451 .0392157 0 0]
[.228727 .0392157 0 0][.231373 .0392157 0 0][.231373 .0392157 0 0][.232603 .0404459 0 0]
[.235294 .0431373 0 0][.235294 .0431373 0 0][.236478 .0431373 0 0][.239216 .0431373 0 0]
[.239216 .0431373 0 0][.240354 .0431373 0 0][.243137 .0431373 0 0][.243137 .0431373 0 0]
[.244229 .0431373 0 0][.247059 .0431373 0 0][.247059 .0431373 0 0][.248104 .0431373 0 0]
[.25098 .0431373 0 0][.251995 .0431373 0 0][.254902 .0431373 0 0][.254902 .0441214 0 0]
[.255871 .0470588 0 0][.258824 .0470588 0 0][.258824 .0470588 0 0][.259746 .0470588 0 0]
[.262745 .0470588 0 0][.262745 .0470588 0 0][.263622 .0470588 0 0][.266667 .0470588 0 0]
[.266667 .0470588 0 0][.267497 .0470588 0 0][.270588 .0470588 0 0][.270588 .0470588 0 0]
[.271372 .0470588 0 0][.27451 .0470588 0 0][.27451 .0470588 0 0][.275248 .0470588 0 0]
[.278431 .0477815 0 0][.278431 .0509804 0 0][.279123 .0509804 0 0][.282353 .0509804 0 0]
[.282353 .0509804 0 0][.282999 .0509804 0 0][.286274 .0509804 0 0][.286274 .0509804 0 0]
[.286874 .0509804 0 0][.290196 .0509804 0 0][.290196 .0509804 0 0][.29075 .0509804 0 0]
[.294118 .0509804 0 0][.294118 .0509804 0 0][.294625 .0509804 0 0][.298039 .0509804 0 0]
[.298039 .0509804 0 0][.298501 .0514417 0 0][.301961 .054902 0 0][.301961 .054902 0 0]
[.302376 .054902 0 0][.305882 .054902 0 0][.306267 .054902 0 0][.309804 .054902 0 0]
[.309804 .054902 0 0][.310142 .054902 0 0][.313725 .054902 0 0][.313725 .054902 0 0]
[.314018 .054902 0 0][.317647 .054902 0 0][.317647 .054902 0 0][.317893 .054902 0 0]
[.321569 .054902 0 0][.321569 .0551172 0 0][.321768 .0588235 0 0][.32549 .0588235 0 0]
[.32549 .0588235 0 0][.325644 .0588235 0 0][.329412 .0588235 0 0][.329412 .0588235 0 0]
[.329519 .0588235 0 0][.333333 .0588235 0 0][.333333 .0588235 0 0][.333395 .0588235 0 0]
[.337255 .0588235 0 0][.337255 .0588235 0 0][.33727 .0588235 0 0][.341176 .0588235 0 0]
]
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -792 translate
pgsv
[0 -1 1 0 0 612 ]ct
gsave
np
gsave
-37.397 78.0487 mo
-37.397 533.951 li
469.397 533.951 li
469.397 78.0487 li
cp
clp
[1 0 0 1 -89.3487 62.6752 ]ct
58.054 152.447 mo
554.23 152.447 li
554.23 151.427 li
58.054 151.427 li
cp
false sop
/1 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
f
58.054 466.866 mo
554.23 466.866 li
554.23 465.846 li
58.054 465.846 li
cp
f
58.054 466.866 mo
59.0745 466.866 li
59.0745 151.427 li
58.054 151.427 li
cp
f
553.209 466.866 mo
554.229 466.866 li
554.229 151.427 li
553.209 151.427 li
cp
f
59.074 156.926 mo
553.209 156.926 li
553.209 152.447 li
59.074 152.447 li
cp
0 0 0 0 cmyk
f
59.074 465.846 mo
553.209 465.846 li
553.209 461.367 li
59.074 461.367 li
cp
f
59.074 465.846 mo
63.5528 465.846 li
63.5528 152.448 li
59.074 152.448 li
cp
f
548.731 465.846 mo
553.21 465.846 li
553.21 152.448 li
548.731 152.448 li
cp
f
63.553 352.29 mo
548.731 352.29 li
548.731 156.926 li
63.553 156.926 li
cp
1 /0 /CSD get_res sepcs
.5 sep
f
63.553 352.29 mo
548.731 352.29 li
548.731 346.281 li
63.553 346.281 li
cp
0 0 0 0 cmyk
f
.750179 .679652 .670191 .901488 cmyk
true set_gvm
%ADOBeginSubsetFont: GTQAAA+AdvP40319B AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
NVLZYX+AdvP40319B dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B8327ECB69464D293B781B9F51E3FC3A> |-
/C <1C60D8A8C9B7F44AC3FA227E9400E01D268BE8B77FE30FEB3E942AB8976C
C619C364DDF0BEDC0E799C39D564F4011BC6155FAC87E20428647BCBAC47A510
CF3D241AC2205F143A721777940B6A38> |-
/D <1C60D8A8C9B6225AE9C27544606208852712AFE08FE179DE241161F9FD33
4065AC4A61856682AF66846F67A202BD886B2CB2555F08C1B208AC1F05EA6121
3EDDDE22CB44D38361BFB8B48C3F474E6E357B4B1699038F3F3378EC9C2123D5
FEB0> |-
/E <1C60D8A8C9B7BDE395221EDBD88AF6E0FA146EA532A724470FEE5959F1BE
D5040A6C9ACE6694C66F27CFF62EFA15> |-
/K <1C60D8A8C9B7F44AE9E290BDD41C1CB5153BB0E1E9C79B27204686326230
D84D277E94A74D16F0DA3852331AC3DDFEEF67C64809C9213462AC295410C985> |-
/M <1C60D8A8C9B6ABDD86DA029C94CAD3C801501B8FEC9C3B48742F9CECF74C
87D11960EB9699B1A7AA4C6E857E65BD8C56E0C783915D7EBF7FBA2D1E0B93F2
F24FFDB91BBA57FE22BDD973CFCF369A47EB718BC2A4857751E59F8EB71F0F0F
098E4EE1819E0435A2> |-
/O <1C60D8A8C9B639EE86DBD48AEC5C881931A936AD3946DDACB556CCA0EE67
2CD79F015AB5A290E013DDD87EDE76B53AA052FED6461EFD16C09036111AC085
0E42DBFE792769933F7AC860F94B20E6F49EAB75581D286D1B2B> |-
/T <1C60D8A8C9B7B3D0E409FA323AE536DC81E308680BEFC20313BACE9C9968
CDB2> |-
/a <1C60D8A8C9B7BDE39526D7365C3FAC2AD898B85CA719AD3E19A6842C97A4
1651747481DB412B80D9886E9EF9CC1542D1D8B5AA917E676AC81DCF986C7A5F
1CAB6DCB6055B3E3A7736414D699830023EAF338C2802F7620E893054D7EB7E8
0B7E6922214A5F4FAF5F312677D87BB4EDDF52> |-
/c <1C60D8A8C9B77C895E41EB7FE636E660661C945591AB9BC383EC5FEB9061
C7C983008DF90B999E7203A2B21D4958F2426D890DDE1268CF8FD369E25E4EF9
62266C163AD66971> |-
/d <1C60D8A8C9B7F44AC34C7EE91635E1723D9409225A030204A013CDC1E145
5FA22679652D421AC2AAADB38C76962184D20871ADB53161BA4E1F746E283041
B74B8BBE5681A9CB3569268040D77689033BDEE1133D38EA8D00B8079A39D5AC
E239B3C6735BFB2750BCE64B10E61E06C161> |-
/e <1C60D8A8C9B7B3D0EB89ACD8CD8246CE9BFD0EAF9DBF9B123C056CAB1F01
0A464F7BBF2A193DADD687DB6AD14E471C116893285EAE9BE8C71707EAC2D674
E581ED21443343B47BB400FA843A1A55FDFFCCA83D572B> |-
/f <1C60D8A8C9B8286E8407E29416D7C68CCC46C7CC261F106F4771388CAB66
4A6880E3B79A71C7CAD1C97B6025342B94BCE8C5376CF40CC7FC4DD9195CFF92
57E8E78A80CC0245AE> |-
/i <1C60D8A8C9B8666CCB4A0C66C746E0504937B3BE253EFA034C1B95D57471
3F83181A4858F73B29A18092463C82E153F740> |-
/l <1C60D8A8C9B8666CF1AA987BBB2816ACA413980C40> |-
/m <1C60D8A8C9B6BE2F6BD27490D660D74B634A8D0B8BEA14EB479DABDC371F
8C1EEFC2DF3C62E9D4DD5B06398512D67FCADB39DBB5C718DE80B5E8386DAAE0
15E7844E47B367319C795445E6168BAA85FFC7096B7B568CEF306FE7066C146F
FF9BB68E3D6A7983A818D2E354411B6F5BFF71B28B3B2A496E172438699D> |-
/n <1C60D8A8C9B7FF2B1358DFB236D288BDA3970A270EEFCA8C43D256D330D9
9ABA7C13BFDEC27C6D40F8EC379372A6312747780E21F1F8C7D02C60028F0B24
583D9B6EA34D4ADD24CE2906> |-
/o <1C60D8A8C9B7E965A9AA17ECF08D63C33E68A1E2B6FFC0CCFC69B80B718D
68D2231E32F2999E279D49E4DE4ECEF69861FD77077961B87E3A4AB849422E6E
A9B6990FF3> |-
/p <1C60D8A8C9B7F44AF694008A3B18F8ABB6438326A128805C0AA08E6E2D6B
80478658EA87234B9701CADF3A5EBCEB12ED455C387755AAFF4D6771A21A549F
FAA92E96722959069B6CAB3381106A942088228FFAC39835570863F4C3583C77
EB532644EE557A33657F04AF6AA02C> |-
/r <1C60D8A8C9B80898C9AC4588E2341A73DE8509FC985F6BD0C88CB89BC0FE
A757D2621978C67AB5A8A471C7F9EB5BB3C17E80F36CEB6D4241AD62A51CB3C9
262ED494DD078CA7> |-
/s <1C60D8A8C9B71B40E80B4F03B475ACC9E825398D2BCB1759C23C07863F1F
9A1F4823F2FEA888EA2759937E61B230DCF2685D062A8AFFEC20F92E8EB273F5
0AD4D10697C88DE84BD246F84A3489AA62BBAF862D2534035DE0224B08F6E1AD> |-
/t <1C60D8A8C9B80898E6E5F302853745F0F473B8B3A0DF0CEEA5EAE4F717E0
A2FE12E6FDF3F9CBB3EF51468899DFD44D2DB46020B2C48ACD6E1B1602AD9822
64E9422DB88AB3DE31B848C41B> |-
/u <1C60D8A8C9B7FF2B262A7E5610F1EB893C016670EB05D8AEAFF91E32DA85
76DCF7DE5648BF0A0B356924B8C3E9B5F02D1DF8C52E48D8C6BB6826E9EF3753
B2790C46D2564E61B2D622231847DE> |-
/x <1C60D8A8C9B752AB2AF06FB99E4A1A1D24CC9730C53497B62B7CDDD1D9E1
CF9E2409AA1E4F6670DE3D0306093AA912FAAB210940870A30854E642A92C7F6
84CC7BC7EB6E69646CC68C6FF4F622DB4480F66CB62ECB387F> |-
/z <1C60D8A8C9B77C893982CE598639C06E8DE598A47E9E5A7EC7C317E6317B
05A08CD94BF6C704516AE4588D9E7A0153341A53301EBB07C57EF27F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NVLZYX+AdvP40319B /Encoding get
dup 45 /hyphen put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 75 /K put
dup 77 /M put
dup 79 /O put
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
dup 122 /z put
pop
%ADOEndSubsetFont
reset_gvm
/NVLZYX+AdvP40319B*1 
[45{/.notdef}rp /hyphen 21{/.notdef}rp /C /D /E 5{/.notdef}rp /K 
/.notdef /M /.notdef /O 4{/.notdef}rp /T 12{/.notdef}rp /a 
/.notdef /c /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t /u 2{/.notdef}rp /x /.notdef /z 133{/.notdef}rp]
NVLZYX+AdvP40319B nf
NVLZYX+AdvP40319B*1 [19.9253 0 0 -19.9253 0 0 ]msf
58.0535 71.7166 mo
(OptimizationofTime-CourseExperimentsforKinetic)
[14.109 11.6183 7.05563 5.18246 16.7991 5.18245 8.90872 10.1638 7.05562 5.18246 11.2 18.1899 
11.1999 13.0671 10.3632 5.18246 16.7991 10.3632 6.21861 11.6183 11.2 11.3994 7.05563 8.46228 
17.0083 10.1638 9.74542 11.6183 10.3632 7.05563 5.18246 16.799 10.3632 11.5867 7.0556 14.944 
6.41803 11.1999 13.7366 11.6183 5.18243 11.3994 10.3632 7.0556 5.18246 0 ]xsh
58.0535 93.6564 mo
(ModelDiscrimination)
[16.3827 11.2019 11.6203 10.3652 11.8674 13.6926 5.18445 8.29292 8.91071 7.05762 5.18445 16.8011 
5.18445 11.4014 10.1658 7.05762 5.18445 11.202 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: UPTBAA+AdvP41461E AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
NVLZYY+AdvP41461E dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/comma <1C60D8A8C9B85C5CB8E0C2286EA30287D7560631B12296049A8AD6FC
B631D4> |-
/period <1C60D8A8C9B85C5CBA797E0DB92A2668A29C078DEC62080E2D20EFF
395BC2E7A98A8643A> |-
/one <1C60D8A8C9B7CA642A3A1A0DD3873DE6F1077FE76AF817492D1D88D2FA
EEDAEC0B8AE6E8> |-
/two <1C60D8A8C9B7CA642514722297E56CF0D81CC91B444F9934D9E05C34A3
6EF3AED2561EB5B3BC0A080013D61C2D69BBAFB2E4AA727BF68663E63A19D9E9
91439D0BB8D0EA8B23F11C88CB35> |-
/colon <1C60D8A8C9B85C5CBA79090A95C214FAFAB8A5CA5FE5BFA4ACF03DF5
A755C77D9172B6529F60BAAD5E357211756ABDB7BE63A7EA348B9C8B787DB600
EBC212> |-
/A <1C60D8A8C9B6035578B37A2AAA73783D3DE9F8EC4B55439EA8C99EE3A4B4
FE0854B18A643FBF9700B8AAA854DB2F164FC551E7B6C93252CABFE8E3A1A570
B70536663A3E2E0694> |-
/C <1C60D8A8C9B64FADB5FB0977EF3DAE86BF4EB1166C0827C8539033764B65
9E583B27FE963B15FAC432397C12E6B653251FDF1F7343ED0FF530EB3EFE0458
DAA9A19B4A29E6CBCB0CB174390AEFDDD8> |-
/E <1C60D8A8C9B7F44AC3C0E9DC86C1D1AC22F0892CAF4B9934B81B1D68BDCC
C5CB83E0146B45D79F4B2D0BE01C59725C47> |-
/F <1C60D8A8C9B7FF2B0E50473CFD757CD7E8CF10EC9FC59CF529BE48B594F4
28D8EBEE9073C7ECD0> |-
/I <1C60D8A8C9B83C8E8101E429095A426BBF054DCA8E6782> |-
/L <1C60D8A8C9B7931DA0E4D2FB539C4BB542E497EF2FB52AB9551AE3> |-
/M <1C60D8A8C9B5BA43D81764CF198C17A7F6EB9906F235C50BF6EC530DA9FF
91E794780743FF5E21CA1848C630075F0C1B6FB019B41EC091757CED9EFF264B
0C16037AF9BC4E5F42B225A8C3DB40D567FDC442623F90589B6B9FEE462D5847
8730013C0CE5C678529F6D2E> |-
/N <1C60D8A8C9B6E3FA5F23BD313832CC4E0C114EB7D1FC19132AF664FDB1E6
46025DB1726A911F0800D174B3B4B2B5AA34AD9C19BF0827C2AF298EF03564E3
DC2243FE312A0184372DFBE1FB7A27> |-
/P <1C60D8A8C9B664829B2760B40D8ADA70946DE1F12F694091A0CAFEEC8DD8
D25BEED075C20AC053BEC0BA54F9FDAE43B54401DCC3CBFCF63392285B76E6BD
34F1826845B934B7BD8510295D1E894CC7F59730C50373F6BF9CBB47> |-
/R <1C60D8A8C9B66EAD2F7F66CD21A0756B3C3ADB0AFF17AFA8EC2E5209DFFA
0BCC6F2ADA001711CAABFAD95C6648E6E3D03B138D0BECCF1411016A6E1E5391
2086BCBB9FB33D844ED28510E569912CD3158CA4F8304DB689ACF7BF6C5AFC5A
53603C4F5081563A09E4F18B92> |-
/S <1C60D8A8C9B7CA6464C0002173011186C53E07C1E818CBED91C6340DD8B5
CBBAFC6760C62DB1F8E4F5A56E3AC8561B834DEDC3D60BDA25A9B44191E596C3
9CF2A151CCC35B962D6D2CFFD12EB36700B7FE315E09B306D9CCDA784B9747C2
DF9E1343F896> |-
/a <1C60D8A8C9B7E965A612C11D0B7202C92A96DF1DF9026D019F4A4A60B4EA
2C25C7D17B1E312512800687366AF52669B58CC1831D32BBEDD0616D0724CE9C
E34300132E6AD9CF3AD302E053EBFB095C8D6CBEC593AF1AFE3CD86EF6BFCC94
7C15A42E8F8328671013EB71126E6660B3946D> |-
/b <1C60D8A8C9B678BD23354C45CA5B70687866D3C450975B735DED6ED34FDF
EE05485B5E4B3C3589F2456493EB8798342F3B5FA0445E938EFDB386E7B93B79
C46544FA881620B4A816BDD5C4D7FE9527762033290D8E73EE5CC3DC4102DFF7
76189206E78350BD4446F62EF0947585A1B6> |-
/c <1C60D8A8C9B752AB44AE7C965DD0B13E2DEDA3A637AF0734AEBDA8930826
02E5AE44129247B71EF244ED0159CD5721F33920440339D95DCF6021CE49B3BF
68C08901A1BFD58E71A2EEFAF2> |-
/d <1C60D8A8C9B678BD167E891382A7459320A80DAD63C1CF4831DF01B66238
B9017D71B7EE60BF28C52402934DE67F93E22C4C06C16C28AC9D697CCC25D696
6D805734C84140E7D3F1129255D7802C5749592281F277E8CB03473F2F7C75DB
545F293591E118153000749E4275C5AF3DBF6F55> |-
/e <1C60D8A8C9B7E965A63E46520C79A95024280BC683A2D9B25294F6368709
B14E943F526105A4D9594FDF5B058FAEE6E9A0FDCEFB59286EA457DADFA06A2D
639A521E41174BCD3D95BE3187B0C2B8A4EA6D02CC35E5CF> |-
/g <1C60D8A8C9B66482B343523E14C4554D0A78C4D92495F0E721064289CF8B
7CFE1D99A20D4CF22AF9F50833935FF13FDAEC00A6299CE031A311D7D5F9A3AE
5B53968A43BB7BCA16DEFABDB4FA04A2F886810AB5B4AAD6D7DF52B1929E3EC1
113D44BC0715D998E5D954EE03F12674380814E19CD70386DF4B0CD782E3E060
956905B3536879CFC5C397DDFA287D0861C8> |-
/h <1C60D8A8C9B664828654C28649B1006FCDD8F0F131B282E70C83E5E3C93E
5BF8426F68C1E0A13229EA99505C1C5E94B426129379DA826B3C6D84E6560AF2
06DD201C4F915095A05DE2C2> |-
/i <1C60D8A8C9B849F23CCEBA8D3385711C8D64FDCCF7AE06E1076E91B5C9F0
570329B763D5B91C5FA74D739E63CF35E1> |-
/l <1C60D8A8C9B849F2062655D26782A09C100319F838> |-
/m <1C60D8A8C9B5BA43EC71E3899174928EA2EB759329EAC9DFB4F6ABD2F1A9
D9BFE4A38E930B0FB72A0B5401F5613E2F2E4A3F73844AB866FEEAE356183D8B
3EC320097D83A32291C9A90A3E900C3D7D6252C08089375B5F4262E61F1AD1B2
907A9682C115307B5202DADE5A55660553AE9B62C1A81CDC5F16AF5BCB684B> |-
/n <1C60D8A8C9B664828654C28649B11B2996B499476EEFC44DCE37B41AF29B
76ADBB9F5B0C22C58EC55C07FC453C0992DC82EF54A04A89550E3DA97FDA3667
8149885691FF26380BD40494> |-
/o <1C60D8A8C9B66482BC0731338F634423FC7CB5AE7129A5A5B0442783DF73
B2AF48E2C6AE215B4BCD33E408719246A401855C58BE4B4A4596C959C6E317C4
925D020B37D5592F902C> |-
/p <1C60D8A8C9B678BD2339FF05673F7D03DAEAF6C85915AB56DFE279B72B40
3230FE40200225F5F903F35717699A3A9D5795C24BAFA366870BD5A46CAD155D
E2789977F0517A280CC793C6C5D5156AF3F2547E90120DC3CE6DA302E511ADB4
00AE1D9E95C19D9CE3D1B06B56402B> |-
/r <1C60D8A8C9B70582F69F291F819D6817449E0834FDE43E301BFB0A3D2C3C
B3B7AD434B9F8F5E689C5E73FEBC4BE91B402CD106B8A37B0E7BEFE255FD3BA9
4DC76BE687D088E536> |-
/s <1C60D8A8C9B747CAA81C13FE3CE96251B7F24111338883F2C3917D0D3CD7
6C024819E905E35DACCEEBA39FCEB6708606C9789A06CCCF8B744DEA60375010
D0D2F29F74BE91274044C880259C5469A2CBB173B915DCBDE83AB70D20BE8048
8445> |-
/t <1C60D8A8C9B73A412832454DE589343EC64D04B2EABA563D000CE2283052
26208DFF148B1D326724D81FA3AA9CEA4EB2F66AE33C8C5097A48D814A1C2063
50A0C0D4C444BE026ED237A61316BDA7> |-
/u <1C60D8A8C9B66482B34E7BFE3C7545D36DF19E4C81019E2DF98DC60D66CC
A8A80E5EAD6F2CBEC604EA131EF93479381A1E343A132442ACE34BDE284D5CF0
E8A41F17DAB3470422283AA10A6347> |-
/v <1C60D8A8C9B7FF2B48F230EF514FDB71F912B16CE303B1E91A69A110986C
14FEBCC1F50DCD338F9FBB88C5CACBEBADF5E27512ECE488> |-
/y <1C60D8A8C9B7E965CCC768015373E78D4ABBFFB895F71B6C8A2D2D4DFD3E
CE47B63875B42A13B195F2E1CED0B77EF6D9C0E310AB23AC361AD3C247917D0E
C523A81CEA4A4A4F269FB51A08BDC931095D63B3FDC6E23B52DBEB442F250C6B
4E1BFB33> |-
/acute <1C60D8A8C9B83C8EA6FC71F8714ADEC666A5942F9CE68A60651949> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NVLZYY+AdvP41461E /Encoding get
dup 44 /comma put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 58 /colon put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
dup 194 /acute put
pop
%ADOEndSubsetFont
reset_gvm
/NVLZYY+AdvP41461E*1 
[44{/.notdef}rp /comma /.notdef /period 2{/.notdef}rp /one /two 7{/.notdef}rp 
/colon 6{/.notdef}rp /A /.notdef /C /.notdef /E /F 
2{/.notdef}rp /I 2{/.notdef}rp /L /M /N /.notdef /P 
/.notdef /R /S 13{/.notdef}rp /a /b /c /d 
/e /.notdef /g /h /i 2{/.notdef}rp /l /m 
/n /o /p /.notdef /r /s /t /u 
/v 2{/.notdef}rp /y 72{/.notdef}rp /acute 61{/.notdef}rp]
NVLZYY+AdvP41461E nf
NVLZYY+AdvP41461E*1 [9.9626 0 0 -9.9626 0 0 ]msf
58.0535 117.581 mo
(NunoF.Lages)
[7.47195 6.22662 6.22662 9.61192 5.69867 6.03638 5.49937 5.59894 6.30633 5.59895 0 ]xsh
NVLZYY+AdvP41461E*1 [7.4718 0 0 -6.641 0 0 ]msf
126.992 113.159 mo
(1,2)
[4.43154 2.01816 0 ]xsh
NVLZYY+AdvP41461E*1 [9.9626 0 0 -9.9626 0 0 ]msf
137.877 117.581 mo
(,CarlosCordeiro)
[6.06627 6.6351 5.59894 4.04488 2.89912 6.22662 8.04382 6.63509 6.29039 4.04488 6.42592 5.59895 
2.89911 4.04489 0 ]xsh
NVLZYY+AdvP41461E*1 [7.4718 0 0 -6.641 0 0 ]msf
219.628 113.159 mo
(1)sh
NVLZYY+AdvP41461E*1 [9.9626 0 0 -9.9626 0 0 ]msf
224.05 117.581 mo
(,MartaSousaSilva)
[6.00948 9.12575 5.67068 4.04488 3.83554 8.95734 5.90784 6.22662 6.22662 4.66254 9.00714 5.90787 
2.89911 2.89911 5.69867 0 ]xsh
NVLZYY+AdvP41461E*1 [7.4718 0 0 -6.641 0 0 ]msf
316.8 113.159 mo
(1)sh
NVLZYY+AdvP41461E*1 [9.9626 0 0 -9.9626 0 0 ]msf
321.222 117.581 mo
(,AnaPoncesFreire)
[6.00949 7.15317 6.22662 9.01312 6.22662 6.22662 6.22662 4.8717 5.59894 8.03986 5.69867 4.04486 
5.67667 2.89911 4.04489 0 ]xsh
NVLZYY+AdvP41461E*1 [7.4718 0 0 -6.641 0 0 ]msf
414.765 113.159 mo
(1)sh
NVLZYY+AdvP41461E*1 [9.9626 0 0 -9.9626 0 0 ]msf
419.244 117.581 mo
(,Anto)
[6.00949 7.15317 6.22662 3.83554 0 ]xsh
444.188 117.128 mo
(\302)sh
448.78 117.581 mo
(nioE.N.Ferreira)
[6.22662 2.89911 9.58304 5.80811 6.04037 7.47195 6.02045 5.69867 5.59894 4.04489 4.04489 5.59894 
2.89911 4.14551 0 ]xsh
NVLZYY+AdvP41461E*1 [7.4718 0 0 -6.641 0 0 ]msf
530.476 113.159 mo
(1)sh
true set_gvm
%ADOBeginSubsetFont: ZFJAAA+AdvP403A40 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
NVLZYZ+AdvP403A40 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B85302BAA68E275C599FA72A527A4F19D0D9FB48B7
260A63B36EFB75C4CD9167E0CA6FD572C44FAC57DB128E06BC2EB4> |-
/parenright <1C60D8A8C9B85302AEBF6FBFEB5EC6C2B8E3D5771312C6BA39E
AE8C106B5812236173EE9D196FEDF2EEC097B91C357D0606DACF3> |-
/asterisk <1C60D8A8C9B71B40B021A82CF9026A13C2DC432C4C16E34B5CBFF
C1944D58B961953D4D642E0C1E8DE590C8E6E1CE976217F641C28E71CAE442CF
9B9D45C75EC437D2F0FED55E1B17D249907A7D5FB8351D3820829D6A581> |-
/comma <1C60D8A8C9B89A426165C24CFCD99B50A85D0039B06E7AD2A42190E1
E158A732> |-
/hyphen <1C60D8A8C9B83C8EF81A01689E3D8EA90969870B9D> |-
/period <1C60D8A8C9B89A424CACE125B45B3FF0EE2238FECBA8EF282929DC7
2E8FB2AD982D17DC0> |-
/slash <1C60D8A8C9B8151C1327AC245019C19D3B8B5724002A8AB3D2> |-
/zero <1C60D8A8C9B7BDE39AEEE8001F1D5B25B6088CEF05E3C604A427B73B5
97743DB81D9E596007FF2B4EABD3239DDF5B6914410BD19244430C338E88F0DF
9D1149B180643CC8491C2A9CC9DE452036A5462376C> |-
/one <1C60D8A8C9B7BDE39AFE46FB64344FC7EBA1DA87829D48A0D2DB758325
282274AC> |-
/two <1C60D8A8C9B7BDE395162FA5ADBD6BC638E8590DF3D96C555BDD7CD003
9566F003C1F2EA76B31F3208BE52D642CF604E3B2777AD061AB27A09291DEB7D
00CAD8835CE93B672654F07D81C0> |-
/three <1C60D8A8C9B7BDE3D8D08B18A599C0198FBD6E70994A2C888BDFABD8
E56F8E540CF3F00E332E5955D5B3ABB897B0C867B350189CEE8B29E1E5D0183E
D9450B2BE106FF6C59BBE826384F37F40ECDDFF57FF0D66399BB2C5B3AC86969
B0B8CE65CAB2BFD59084CE> |-
/four <1C60D8A8C9B7BDE395528C68887C5E59364EC611438669F75FFCE5F0F
573FAA0A4BD7F89584682E920C8521373C45862AC429AD26A1A1F39E6330390E
9F506BF914A9690D37F9BBC> |-
/five <1C60D8A8C9B7BDE3953362103D6FC2342009489FEC21D4CDC28E053C7
3D8C111445130A37E2155AED0017B1477BF3F83FEF6C902D86978ECC1C7548BB
29B6C2EC1BB8E31A58AEF367028CC30DABD1185BFED9255D72930374F82C2D7E
001> |-
/six <1C60D8A8C9B7BDE395424D03840F25BA9A6982E40677111ABFCBC65ECD
018D3075BD90FBB5A2516DBC155E3D06A7C73F8BEF3E71B8DCE30E89712CCA14
0F6213B2EABE94FB0835099B6B60F67201409164B094AD19E91A4136C991AA15
03198A9F14DF1F467C1091533422B3EDCA815DADD5441556FBB5D9> |-
/seven <1C60D8A8C9B7BDE3A96F135CB0D0CCC1461B68AEC59D58EE6C42F1B3
7EB24D60FAE8EE> |-
/eight <1C60D8A8C9B7BDE39AE4A0D6BFB692E94805A876989384DD8C4843C7
9E85CC1A1B6EF52695E1AC8E8F4FF5214A528DBF2D0C1B0C1A3EA7282C717327
1A00ABEB818F95BF0368B3B8CEFA4BE9DE67E71274AE5709063B9C75F33E0E7C
C786AA91D9BFCBD7C1314A3783B0CDF0DDB518395455F757C45E14476EBD0B88
93CBFA151C14A606C83F86> |-
/nine <1C60D8A8C9B7BDE386DF55631C307C18C4FCD79CF7E91B4458DC29F26
A77CB669A716FCC09EF5E846C9583502E31819BE28187F406EE4DAAA88D5EE39
8958B1750E3945EFC6F785C5C3AB77BB16125CB0308D70EE7EF670AAF02FC9D1
BBF0477DB5705A00B78A2FBA6A5DF4DC7D1203483A6EBE38943D64F2700C937> |-
/colon <1C60D8A8C9B89A424CAC976F1B00600FF797654EB01A65D1EC01682C
2C64A411835485172EE0BF1D8B003EFFE1A08D311920CC6401E0F2C1F909CF54
C42D12> |-
/semicolon <1C60D8A8C9B89A426297BE914839DCF7EF187F07CEAAF8E8E0C5
BCDD24AE4AC235DBBDF4A7798A083CFF53A0315FA7DF5CDAAC35CF43F59723> |-
/at <1C60D8A8C9B616A7ED763848726C55C1299F1F1B777C0D15DF21F1EF9BB
D86AA5059DEC584536DC07BD7EAE6D090C23D3B95F7207931414522D2C8F38AF
58FB7B24388339E1ACB5EB7907490AB08A2CDBADE5F609785A875494F5E1231C
4199221D4937C3107D13965B3D8ADDE1EC527456FB5CF27E92FEABD5F5ED4D7F
77491098CD283EC4D35B0F8AEE447EC5887714ABA38330C5A37CBE47BFE6A7C7
7631AD949A97A5DFEA1E43723> |-
/A <1C60D8A8C9B7D5457844B370ACA31D12FF48BB6907C7499D3B09037D6E0C
8FA06BDF45255C6EF5F49D6AE3438A3E21DE801ABDF57A02F3F22104F9F96ABB
1CFE2FCC11> |-
/B <1C60D8A8C9B79EE36C8176EAF75A56D106462AF22CE4C687868F1CB70DFA
E168D450C09D3393C35754A0B40631A65FABCA83EB6E4E37EA29180B8517D3C9
65743F3D172067220F3BEC93BBB33F3FEDC9EE42EF23EDB85967558133DF4CFC
1D030885B1913A36565047D385156FDEED2E97DBD46C06> |-
/C <1C60D8A8C9B7F44AC3F52BA041DCC53A1C55E420EEE41D7DC2797F9D6EB2
E08F8E7B4776740B2A8E5E2930E74A8FFEA7AB13C6242CE535AEA5E71C6D25AF
442388E28C9A49538049AE657159B0> |-
/D <1C60D8A8C9B64FAD9ADA0CC796B76A387DCC3510A8AD8F61487634A68C56
22F5A5DA9CEA89A7D23E4BEB3AF68814580F49E2DB3E5ECFFCCBBF3381C97C5F
E6DECC4E2E90F45488EB5AFB9D3791BDFF3D1370FF28A9E142D0040483A4FA> |-
/E <1C60D8A8C9B752AB44C2539C37359A1722D4CE98BC295F8706D4E8FF1675
7064EAE1F7DF43D8325E8F7E96F23558> |-
/F <1C60D8A8C9B752AB6B673242988583DCBFA44468AA6F018C29DCCE6DD9F4
09F7FD3C0306> |-
/G <1C60D8A8C9B678BD16A7775C448138B1AA9E444C48469C1DF88815F81034
250FD6E841FAAAFC8A9B1A1D36D549C63B1DB93E99A4BC8737AA8D3D9E822ED0
8937613BB7297BAE0151148B2D587073A540775FBD4370C3E99FE9A60E8F83F0
744F> |-
/H <1C60D8A8C9B6459D8965881AC74B9A9D7EFDDDA0821A94DC830D30B8287D
6B43610D40DD1681B5F7FBB28877> |-
/I <1C60D8A8C9B87DE072462918259BCF743DA155B9DD7D> |-
/K <1C60D8A8C9B79EE36C1AB78A29BFF70D7FA38536ABC383AC70948D6E63D5
E4232CAA642BF7BAC203B56CEE2F59BC457767D8D66BE18A5330E9749A> |-
/L <1C60D8A8C9B747CACF3DD0DEAD67E4DCAE9C3DA39D973380ED> |-
/M <1C60D8A8C9B6D747EC19297B2C9CC006A401366D9268FDE86DEE0B8F7025
63760556D6EB16EF5801351345BE628C9CDC1C2458AD9F88C56F1292242C998D
A6AA79E8236AC5B82BA8AE401F92FC41275B6D3BBFF9CA0EC20B5632CE4D81AB
7E9DF0BE215285862666D110C1> |-
/N <1C60D8A8C9B6459DA9589973B8A8668BD0051BA7DC68AC4C18109A48A861
898C045BEB611D042CEC4CD7C7772E743C7FB047462275D0C6F3985A1A701392
7E97A6369D6B9D3B219DE2505017> |-
/O <1C60D8A8C9B6225ACC042CB57DDEF18CE774E24E89B0C51363AD9FCB4888
E2F2D4E28854B73315B866F0CE56CE444847B45C05B514810D2FA5C7EAB39CB2
D7DE273BC0D3D332D9A56897988080BEF6D29B8DFF2B6535DF76> |-
/P <1C60D8A8C9B7883C1BDC80E1815AFBB69F4572874794C3DE80E86D6704AD
B1BF1D1B3C59BE1F990E58A799CFE042FDE57ADCF15118C791C6F495B27B0B92
39DAA7CB1A183C56B13D603C542755B36F771568839C9C452C> |-
/Q <1C60D8A8C9B6225AC2F946EBB455E0E228D8906FE6CAB966A4DDB3958E29
1DBCF9DE68B917CB359ED148B7C34EACC84D6850EBAAB040A2EF30B7248118F1
609B56BCEC64A57D2D2B6103F8D0F9DE5DB01850423336B7969DEBB754C71D71
D85337FC50B264A3352FE800F772A2DFF52707200AA9> |-
/R <1C60D8A8C9B79EE36C1AB78A2992A0A6E5ED01BBA85CEC90962C958A9590
0A06EBB7E79E1E4F17AB0DD443CED832967E64D4D22076586ED0E1C095E93E57
4CF329A6A2EA861F40D8C0EC19AA30D294D104F92217C3AA1E5145979761349C
210E2ED150E41A2C> |-
/S <1C60D8A8C9B752AB09C06DE6C9E3831B233F3AF6527FDCA7AE57C09BAB21
666F9E2EA76D9D8B88092E28D1BBCBEEF897FE2963F851403B746C012D679B81
A234F7C84BF8AA88E24ACDDA361806B2B0BEE1A41CDE3EC49CEF668196414AE8
33C8> |-
/T <1C60D8A8C9B7A73DB9459B2CDCE4443B9531AEA0F76DFFB0D93CCC54BFC0
26> |-
/U <1C60D8A8C9B678BD384851DC09AB77F715D8DA331908708D27D701F6557B
B0CB5B6094A65832F25E3F129D0E1B8B06AC816B601D76C873> |-
/W <1C60D8A8C9B6BE2F51643496F8707F1F80A11EDEC9DFD3B6DFFB82D4CEC5
240847D0826D3902415B844921E27ADF99F7098840DCF71F7C0A0B4AB0376B0E
EA3E0E3A2F16013292A07180F5789E88BBE2FDCCB0A9BD49B945C459A2ABF043
DEF7A2A98178D60AD9> |-
/a <1C60D8A8C9B75CBB532C72E15ED2FD401A85A630C7BD9D4B5DE43B4BA705
E440172021CFA596439929081863AB4930636396410A43A878AAE1AC429F80D1
5561D4362C5CA2D4D89BCFE96D45CA17151E4853FF9E9D858C420CC8A71D91AA
8E34BD5EADAD19DD26011294439C2846A4> |-
/b <1C60D8A8C9B7FF2B0AFB3B867148938EBB641CB936990D125A40C4A1B3AF
E14FBC342BDA03B9BBCA60B796F2BC81799F13D635748D947811021081C0D86A
E889C5E17B71A731271E8CC0E60EBED2482E1AAAB97CE594858E53CCB0CCB6F2
F0472A8096CE17795B1934ED0B2E1E47> |-
/c <1C60D8A8C9B77C895E4D145CF52C8C12D524AB850931EDFAE84681C04B1D
0BD9FC32C0D76C7B9EBD970FF37A768BE1384D98E4345CDDEE6C2AF8FAA89B14
8B862F60175526A2DD66> |-
/d <1C60D8A8C9B7E965A6BDE097ABA2E36CC6FF857B1D424DB3CCD6A356BD48
B8AA3641ABC09DBE3E32B70AC02CEE2657481EDE03ABB9F5240AC3E84F193C82
536B4DC479B033680762D120C459E9A56D9C953B129B0BBC4E3EF6C8D315119B
FF1ED159B4325249C664A58D8869> |-
/e <1C60D8A8C9B7A73DB6DB467EDDDE6DB9260D5BC811627416DCB29895845C
1F86C7B2045BE3336BB121E2708B53EC623A9078A22900F751977B26EA878074
5BE947C392E7489C5281980B8095FCF2C83DC75E9F832A63F1> |-
/f <1C60D8A8C9B849F23C868BD91F50EA4BE6DC42D3419E8D9BEE5F082078AF
902D3314AD04808834184FA1734A9E9FF896FB82757A68A32940BAD100FAF041
64F1E3F4A7DF94B559840C> |-
/g <1C60D8A8C9B7E965A6E0A5A5ABA63FE7BEF03807091246C776FC58290D78
9C5ADABAF454BD7CBEAA723146583AE4CD0A0535908C883A51C49E728E2BA515
DDBE0B63E2201CCCF3842B6800CBE0712801BE5C89D91F778E03690D0FA2AEA8
25987996B54FE9DA73E5673AB444A05D5D9FA6AC56AE4D2264B9DA3CF9018885
3EBD93B4693A450A2BF45F03FB5CB99FD1> |-
/h <1C60D8A8C9B7931DA43D08F75054F943E540F49FF3AF9F52297A7469A67F
E4FC427309499EB5C67AA759486F3A64C0B9AC4D8E5A9F5DFCD45A359CC4CBF6
1214139DC8A2791B8D> |-
/i <1C60D8A8C9B887F0644EF4FA1428B2871531957515522711D03D788153B1
349042C87C8819531F0C1BC0C7291EC52A6D> |-
/j <1C60D8A8C9B87DE0CDDB4E43EFEC9D1CA3689F6DC2F0E119207B11FE667F
D182090F4E2B100ADC25D7E0293710B5997F541EFE2CCE010D3117E4EAC78C12
7AE61DF2577684BBB093994A1886D373D2> |-
/k <1C60D8A8C9B747CAEFCC3D7E76AD41349218E6F6B2881CB57C1131238076
2A0DF944C16182FDF6BF1945B6326C1EDDDA21E92F3FA686B923930256A438> |-
/l <1C60D8A8C9B887F0470F7B9681473C21F6ABC2> |-
/m <1C60D8A8C9B6B41C982E13E2649EBD96C075211DFE40A107793E1E3806EF
C8F2D3A947738997F2FC0B76B0FB2139E697387C1F1494D40ACF3A40C490CC8B
351667199FCA79990E5C67D7387A0BB1A2F641B707B71F091C35CBE6F99BC4AA
87F6B5BBEAD03F77BA4D5ADFD6FC46AEFC701E63C66CC8C75FB8DA> |-
/n <1C60D8A8C9B7931DA43D08F7505BA4FC90A4689CC7E4CD918E44DCDCAE55
340784221A9A84E0999ADD8838BF7FF5AD85FDE7C5383FB133361DADAD95C884
7734F47B7F84068A7C> |-
/o <1C60D8A8C9B7931D876A370E919146432C0C341A7420B031E7465418C2C2
0ECB12042E3B67082B184B7D29A6CBFEC3469E163616C20EA79141B02F623927
69DFAB1BBC72> |-
/p <1C60D8A8C9B7FF2B0AF7A9C985CD32E530DC47C1BC8C2D7FFE126E67E1EE
A1584B723C5F5FE0B7028F296F8752CF005CD26CC3044355E5A690B6EE78786A
E1EA6922D52221032843D29886D1F60CC94B2026B5A497B5171EC3E966BE7329
E603ABEF10366892901562C0> |-
/q <1C60D8A8C9B7E965A6BDE230F0B5D1D22CB3FB62EBBC7643F10ABD40E144
FF01D60D7D5A55C0D49C366DDA9C1D9B25D24EC217B6BBF5DC3ED81F9A1E729B
7B70DE04902C63CD95DD8EB2D42F1D6C35B8739B248525F7DCA3074CC294489C
725B40FF1705DFD661F10DC8BE> |-
/r <1C60D8A8C9B8286EA787A5B80838F313D7AA0154F2102E1A0BA36984F41A
EC852CDBD12AE086E135C32CBE00480B8DD55C4699C419DADED0DF6B86E5CE00
0EAB0D677E6C> |-
/s <1C60D8A8C9B7303168C286AA86FDC4BBA70742CF8E7B644B291FDDEFC5F1
CCD90C9883D45540F0756DA0E0172ED36DBBD8AEF2AEBF56C6D0DAF59AA7EDAE
437B13BFBE569502AB9242A0417CB0F16F95F46CEA48D679B61C011A71DE03> |-
/t <1C60D8A8C9B81F2C25340379BD3B1A2770CFCD73D80E3C07D118FEC71099
D2705903916366831851B798FA5F26DF46B9E967FD6E76E20019F1B94D5F5BF4
851F963DD5DD53B50EB46571D8> |-
/u <1C60D8A8C9B7931D88E58773D46AD8CC820B9864ED03A758C3323FC3CA4F
2C4E6F81D2D73CA94AEBEEDF18A2B7A9D94E5C4E59C2492716976BC7605D3C84
11C1FE9D044C0D49C143EB6C> |-
/v <1C60D8A8C9B75CBB33B735794FA7571D410DF08C507F12CB21A6B89B1394
563CFC5F386225D7FD167F4166DF24671E54FA115E50> |-
/w <1C60D8A8C9B616A78849E2A0EE38B088A896CE8E0DB31CBD7FA40C59F874
9DB8A8D48F673616FDA04211C6164483117A32D9F6B7C1208437867BFB6959C1
C1B7FA4233C4FBEBE050FB8E7CFACFA323D49061306DD446C5909A21CD61335D
A2C3D5DAAF98454E8E93> |-
/x <1C60D8A8C9B771A898BD8201A7BC874BAAE43BEE552EBE077D59C83867FC
1421A427E0876346375CB97ED2D0A8BF76892A9949845CD2E33D0D0B212CDFA4
9FD4C2905F1B157AAE66F5C777A7E9A1BE1ADF0168D6C562> |-
/y <1C60D8A8C9B747CA8CDC8C113AF13B03CC8AC9A5A90A8DB038DC825DA3C0
89BC22AC8B013B046F3C5F739537F8BA95D3F5F378E0093DEC44220278C8A710
0C71CA3095F81F5C85CA9859021D6D70DE0FA76A11E141721BEB611990DDBC0B
95A4> |-
/z <1C60D8A8C9B71063430A25C554106F59767A4B2A56F8CBD7A94F4BE88B44
CA090158BFC980A88FE6C553696A59DBF6ED964C9D53B4A2513B0DF0B0> |-
/acute <1C60D8A8C9B83C8EA69F7220D1AB370C153450989512479697B6> |-
/circumflex <1C60D8A8C9B83C8EA6C23D8097A4FA88F7F1538C2993569B7A3
FF2D2599CFDE459047A> |-
/tilde <1C60D8A8C9B83C8E85CA8ACD02E71A82E81A6BA2E60790822D77DCD8
46C9DB1F471E857E225FAC5397A1AE2C925376CB2B7F191EB7E6C06FFC347D91
630BDC56E712147D9EBAE546> |-
/cedilla <1C60D8A8C9B83C8EA6D227BE5B7F426BA2CBF8E0F5238C9A669302
6E95EF8543B43D0F8E4B9B3CEDFF27E0316C23238D95FD3227415555819F43D1
8821> |-
/dotlessi <1C60D8A8C9B887F0644EF4FA1428B28715319575AD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NVLZYZ+AdvP403A40 /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 194 /acute put
dup 195 /circumflex put
dup 196 /tilde put
dup 203 /cedilla put
dup 245 /dotlessi put
pop
%ADOEndSubsetFont
reset_gvm
/NVLZYZ+AdvP403A40*1 
[40{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma /hyphen /period 
/slash /zero /one /two /three /four /five /six 
/seven /eight /nine /colon /semicolon 4{/.notdef}rp /at /A 
/B /C /D /E /F /G /H /I 
/.notdef /K /L /M /N /O /P /Q 
/R /S /T /U /.notdef /W 9{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
/j /k /l /m /n /o /p /q 
/r /s /t /u /v /w /x /y 
/z 71{/.notdef}rp /acute /circumflex /tilde 6{/.notdef}rp /cedilla 41{/.notdef}rp 
/dotlessi 10{/.notdef}rp]
NVLZYZ+AdvP403A40 nf
NVLZYZ+AdvP403A40*1 [9.9626 0 0 -9.9626 0 0 ]msf
534.898 117.581 mo
(*)sh
NVLZYY+AdvP41461E*1 [6.9738 0 0 -6.9738 0 0 ]msf
58.0535 131.528 mo
(1)sh
NVLZYZ+AdvP403A40*1 [6.9738 0 0 -6.9738 0 0 ]msf
63.3829 131.528 mo
(CentrodeQu\365)
[4.06637 3.48759 3.85025 2.32292 2.24631 6.98915 3.91995 6.62511 4.79167 3.85025 0 ]xsh
105.336 131.357 mo
(\302)sh
107.15 131.528 mo
(micaeBioqu\365)
[5.80912 1.59703 3.11733 6.48357 6.57629 3.77353 1.59703 3.84955 3.98898 3.85025 0 ]xsh
147.572 131.357 mo
(\302)sh
149.386 131.528 mo
(mica,DepartamentodeQu\365)
[5.80913 1.59703 3.11732 3.34048 4.61659 4.64456 3.48689 3.98906 3.34047 2.24562 2.32222 3.34048 
5.80911 3.48691 3.84955 2.32222 7.02333 3.91925 6.62512 4.79097 3.84955 0 ]xsh
232.724 131.357 mo
(\302)sh
234.538 131.528 mo
(micaeBioqu\365)
[5.80913 1.59703 3.11732 6.48357 6.57631 3.77353 1.59702 3.84955 3.98898 3.85025 0 ]xsh
274.96 131.357 mo
(\302)sh
276.774 131.528 mo
(mica,FaculdadedeCie)
[5.80911 1.59705 3.11734 3.34045 4.56012 3.41019 3.34048 3.11731 3.84955 1.59705 4.01617 3.34048 
3.91925 6.57281 3.91995 6.62509 4.06638 1.59705 0 ]xsh
345.316 131.301 mo
(\303)sh
348.094 131.528 mo
(nciasdaUniversidadedeLisboa,Lisboa,Portugal,)
[3.84955 3.11734 1.59702 3.34048 5.89636 3.91925 6.45499 4.49814 3.84955 1.59705 3.34045 3.55106 
2.24561 2.7547 1.59702 3.91925 3.34048 3.91925 6.65649 3.91995 6.5686 3.26376 1.59702 2.7547 
3.98904 3.92838 3.34116 4.53922 3.26373 1.59705 2.75467 3.98904 3.92834 3.34119 4.53918 3.70383 
3.84955 2.24561 2.32224 3.84955 3.91925 3.34045 1.59705 0 ]xsh
NVLZYY+AdvP41461E*1 [6.9738 0 0 -6.9738 0 0 ]msf
504.34 131.528 mo
(2)sh
NVLZYZ+AdvP403A40*1 [6.9738 0 0 -6.9738 0 0 ]msf
509.612 131.528 mo
(Departmentof)
[4.64453 3.48694 4.0567 3.34045 2.24561 2.3222 5.80914 3.48688 3.84961 5.47644 3.84955 0 
]xsh
58.0528 141.449 mo
(Pharmacology,GreenCenterforSystemsBiology,UniversityofTexasSouthwesternMedicalCenter,Dallas,Texas,UnitedStatesofAmerica)
[3.70313 3.84955 3.34048 2.31534 5.80982 3.34048 3.11733 3.84956 1.59702 3.84956 3.91925 3.26375 
3.793 4.49883 2.24561 3.4869 3.4869 6.23737 4.06638 3.48689 3.84956 2.32222 3.48689 4.61391 
2.02939 3.84955 4.60902 3.41017 3.26376 2.75468 2.32222 3.48691 5.80911 5.14322 3.77351 1.59703 
3.84956 1.59702 3.84956 3.91925 3.26375 3.83066 4.49812 3.84955 1.59703 3.34048 3.48689 2.24561 
2.75468 1.59703 2.32222 5.65717 3.84955 4.3705 3.48689 3.48691 3.19392 3.34048 5.08603 3.41016 
3.84958 3.84955 2.3222 3.84958 5.22406 3.48691 2.75467 2.32224 3.48691 2.24561 6.16833 5.59302 
3.48688 3.91925 1.59705 3.20383 3.34045 3.91583 4.06638 3.48688 3.84955 2.32224 3.48691 2.24561 
3.78534 4.64453 3.40533 1.59705 1.59702 3.34048 2.75467 3.74908 3.48691 3.48688 3.19397 3.34045 
2.7547 3.86133 4.49814 3.84955 1.59702 2.32224 3.48691 6.24152 3.41019 2.3222 3.34048 2.32224 
3.48691 5.12924 3.84955 4.37048 4.28192 5.80911 3.48691 2.24561 1.59702 3.11734 0 ]xsh
NVLZYY+AdvP41461E*1 [9.9626 0 0 -9.9626 0 0 ]msf
73.8142 171.666 mo
(Abstract)
[7.15317 6.42592 4.66252 3.92521 4.04488 5.59895 4.8717 0 ]xsh
NVLZYZ+AdvP403A40*1 [8.9663 0 0 -8.9663 0 0 ]msf
73.8142 186.576 mo
(Systemsbiologyreliesheavilyontheconstructionofquantitativemodelsofbiochemicalnetworks.Thesemodelsmusthave)
[4.38451 4.19625 3.54173 2.98571 4.48315 7.46886 5.6506 5.12878 2.05332 4.94941 2.05332 4.94942 
5.03902 6.32664 2.88721 4.48315 2.0533 2.05333 4.48314 5.69635 4.9494 4.48315 4.29489 4.29489 
2.05331 2.05331 6.27374 4.94943 7.06903 2.98572 4.9494 6.5777 4.00797 4.94943 4.9494 3.54175 
2.98569 2.88721 4.94943 4.008 2.98569 2.05334 4.9494 7.11029 4.9494 4.74496 5.03903 4.94943 
4.29489 4.9494 2.98572 2.05331 2.98572 4.29489 2.98572 2.05331 4.29489 6.56421 7.46887 4.94943 
5.039 4.48315 2.05331 5.65598 4.94943 4.74496 5.12878 2.05331 4.94943 4.008 4.9494 4.48315 
7.46887 2.05331 4.008 4.29489 4.16666 4.9494 4.48315 2.98572 6.62607 4.94943 2.88721 4.19623 
3.54175 3.98721 4.48315 4.94943 4.48312 3.54175 6.63684 7.46887 4.9494 5.03903 4.48315 2.05331 
5.65601 7.46884 4.94943 3.54172 5.07214 4.94946 4.29486 4.29492 0 ]xsh
73.8142 196.554 mo
(predictivepowertohelpunveilingtheunderlyingmolecularmechanismsofcellularphysiology,butitisalsoparamount)
[5.12878 2.88721 4.48315 5.03902 2.05332 4.00799 2.98571 2.05332 4.29489 7.54424 5.12878 4.94942 
6.62608 4.48314 5.96803 2.98572 8.0123 4.94942 4.48314 2.05333 8.18628 4.94942 4.94942 4.29489 
4.48314 2.05333 2.05331 2.05333 4.9494 8.14047 2.98572 4.94943 7.54153 4.94943 4.9494 5.03903 
4.48315 2.88721 2.05331 4.19626 2.05331 4.9494 8.09207 7.46884 4.94943 2.05331 4.48315 4.008 
4.9494 2.05331 4.29489 5.99045 7.46887 4.48312 4.008 4.94943 4.29489 4.9494 2.05334 3.54172 
7.46887 6.61356 4.94943 5.65237 4.00797 4.48315 2.05331 2.05334 4.9494 2.05331 4.29489 5.98148 
5.12878 4.94943 4.19623 3.54175 2.05331 4.9494 2.05331 4.94943 5.03903 4.19623 4.91974 5.12878 
4.9494 6.0791 2.05331 6.05399 2.05331 6.62076 4.29489 2.05331 3.54172 7.96838 5.12878 4.29489 
2.88721 4.29489 7.46881 4.94946 4.9494 4.9494 0 ]xsh
73.8142 206.532 mo
(thattheyareconsistentwiththedataresultingfromkeyexperiments.Often,itispossibletofindseveralmodelsthat)
[2.98571 4.94942 4.29489 6.59106 2.98571 4.94941 4.48315 7.82043 4.2949 2.8872 8.12525 4.008 
4.94942 4.94942 3.54172 2.05331 3.54173 2.98572 4.48314 4.94943 6.60271 6.62608 2.05331 2.98572 
8.57358 2.98572 4.94942 8.10823 5.03903 4.29489 2.98572 7.91907 2.88721 4.48315 3.54172 4.9494 
2.05331 2.98572 2.05331 4.94943 8.66232 2.60919 2.88721 4.9494 11.0975 4.19626 4.48315 7.87424 
4.48315 4.10648 5.12878 4.48315 2.88721 2.05331 7.46887 4.48315 4.9494 2.98572 3.54172 5.47119 
6.15982 2.60916 2.98572 4.48315 4.9494 5.51422 2.05331 6.62067 2.05331 7.13092 5.12878 4.9494 
3.54175 3.54172 2.05331 5.12878 2.05331 8.12796 2.98572 8.57986 2.60919 2.05331 4.94943 8.64258 
3.54175 4.48312 4.29492 4.48312 2.88721 4.29489 5.72144 7.46887 4.9494 5.03903 4.48312 2.05334 
7.18652 2.98572 4.9494 4.29492 0 ]xsh
73.8142 216.51 mo
(describethedataequallywell,butprovidesignificantlydifferentquantitativepredictionsregardingparticularvariablesof)
[5.03903 4.48315 3.54173 4.008 2.8872 2.05332 5.12878 7.38375 2.98571 4.94942 7.42858 5.03902 
4.29489 2.98572 7.18204 4.48315 5.03903 4.94942 4.29489 2.05331 2.05333 7.11656 6.62608 4.48315 
2.05331 2.05331 4.73952 5.12877 4.94943 5.90872 5.12878 2.88721 4.9494 4.29489 2.05331 5.03903 
7.3945 3.54175 2.05331 5.03903 4.9494 2.05331 2.60919 2.05331 4.008 4.29489 4.94943 2.98572 
2.05331 7.08698 5.03903 2.05331 2.60919 2.60919 4.48315 2.88721 4.48315 4.9494 5.9213 5.039 
4.94943 4.29489 4.94943 2.98569 2.05334 2.98569 4.29489 2.98572 2.05331 4.29489 7.41425 5.12878 
2.88721 4.48315 5.03903 2.05331 4.008 2.98569 2.05331 4.94943 4.9494 6.47552 2.88721 4.48315 
5.03903 4.29489 2.88721 5.03903 2.05331 4.9494 7.93695 5.12878 4.29489 2.88721 2.98569 2.05331 
4.008 4.94943 2.05331 4.29489 5.78152 4.29489 4.29489 2.88721 2.05331 4.29489 5.12878 2.05328 
4.48315 6.50867 4.9494 0 ]xsh
73.8142 226.431 mo
(thenetwork.Inthosecases,oneisfacedwithaproblemofmodeldiscrimination,theprocedureofrejectinginappropriate)
[2.98571 4.94942 7.03137 4.94942 4.48315 2.98571 6.62608 4.94942 2.8872 4.19625 4.46783 2.14294 
7.49494 2.98572 4.94942 4.9494 3.54173 7.04393 4.008 4.29489 3.54172 4.48315 3.54172 4.45081 
4.94942 4.94942 7.052 2.05331 6.11057 2.60919 4.29489 4.008 4.48315 7.62131 6.6261 2.05331 
2.98572 7.55322 6.86014 5.12878 2.88721 4.9494 5.12878 2.05331 4.48315 10.0081 4.9494 5.19867 
7.46887 4.9494 5.03903 4.48315 4.64728 5.03903 2.05331 3.54172 4.008 2.88721 2.05331 7.46887 
2.05331 4.9494 4.29492 2.98569 2.05331 4.94943 4.9494 4.42392 2.98572 4.9494 7.03137 5.12878 
2.88721 4.9494 4.008 4.48315 5.03903 4.9494 2.88721 7.10938 4.94943 5.19864 2.88721 4.48315 
2.14294 4.48312 4.008 2.98572 2.05331 4.94943 7.60873 2.05331 4.94943 4.29489 5.12878 5.12878 
2.88718 4.9494 5.12878 2.88721 2.05334 4.29486 2.98572 0 ]xsh
73.8142 236.409 mo
(modelsfromasetofcandidatesinordertoelectoneasthebestmodeltouseforprediction.Inthiswork,amethodis)
[7.46886 4.94941 5.03903 4.48315 2.05332 6.67635 2.6092 2.8872 4.94941 10.5864 7.42681 3.54173 
4.48315 6.14812 4.94942 5.70885 4.008 4.29489 4.94942 5.03903 2.05331 5.03903 4.29489 2.9857 
4.48315 6.67456 2.05331 8.09479 4.9494 2.88721 5.03903 4.48315 5.9985 2.98572 8.06879 4.48315 
2.05331 4.48315 4.008 6.11853 4.9494 4.94943 7.61865 4.29489 6.70325 2.98572 4.94943 7.59802 
5.12878 4.48315 3.54172 6.12125 7.46887 4.9494 5.03903 4.48315 5.15744 2.98572 8.06967 4.94943 
3.54172 7.60971 2.60919 4.94943 6.04782 5.12878 2.88721 4.48315 5.03903 2.05331 4.008 2.98569 
2.05334 4.9494 4.9494 4.88837 2.14294 8.06161 2.98569 4.94943 2.05331 6.67902 6.6261 4.9494 
2.88721 4.19626 4.9816 7.42682 7.46887 4.48315 2.98569 4.9494 4.9494 8.15753 2.05334 0 
]xsh
73.8142 246.386 mo
(proposedtooptimizethedesignofenzymekineticassayswiththegoalofselectingamodelamongasetofcandidates.We)
[5.12878 2.88721 4.94942 5.12878 4.94942 3.54173 4.48315 7.25459 2.98572 7.1058 4.94942 5.12878 
2.9857 2.05331 7.46887 2.05331 3.82864 6.68079 2.9857 4.94942 6.69154 5.03903 4.48315 3.54173 
2.05331 5.03903 7.16858 4.9494 4.74496 4.48315 4.94943 3.82861 4.19626 7.46884 6.7077 4.19626 
2.05331 4.9494 4.48315 2.98572 2.05331 6.20743 4.29489 3.54172 3.54175 4.29489 4.19623 5.75552 
6.62607 2.05334 2.98569 7.09955 2.98572 4.9494 6.69156 5.03903 4.9494 4.29489 4.25455 4.94943 
4.80145 3.54172 4.48312 2.05331 4.48315 4.008 2.98572 2.05331 4.9494 7.21426 6.46292 7.46887 
4.9494 5.03903 4.48315 4.25098 4.29489 7.46887 4.9494 4.94943 7.25012 6.46292 3.54172 4.48315 
5.18427 4.9494 4.80145 4.008 4.29489 4.94943 5.03903 2.05331 5.03903 4.29489 2.98569 4.48315 
3.54175 4.09662 7.55859 0 ]xsh
73.8142 256.364 mo
(focusonmodelswithsystemsofordinarydifferentialequationsastheunderlyingmathematicaldescription.Themethod)
[2.6092 4.94941 4.008 4.94941 6.50061 4.94942 7.86346 7.46886 4.94942 5.03902 4.48315 2.05333 
6.50598 6.62607 2.05333 2.9857 7.89307 3.54172 4.19626 3.54172 2.98572 4.48315 7.46886 6.49342 
4.94942 5.59499 4.9494 2.88721 5.03903 2.05331 4.94943 4.29489 2.88721 7.12463 5.03903 2.05331 
2.60919 2.60919 4.48315 2.88721 4.48315 4.9494 2.98572 2.05331 4.29489 5.03461 4.48315 5.03903 
4.94943 4.29489 2.98569 2.05334 4.9494 4.9494 6.48987 4.29489 6.47638 2.98572 4.94943 7.42859 
4.9494 4.9494 5.03903 4.48315 2.88721 2.05331 4.19626 2.05331 4.9494 7.97821 7.46884 4.29489 
2.98572 4.94943 4.48315 7.46884 4.29489 2.98572 2.05331 4.008 4.29489 5.02206 5.03903 4.48315 
3.54172 4.008 2.88721 2.05331 5.12878 2.98572 2.05331 4.9494 4.94943 4.86145 4.48315 4.94943 
7.40527 7.46884 4.48315 2.98572 4.9494 4.9494 0 ]xsh
73.8142 266.285 mo
(providesadesignwhereanextensionoftheKullback-Leiblerdistance,computedoverthetimecoursespredictedbythe)
[5.12878 2.88721 4.94942 4.29489 2.05331 5.03903 4.48315 6.48267 7.19998 5.03902 4.48315 3.54173 
2.05331 5.03903 7.84912 6.62607 4.94943 4.48314 2.88721 7.41603 4.29489 7.89394 4.48315 4.10649 
2.98572 4.48315 4.9494 3.54175 2.05331 4.9494 7.84821 4.94943 5.53848 2.98572 4.9494 7.37119 
4.8508 4.9494 2.05331 2.05331 5.12878 4.29489 4.008 4.19626 2.70782 4.19626 4.48315 2.05331 
5.12878 2.05331 4.48315 5.83353 5.03903 2.05331 3.54172 2.98572 4.29489 4.94943 4.00797 4.48315 
4.81393 4.008 4.94943 7.46884 5.12878 4.94943 2.98569 4.48315 7.97821 4.9494 4.29489 4.48315 
5.83084 2.98572 4.9494 7.37122 2.98572 2.05331 7.46887 7.3909 4.008 4.9494 4.94943 2.88721 
3.54172 4.48315 6.47458 5.12878 2.88721 4.48315 5.03903 2.05331 4.008 2.98569 4.48315 7.99161 
5.12878 7.11658 2.98572 4.9494 0 ]xsh
73.8142 276.263 mo
(models,ismaximized.Giventheasymmetricnaturethismeasure,ageneralizeddifferentialevolutionalgorithmformulti-)
[7.46886 4.94941 5.03903 4.48315 2.05332 3.54173 4.83456 2.05331 6.45039 7.46886 4.29489 4.1065 
2.05331 7.46887 2.05331 3.82861 4.48315 5.03903 4.83905 5.78329 2.05331 4.29489 4.48315 7.87602 
2.9857 4.94942 7.42857 4.29489 3.54175 4.19623 7.46887 7.46887 4.48315 2.98569 2.88721 2.05334 
6.93637 4.9494 4.29489 2.98572 4.9494 2.88721 7.42859 2.98572 4.9494 2.05334 6.50867 7.46887 
4.48312 4.29489 3.54175 4.9494 2.88721 4.48315 4.79782 7.19995 5.03903 4.48315 4.94943 4.48312 
2.88721 4.29489 2.05331 2.05334 3.82861 4.48315 7.98804 5.03903 2.05331 2.60919 2.60919 4.48315 
2.88721 4.48315 4.9494 2.98572 2.05331 4.29489 5.03464 4.48315 4.29489 4.9494 2.05331 4.94943 
2.98569 2.05331 4.94943 7.8877 4.29489 2.05331 5.03903 4.9494 2.88721 2.05331 2.98572 4.9494 
10.4152 2.60919 4.9494 5.82098 7.46887 4.9494 2.05334 2.98572 2.05328 0 ]xsh
73.8142 286.241 mo
(objectiveoptimizationproblemswasused.ThekineticsofyeastglyoxalaseI\(EC4.4.1.5\)waschosenasadifficulttestcaseto)
[4.94942 5.12878 2.14293 4.48315 4.008 2.9857 2.05332 4.29489 6.63327 4.94941 5.12878 2.98571 
2.05332 7.46886 2.05331 3.82864 4.29489 2.98569 2.05333 4.94942 7.0798 5.12878 2.88721 4.9494 
5.12878 2.05331 4.48315 7.46887 5.65686 6.6261 4.29489 5.69003 4.94943 3.54172 4.48315 5.03903 
4.83276 4.48315 4.9494 6.61087 4.19626 2.05331 4.9494 4.48315 2.98572 2.05331 4.008 5.65778 
4.9494 4.74496 4.19626 4.48315 4.29489 3.54172 5.14032 5.039 2.05334 4.19623 4.94943 4.10651 
4.29489 2.05331 4.29489 3.54172 6.57141 4.2518 2.51959 4.38452 7.38187 4.57275 1.86493 4.57278 
1.8649 4.57278 1.86493 4.57275 4.62933 6.62607 4.29489 5.69006 4.008 4.94943 4.9494 3.54175 
4.48312 7.09418 4.29489 5.62637 6.40646 5.03903 2.05331 2.60919 2.60919 2.05331 4.008 4.94943 
2.05331 5.12506 2.98572 4.48315 3.54172 5.14658 4.008 4.29492 3.54169 6.58038 2.98572 0 
]xsh
73.8142 296.162 mo
(evaluatethemethod.Althoughasingle-substratekineticmodelisusuallyconsidered,atwo-substratemechanismhasalso)
[4.48315 4.2949 4.29489 2.05331 4.94942 4.29489 2.98571 7.05559 2.9857 4.94942 7.03137 7.46886 
4.48315 2.98572 4.94942 4.94942 5.03903 4.4221 5.50529 2.05331 2.98572 4.9494 4.94943 4.9494 
5.03903 7.49496 6.86014 3.54172 2.05334 4.9494 5.03903 2.05331 4.48315 2.70782 3.54172 4.94943 
5.12878 3.54172 2.98572 2.88721 4.29489 2.98572 7.04749 4.19626 2.05331 4.9494 4.48315 2.98572 
2.05331 6.60373 7.46887 4.9494 5.03903 4.48315 4.59076 2.05334 6.11057 4.9494 3.54172 4.94943 
4.29489 2.05331 2.05331 6.78751 4.008 4.94943 4.94943 3.54172 2.05331 5.03903 4.48315 2.88721 
4.48312 5.03903 4.42929 6.86014 2.98572 6.62607 4.94943 2.70782 3.54172 4.94943 5.12878 3.54172 
2.98572 2.88721 4.29489 2.98572 7.0654 7.46887 4.48315 4.008 4.9494 4.29489 4.94943 2.05331 
3.54172 10.0574 4.9494 4.29492 6.06213 4.29492 2.05328 3.54175 0 ]xsh
73.8142 306.139 mo
(beenproposedforthisenzyme.Wedesignedanexperimentcapableofdiscriminatingbetweenthetwomodelsby)
[5.12878 4.48315 4.48315 9.20483 5.12878 2.88721 4.94941 5.12878 4.94942 3.54172 4.48315 9.29623 
2.60919 4.94942 7.12466 2.98572 4.94942 2.05333 7.81238 4.48314 4.94942 3.82863 4.19624 7.46887 
4.48314 6.07909 7.55862 8.71164 5.03903 4.48315 3.54175 2.05331 5.03903 4.9494 4.48315 9.30161 
4.29489 9.19763 4.48315 4.10651 5.12878 4.48315 2.88721 2.05331 7.46884 4.48315 4.94943 7.23663 
4.008 4.29489 5.12878 4.29489 5.12878 2.05331 8.76633 4.94943 6.84219 5.03903 2.05331 3.54172 
4.008 2.88721 2.05331 7.46887 2.05331 4.9494 4.29489 2.98572 2.05331 4.94943 9.31683 5.12878 
4.48315 2.98572 6.62607 4.48315 4.48315 9.16986 2.98569 4.94943 8.73227 2.98572 6.62607 9.21021 
7.46887 4.9494 5.039 4.48315 2.05334 7.75317 5.12878 0 ]xsh
73.8142 316.117 mo
(optimizingtheinitialsubstrateconcentrationsofglyoxalaseI,inthepresenceofthesubsequentpathwayenzyme,)
[4.94942 5.12878 2.98571 2.05332 7.46886 2.05332 3.82862 2.05332 4.94942 9.5984 2.9857 4.94942 
9.0721 2.05333 4.9494 2.05331 2.98572 2.05331 4.29489 6.6109 3.54172 4.94942 5.12878 3.54173 
2.9857 2.88721 4.29489 2.9857 9.08556 4.00798 4.94943 4.9494 4.008 4.48315 4.94943 2.98572 
2.88718 4.29492 2.98569 2.05331 4.94943 4.9494 8.14954 4.9494 7.18289 5.03903 2.05331 4.19626 
4.9494 4.10651 4.29489 2.05331 4.29489 3.54175 9.06583 2.14294 6.47449 2.05331 9.51236 2.98572 
4.9494 9.07211 5.12878 2.88721 4.48315 3.54172 4.48315 4.9494 4.008 9.06851 4.9494 7.18292 
2.98572 4.9494 9.01563 3.54175 4.9494 5.12878 3.54172 4.48315 5.03903 4.9494 4.48315 4.94943 
7.57465 5.12878 4.29489 2.98572 4.9494 6.62607 4.29489 8.79599 4.48315 4.94937 3.82861 4.19629 
7.46887 4.48315 0 ]xsh
73.8142 326.095 mo
(glyoxalaseII\(EC3.1.2.6\).Thisdiscriminatoryexperimentwasconductedinthelaboratoryandtheresultsindicateatwo-)
[5.03903 2.05331 4.19625 4.94942 4.10649 4.2949 2.05331 4.2949 3.54172 7.64915 2.14293 5.34032 
2.51958 4.38451 8.40315 4.57275 1.86493 4.57277 1.86493 4.57277 1.86491 4.57277 2.51958 5.05782 
4.48315 4.94942 2.05333 6.71219 5.03903 2.05331 3.54173 4.00798 2.88721 2.05334 7.46884 2.05331 
4.94943 4.29489 2.98572 4.9494 2.88721 7.40619 4.48315 4.10648 5.12878 4.48315 2.88721 2.05331 
7.46887 4.48315 4.9494 6.15979 6.62607 4.29489 6.71042 4.008 4.9494 4.94943 5.03903 4.9494 
4.008 2.98572 4.48315 8.22296 2.05331 8.09479 2.98572 4.9494 7.65546 2.05331 4.29489 5.12878 
4.9494 2.88721 4.29489 2.98572 4.94943 2.88718 7.4071 4.29489 4.9494 8.21671 2.98572 4.9494 
7.59805 2.88721 4.48315 3.54172 4.94943 2.05331 2.98569 6.76514 2.05331 4.9494 5.03903 2.05331 
4.008 4.29489 2.98572 7.66705 7.42682 2.98572 6.6261 4.9494 0 ]xsh
73.8142 336.016 mo
(substratemechanismforthekineticsofyeastglyoxalaseI.)
[3.54173 4.94942 5.12878 3.54173 2.98572 2.8872 4.2949 2.98571 7.49761 7.46886 4.48315 4.008 
4.94942 4.29489 4.94942 2.05331 3.54173 10.4546 2.60921 4.9494 5.93396 2.9857 4.94942 7.42859 
4.19623 2.05333 4.94942 4.48315 2.98572 2.05331 4.008 6.56424 4.94943 5.59497 4.19623 4.48315 
4.29489 3.54175 5.9903 5.03903 2.05331 4.19626 4.94943 4.10648 4.29489 2.05334 4.29489 3.54172 
7.47879 2.14294 0 ]xsh
NVLZYY+AdvP41461E*1 [6.9738 0 0 -6.9738 0 0 ]msf
66.5575 359.773 mo
(Citation:)
[4.64525 2.03008 2.68558 3.91994 2.68558 2.03008 4.35932 4.35932 0 ]xsh
NVLZYZ+AdvP403A40*1 [6.9738 0 0 -6.9738 0 0 ]msf
99.6663 359.773 mo
(LagesNF,CordeiroC,SousaSilvaM,PoncesFreireA,FerreiraAEN\(2012\)OptimizationofTime-CourseExperimentsforKineticModel)
[3.26376 3.34048 3.99666 3.4869 7.22768 4.57485 3.41019 5.96045 4.06567 3.84955 2.24561 3.91925 
3.48691 1.59702 2.24562 8.40901 4.06567 5.91165 3.41017 3.84955 3.84955 2.75468 7.84833 3.41019 
1.59703 1.59703 3.34047 7.85603 5.59299 5.97162 3.70313 3.84955 3.84956 3.11732 3.48691 7.27719 
3.41017 2.24559 3.48694 1.59698 2.24564 7.9899 4.28186 5.97931 3.41019 3.48691 2.24561 2.24561 
3.48688 1.59705 2.24561 7.86926 4.28192 3.41016 9.08832 1.95966 3.55661 3.55661 3.55658 3.55661 
6.48917 4.79099 3.98907 2.3222 1.59705 5.80911 1.67233 2.97784 3.34045 2.32224 1.59702 3.84955 
8.3623 3.85025 6.52469 3.48688 1.59705 5.80911 3.48691 2.10611 4.06567 3.84955 3.84955 2.24561 
2.75467 8.01779 3.41019 3.19394 3.98904 3.48691 2.24561 1.59702 5.80914 3.48691 3.84955 2.3222 
7.31207 2.02936 3.84958 6.76321 3.77283 1.59705 3.84955 3.48691 2.3222 1.59702 7.63782 5.59296 
3.84955 3.91925 3.48688 0 ]xsh
66.5575 367.71 mo
(Discrimination.PLoSONE7\(3\):e32749.doi:10.1371/journal.pone.0032749)
[4.64525 1.59772 2.75538 3.11803 2.2463 1.59772 5.80982 1.59772 3.85025 3.34117 2.32292 1.59773 
3.85025 3.85025 3.85994 3.70383 3.26445 3.85025 5.79382 4.79167 4.57555 5.71362 3.55731 1.96037 
3.5573 1.96039 3.82019 3.48689 3.5573 3.5573 3.5573 3.55731 3.55728 3.84251 3.91994 3.85025 
1.59772 1.4512 3.55728 3.55728 1.4512 3.55728 3.55731 3.55728 3.55728 2.39273 1.66742 3.9437 
3.85025 2.24631 3.85022 3.34119 1.59772 1.45117 3.98975 3.85025 3.85025 3.48758 1.4512 3.55728 
3.55731 3.55728 3.64935 3.55661 3.55728 0 ]xsh
NVLZYY+AdvP41461E*1 [6.9738 0 0 -6.9738 0 0 ]msf
66.5575 380.183 mo
(Editor:)
[4.06567 4.49813 2.02938 2.68488 4.35862 2.83141 0 ]xsh
NVLZYZ+AdvP403A40*1 [6.9738 0 0 -6.9738 0 0 ]msf
91.2754 380.183 mo
(StefanoBoccaletti,TechnicalUniversityofMadrid,Italy)
[3.41018 2.32222 3.4869 2.02938 3.34048 3.84955 6.22065 3.77283 3.84955 3.11733 3.11734 3.34047 
1.59703 3.48691 2.3222 2.32224 1.59703 3.84599 3.48691 3.48689 3.11732 3.84955 3.84956 1.59703 
3.11732 3.34047 3.97302 4.49812 3.84955 1.59703 3.34048 3.55176 2.24561 2.75467 1.59703 2.32222 
5.59302 3.84955 4.37048 5.593 3.34047 3.91925 2.24562 1.59702 3.99597 3.74139 1.66672 2.32224 
3.34047 1.59703 0 ]xsh
NVLZYY+AdvP41461E*1 [6.9738 0 0 -6.9738 0 0 ]msf
66.5575 392.655 mo
(Received)
[4.42902 3.91994 3.41088 3.91994 2.03008 3.98975 3.91995 0 ]xsh
NVLZYZ+AdvP403A40*1 [6.9738 0 0 -6.9738 0 0 ]msf
99.0429 392.655 mo
(September28,2011;)
[3.41087 3.4876 3.98975 2.32292 3.48759 5.80982 4.0825 3.48691 4.563 3.5573 3.5573 3.82787 
3.5573 3.5573 3.5573 3.5573 0 ]xsh
NVLZYY+AdvP41461E*1 [6.9738 0 0 -6.9738 0 0 ]msf
162.652 392.655 mo
(Accepted)
[5.0079 3.41087 3.41087 3.91995 4.49883 2.68558 3.91994 0 ]xsh
NVLZYZ+AdvP403A40*1 [6.9738 0 0 -6.9738 0 0 ]msf
196.385 392.655 mo
(February3,2012;)
[3.41017 3.48691 3.98906 2.24561 3.84955 3.34048 2.24561 5.66344 3.55659 3.81323 3.55659 3.55659 
3.55661 3.55659 0 ]xsh
NVLZYY+AdvP41461E*1 [6.9738 0 0 -6.9738 0 0 ]msf
250.016 392.655 mo
(Published)
[4.35933 4.35933 4.49881 2.03009 2.03006 3.26447 4.35931 3.91995 0 ]xsh
NVLZYZ+AdvP403A40*1 [6.9738 0 0 -6.9738 0 0 ]msf
285.732 392.655 mo
(March5,2012)
[5.59369 3.34119 2.24631 3.11801 6.22485 3.55728 3.75604 3.55728 3.55731 3.55731 0 ]xsh
NVLZYY+AdvP41461E*1 [6.9738 0 0 -6.9738 0 0 ]msf
66.5575 405.071 mo
(Copyright:)
[4.64525 4.35932 4.49883 3.91994 2.83211 2.03008 4.35932 4.35932 2.68558 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: ICAAAA+AdvT377 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
NVLZZA+AdvT377 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C223 <1C60D8A8C9B6ABDD878AD53E8D6A41D5657F5F14409893DCC5C4DCBC9
2A569925A7AC3983B3D35CE6F11FEE395A0083E9C16FE9AF322B7CF58E243C98
170F83EB29E27E39ABE180BA8623C031CA65803D65A4FF8D2D997C9E8F5A3F18
97D553976DBE5F65B6EF4B3FB10D0D5A82284FAB012BD9AD4AAAE6CB6644481A
BF4A43D4EF6A23C012A8D0199F705B99C568F47896B5B89D1F4B4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NVLZZA+AdvT377 /Encoding get
dup 223 /C223 put
pop
%ADOEndSubsetFont
reset_gvm
/NVLZZA+AdvT377*1 
[223{/.notdef}rp /C223 32{/.notdef}rp]
NVLZZA+AdvT377 nf
NVLZZA+AdvT377*1 [6.9738 0 0 -6.9738 0 0 ]msf
105.392 405.071 mo
(\337)sh
NVLZYZ+AdvP403A40*1 [6.9738 0 0 -6.9738 0 0 ]msf
114.237 405.071 mo
(2012Lagesetal.Thisisanopen-accessarticledistributedunderthetermsoftheCreativeCommonsAttributionLicense,whichpermits)
[3.5566 3.55659 3.5566 6.79034 3.26376 3.34047 3.91927 3.48689 5.9445 3.48689 5.52669 3.34047 
1.59703 4.6431 3.48691 3.84955 1.59703 5.97588 1.59703 5.9431 3.34048 7.03378 3.84955 3.98906 
3.48689 3.84956 2.17165 3.34048 3.11732 3.11732 3.48691 2.75468 5.95216 3.34048 2.24561 2.32222 
1.59703 3.19334 1.59703 6.68018 3.91925 1.59705 2.7547 2.3222 2.24561 1.59705 3.98904 3.84955 
2.32224 3.48688 7.17673 3.84955 3.84955 3.91925 3.48691 5.47308 2.3222 3.84958 6.64044 2.32224 
3.48688 2.24561 5.89072 5.89639 3.85022 5.2778 2.32224 3.84955 6.64044 4.06567 2.24561 3.55246 
3.34048 2.3222 1.59705 3.34048 6.68997 4.06567 3.84955 5.80911 5.80911 3.84958 3.84955 5.98703 
4.28189 2.32224 2.32224 2.24561 1.59702 3.98907 3.84955 2.3222 1.59705 3.84955 7.1105 3.26376 
1.59702 3.11734 3.48691 3.84955 2.75467 3.48691 4.69052 5.15363 3.84955 1.59705 3.11731 7.08752 
3.98901 3.48694 2.24561 5.80908 1.59705 2.3222 0 ]xsh
66.5582 413.064 mo
(unrestricteduse,distribution,andreproductioninanymedium,providedtheoriginalauthorandsourcearecredited.)
[3.84955 3.84956 2.24561 3.4869 2.75468 2.32223 2.24561 1.59703 3.11733 2.32222 3.4869 6.30708 
3.84955 2.75468 3.4869 3.79788 3.91925 1.59702 2.75468 2.32222 2.24561 1.67305 3.98906 3.84955 
2.32222 1.59703 3.84955 3.84955 3.78534 3.34047 3.84955 6.24571 2.24561 3.48691 3.98904 2.24561 
3.84956 4.02455 3.85025 3.11734 2.3222 1.59705 3.84955 6.18228 1.59702 6.16974 3.34048 3.84955 
5.62228 5.80914 3.48688 3.91925 1.59705 3.84955 5.88443 3.74139 3.98975 2.24561 3.84955 3.34048 
1.59705 3.91925 3.5643 6.23596 2.32224 3.84955 5.84613 3.84955 2.24561 1.59702 3.91925 1.59705 
3.84955 3.34045 3.97791 3.34048 3.84955 2.3222 3.84958 3.84955 4.61389 3.34048 3.84955 6.2457 
2.7547 3.84955 3.84955 2.24561 3.11734 5.83844 3.34048 2.24561 5.86566 3.11734 2.24561 3.48691 
3.91925 1.59702 2.32224 3.48688 3.91925 0 ]xsh
NVLZYY+AdvP41461E*1 [6.9738 0 0 -6.9738 0 0 ]msf
66.5582 425.48 mo
(Funding:)
[3.98975 4.35932 4.35932 4.49883 2.03008 4.35932 4.35932 0 ]xsh
NVLZYZ+AdvP403A40*1 [6.9738 0 0 -6.9738 0 0 ]msf
98.0798 425.48 mo
(WorksupportedbyadoctoralfellowshipSFRH/BD/21947/2005andgrantPPCDT/QUI/62027/2004fromFundac)
[5.87893 3.84955 2.24561 4.97582 2.75468 3.84956 3.98906 3.98906 3.84955 2.24561 2.32222 3.58733 
5.556 3.98976 4.96815 4.98907 3.91925 3.84955 3.11734 2.32222 3.84955 2.24561 3.42836 3.23167 
2.02937 3.48691 1.59702 1.59705 3.84955 5.15363 2.75467 3.84955 1.59705 5.71716 3.41019 3.41017 
3.77281 4.57486 2.39203 3.77283 4.64456 2.39203 3.65912 3.55661 3.55658 3.55661 3.55661 2.39203 
3.55658 3.55661 3.55661 5.25052 3.34048 3.84955 5.62155 3.91925 2.24564 3.34045 3.84955 4.04825 
3.70383 3.70313 4.06567 4.64456 3.48688 2.39203 4.79099 4.49814 1.66672 2.39203 3.55661 3.55661 
3.55658 3.55661 3.65982 2.39203 3.55661 3.55658 3.55661 5.24844 2.02939 2.24561 3.84955 7.52188 
3.41019 3.84955 3.84955 3.91925 3.34048 0 ]xsh
419.642 425.48 mo
(\313a)
[2.60822 0 ]xsh
422.874 425.366 mo
(\304)sh
425.595 425.48 mo
(oparaaCie)
[5.49954 3.98978 3.34045 2.24561 5.05118 4.98907 4.06638 1.59702 0 ]xsh
457.117 425.31 mo
(\303)sh
459.895 425.48 mo
(nciaeTecnologia,Portugal)
[3.85025 3.11804 1.59772 4.98489 5.15921 3.48761 3.48758 3.11804 3.85025 3.9165 1.59772 3.85025 
3.91995 1.59772 3.34119 3.09979 3.70386 3.85022 2.31116 2.32294 3.85022 3.91998 3.34119 0 
]xsh
66.5589 433.474 mo
(\(www.fct.mctes.pt\).Thefundershadnoroleinstudydesign,datacollectionandanalysis,decisiontopublish,orpreparationofthemanuscript.)
[1.95968 5.15363 5.15363 5.15363 1.4505 2.02937 3.11733 2.32223 1.45049 5.80913 3.11733 2.32222 
3.59012 2.75468 1.45049 3.98906 2.32223 1.95968 3.79369 3.48691 3.84955 5.81544 2.02939 3.84955 
3.84955 3.99039 3.48691 2.24561 5.09509 3.84955 3.34048 6.2457 3.85025 6.18509 2.24561 3.84955 
1.59702 5.8566 1.59703 6.16974 2.75468 2.32222 3.84956 3.91925 5.63484 3.91925 3.48689 2.75468 
1.59703 3.91925 3.84955 3.82857 3.91925 3.34047 2.32224 5.66763 3.11731 3.84958 1.59702 1.59705 
3.48688 3.18848 2.3222 1.59705 3.84955 6.1767 3.34052 3.84955 6.24567 3.34052 3.84955 3.34045 
1.65771 3.26373 2.7547 1.59705 2.75464 3.80212 3.91925 3.48688 3.11731 1.59705 2.7547 1.59698 
3.84955 6.2088 2.3222 6.18164 3.98901 3.84955 3.98907 1.59705 1.59698 2.83563 3.84955 3.74695 
3.84955 4.59717 3.98907 2.24561 3.48688 3.98907 3.34045 2.24561 3.43536 2.3222 1.59705 3.84955 
6.1767 3.85022 4.37048 2.3222 3.84955 5.78967 5.80914 3.34045 3.84955 3.84955 2.82233 3.11737 
2.24561 1.59698 3.98907 2.3222 0 ]xsh
NVLZYY+AdvP41461E*1 [6.9738 0 0 -6.9738 0 0 ]msf
66.5589 445.946 mo
(CompetingInterests:)
[4.64525 4.35933 6.38869 4.49883 3.91994 2.68557 2.03008 4.35933 6.74367 2.10609 4.35933 2.68557 
3.91994 2.83211 3.91995 3.26445 2.76646 3.26376 0 ]xsh
NVLZYZ+AdvP403A40*1 [6.9738 0 0 -6.9738 0 0 ]msf
139.523 445.946 mo
(Theauthorshavedeclaredthatnocompetinginterestsexist.)
[3.48689 3.84956 5.81544 3.34048 3.84955 2.32222 3.84955 3.84956 2.24561 5.146 3.85025 3.34047 
3.34047 5.79593 3.91925 3.48691 3.11732 1.66467 3.34047 2.24561 3.48691 6.23315 2.32224 3.84955 
3.34047 4.71632 3.84955 6.18509 3.11734 3.84955 5.80911 3.98907 3.48688 2.32224 1.59702 3.84955 
6.2757 1.59705 3.84955 2.3222 3.48694 2.24561 3.56219 2.7547 2.3222 5.07068 3.48691 3.19394 
1.59705 2.75467 2.32224 0 ]xsh
66.5589 458.362 mo
(*E-mail:aeferreira@fc.ul.pt)
[5.21571 3.41018 2.1061 5.80912 3.34048 1.59702 1.59703 3.79509 3.34048 3.4869 2.02938 3.55803 
2.24561 2.24561 3.48691 1.59702 2.24561 3.34047 5.15363 2.02938 3.11732 1.4505 3.84955 1.59703 
1.4505 3.98906 0 ]xsh
NVLZYY+AdvP41461E*1 [9.9626 0 0 -9.9626 0 0 ]msf
58.0535 495.439 mo
(Introduction)
[3.00872 6.28839 3.83555 4.04488 6.22662 6.42592 6.22663 4.87169 3.83554 2.89912 6.22662 0 
]xsh
true set_gvm
%ADOBeginSubsetFont: ENZAAA+AdvP49811 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
NVLZZB+AdvP49811 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B87DE0527B7534E62B7D20177CEA70F8283B4902A7
02713CF9498A3699679AA9C7319D9305892D66C016F700390DEBF21EE999E718> |-
/parenright <1C60D8A8C9B87DE022C449F408C6E28CF5473B8F1F00AE3461D
F7116600D769793E5DFD1B62A55887CA3C2FE1AC0DD9765BA5B48647E2FE979> |-
/comma <1C60D8A8C9B8707CEAE77A35D361DC40014F5D61813E63105F6665BC
FF4BC87CFB1FDD3D5241F70681A78F7D99774BDF6C709EBFAA2FB55DB1FE2421
CAB8AD> |-
/hyphen <1C60D8A8C9B8327ED2B4D8ED3FC938705969A95845> |-
/period <1C60D8A8C9B8707CF8D6F14B30848E3297F38F92DADD560408ED348
A67E2AAC4E8> |-
/one <1C60D8A8C9B7A73DB985D1D0C2CE8FB0ED56E3E8666B1130013884ECC7
6973BA28897F5DDB4A418D0D978923FFF3A8446BB2DD01A6CD5B884C6F> |-
/two <1C60D8A8C9B7A73D8A2957429D66EA0EA65835D64D9198B54988D57266
C32CA5D5AFE3DD3EDFA980649A9690004A8FD9D3454B6FBE02253DBE0AAA629B
0392ACAC76E869294C9DAD5671CC9F850BA3B168ACB6120DB731E4A79019DACB
3A92BEC6EAD16F39BF188E08FF7726E236878A9F0B066349C5702D> |-
/three <1C60D8A8C9B7A73DB9B0236FCA3B034440B976B60D27930086F2E410
DA1A35C4DA54D5230DA719AC8EC3A5571806FD1D9A7622463A7D9800D647014F
FFA09AADDAF1363A394EE37F67DF9DF1D7136CB5AF33C532FFF2F33AFFA56879
F04312BDDFC07B3EFA16BDD8F435F21D456CE09A75FA65238556B00D7729D190
8FEED972AE6C1E4AB5FC02706FDFCBF43713DC8A2A201370654C3746BF9A7621
021E85AC62E1A0A3551FEDD0A49EA47C112C5265601F> |-
/four <1C60D8A8C9B7A73DB980D7B708BC6A8EF47A411ABD3D1C2BF02CB9CB6
AEEBA03F1E7ECB8A0C0C0A7D6E5BF62491745B9BA35F9F77BEDB796B1E20B890
F020B86C6CC3D5217D03D29100D5CAD5339C73355DB33F6D1074F6691> |-
/five <1C60D8A8C9B7A73DB93DEE0D10080C7E79473734794B7F67C2827A2E6
B2BF8FBE7AA2338E2C0C54C34F7AC10FA47B38E0A6A1CB018463158492EC36D0
0846E303C4523569208D1B6597F67F36D2AA13149D4EE02BB71D7ED2922F8B99
8AB8FDACF208C41A41F049313FA64B6AF3EB370338A51294ADDFA> |-
/colon <1C60D8A8C9B8707CF8D6F14B30848E3297F38F92DADD560408ED348A
67E2AAC411A69E7B79C4AC0BFD0823F4F1B0E3161D0FB0FBCB21A9D783> |-
/A <1C60D8A8C9B658EF0A6AFBC8A31616F3A18C36A967F436BE7C48CCBCC3F6
C8B8EFD8EB0D30A34F3307CE67312090055F59FB443734B5ABE545478ACA67C9
2BA7E231CD1918D3FBDCC71C7C646E73C82F72C7BE6ACE65F8DE1F26D8660221
37624B469F34D75223BB7F656F03B3B64FE861FE1072923ACA7C7EF2192F428B
7E68> |-
/B <1C60D8A8C9B7D5457719E86D1F89095AF0ACBC19DDBD6AD8998DB4C6C70B
AF16BEB261825720DAAC395F82C0A27EF3C929E72164CEB5F2D57194B7147E05
A98ED34FD010C5DF2AA2172C5558B03AC806CD3E0C56F421586162B1E4D69D69
93BE4F05043A32CE310355A1B3F5CBF21DC2E0167953D0E3C418D1FDF0D8CEB8
5E1B3065A2DD7C45F684BE9F5DA816384E43038DC989B6FCDE> |-
/D <1C60D8A8C9B6ED05807AB27EF8EFEE7462E710BBD91668C7DDAFAFB89DEB
6FDCC1C7BFA11978BDD60EF803B968E6B8701FDED2C4492370037AC9425C21FC
BCB2C9E97B16011F6B9F147835612191BCBDF61EE6ABD2D838F2AE10F5BF7209
3C1D99AA7C791C15E8A6A254962D25F7936914E60191DE79558844473BC0B9A7
8CE74BD43E1017D8A9FC2C> |-
/E <1C60D8A8C9B66482B34484DE7F2CEA399BFC3557FD0CEBC9C1A87B93FF94
6E172B4204A0B7CF30BFE3344B57C6BBD53AF88026E445D921E0EA68C685BC5D
DE2AC083ACBD5BC6E9D8AB551C4C0D2D857662DD1BEDB7EABC032AD6EA07C532
ED3AE9B0E32B30332EADF043> |-
/F <1C60D8A8C9B7931D8825543652AA8922DF86DCC44432913368110B61C269
665C552FD7E36DCA56B04FEC290ACB91747FB081A3A736BC0CC09B39A128478A
14ED72A5DEC7459317F2943A95DE2709DEA11BB725D3FD72BD3A1CE9125D67D0
52B9D00D80> |-
/I <1C60D8A8C9B80898A180035CC87DBF420706A3370252F0554F237BFA2A77
63A254F8AC027E2A87E4C52C934D3E9A0E730F6E4F6BC9982B2BBC72E79A5972
E802> |-
/M <1C60D8A8C9B5A128BF8485B6B67037BB451CCB2A3E4E9B09405261F13960
34AEFA459044E577E45D7BC766B1376141C3A03D8F23F124C3C2B93C51A38D4A
CEDA533ED240DED8D56DC7FED2E07EA32F53D05675C0DDEE4FB77B50781BC4F5
5A1CFD0880624678545CD2978D626C7AF849C3AE6A005FFECC87C4122C62A6DB
A2038710FF45> |-
/O <1C60D8A8C9B6ABDDC1799719E51F0CADBD3B41C0FF0C6A93BD9557B347E8
4AB63741D547A94752C7F32E7C184B904A4AE8E32EA8CD93D36C8452BF95B35D
3F258F27F02B7ED68BEFAD822BD665028C1A5465B6625C> |-
/P <1C60D8A8C9B7E965A97C879DECCAB76ECB963E4B9ACC928E8B9700BF2959
B50ECF077D22AFE56E93F1F1E1EC9632E2D802E117F58BC23347DD0B8DF7C990
9403C747E9BD4825B4CE90C9FE24BDF3CA677D3BF5DDB9B9D66C27ACF6D8D4EE
A5D94B7A63874B6EC83DC582B356FC87A50341D76C3B1E7400B74F7880FA> |-
/S <1C60D8A8C9B79EE37E02C3A7BA0468FB330A4FFEE9D761D6B37F0F541F4A
1FCF6487C2CA78248806271D6273FA1D32C6A416CB41F92E243FB7B6F1900DFD
9A62FB3A8BABDC06B3DE5DD6F9A660594868BB79599A4C175D656EFC74B49619
D50B2FD99A1987C7190E69ECA3161C66DD51C02339FBCEBF56AFA734FF53CBCB
AE1254371EFA> |-
/T <1C60D8A8C9B62C6598F82941DA1CEE3D0CA0A6B17E9D72E6289B8D0F83F4
C53AD062EFA9282E50FC91C63AD3C34B8226651A0CA8FA4741FE2099D2123B51
3619F418CEF569E1D9C38D081456AFA927B2A6D7> |-
/bracketleft <1C60D8A8C9B8151C29FFD155E12DB9CC8C886A341B2DC2F495
958EA385898EC3FA4DB63850FA8E0A43C27BE4> |-
/bracketright <1C60D8A8C9B8151CA76375D7A3411D9E98F02E28B910911F5
4608A6709958AAF36A7CDB1A7759139B3A985> |-
/a <1C60D8A8C9B747CAE0AD6CDC3940BA097BA2AE14C947394428AEF6AE03F0
88564CD27EBF650CC83747D3BC6062E51F7EF68C90451C830BE707D677AF0B3B
01CEDFAAB9538CBD21FE846A13A77CCD56C94923A66AF5F22E73F04939A37BC7
A276C14AA614A62EE63CEAA28364920D9FA334188ED3CEB88886CDF5F10658C2
0D0FD16269> |-
/b <1C60D8A8C9B7B3D0F809E95827B9E4FD1674C7018E28863AEDA4F9456915
8590500AACAA440A4C39FCAC6B52B05A54C46347A816357597826D3B5AF062EA
3BDC2330063FFF8AA6D05A56D65D1D4C1C2D5195EB598143EC1402807F1B1A58
173F6C02AB66863EF5FE66D86CB834269D187349> |-
/c <1C60D8A8C9B7106326A82B0EF65CEECB9C8AB799747C65BA1D929C015AF8
43F2034217A835E9B7B810A4EF44D90185CAC6C9CB70DBFB3590DA73AB3B39DF
A3A0B0B55B755D5D8AD7F1DBF1EF56BFF9> |-
/d <1C60D8A8C9B7B3D0EBF6C8E95F31FE2B201826E749C832E29E6C9F123D3F
D68749C20598E830785CF83CC6E75C6C18BEA0B211C3A49775D813BD24790AFF
FA91A12934E2DC365736CE16540440CE9058FA7C865A3FF16BA38D60306BC158
A87DB5232C20377ED8B3BD30B25238BAF7C178F2D57C33CEBE> |-
/e <1C60D8A8C9B766CA339955FA0D121BA8971F871AC35FFE3734C0F63653C8
3947F18B532292E671C7A614E2745BE9F76218E601599C5A2B7087AE9F9D449E
0C235330FE9F1F825BC5E2D8D70AAB62E0B7F00C1BBEF316B7EA55> |-
/f <1C60D8A8C9B85C5CBADACD694607E3D111CD7F2DE5F3924B0E51344C1E43
465804BDED4BB8348C5BD5289199673BE7849A9352C729C617997E0DC6EDA99F
2889CEB0A6E41E31630F4F73B35CF97E6A110AAD1424AFB1151B1B30FF1B661B
FF45751D1119D2C82A644431D031> |-
/g <1C60D8A8C9B747CAEF136FDE03A0E543F6187A5B8D54FC607082B92E659E
CE1D3BAF19A7B8AB700174E05443C1EF6E9C03733455D58A8444D1DB3AAE5361
E612D2D1936083217E61C88C14496F593CB3CD30F05559932B5864B19B009B9A
25DE830F1074917B816A7363EC6B30373F93D9D0A45B36AFB903768615C6A63F
DBE16588D66D55C8330C6BD8750B08D22D3E1F0F9EEE9B8C88AE5230D2F0AA58
6A1770EAA61CE6D820B4B5A1D8EEC9391ED3B8A59693DBABBF5620841366C217
E9D3349DA06525987E1B5C1475ECE75C9E468689D592F8D7E3C97BAE95510C> |-
/h <1C60D8A8C9B7883C34BD8FB7A6B90B071060E64D74F673F7F0C62CFC787C
709A385E47437A0C07F0053DCA1B624B6078D3E0209421DDFE5A7B3E4CB95D10
B032F5A8840993B5E3A72E0AA6375F57BCA01D43D81F3C42C5D56C3115B7BF4D
4D8C88AF2C03BF0450D12E732D6DEBFB564D881531FC3EF16B51> |-
/i <1C60D8A8C9B8707CDC930255A762B7AE8465E505F9CAD825838B9CD55757
37225E810C4E7E4FD8E0E54CF7C950D6E23EDA8DBFF55D2A1E47D9E5C5FAB2AD
B9C5FF0F0568C1AFEC8C84C75B0B3CBDD192462B1C2F0A> |-
/k <1C60D8A8C9B771A8F4E8DC43B8DB48E04736FC3241987EA6827F8779094D
809E640916071D343AEDB4E1D69399D6E7DDF120BA31D9E808F38E84E2E8EE01
8542578FE99701FA623CFF3D54FBFFFA847A91F7E3D6F6DCA7913CB69F37CC9F
81BECBD3B58254048B44A8C8897782E3D8E5296A8E80A82DD8DA0F8A2DF25A77
B35D22707CB0F087CB60D9C39BF17F> |-
/l <1C60D8A8C9B87DE052DD6D6BA31C679FF34CE0351109963F6EFED542FED7
C58CC6E1B29EB1F38BC404B978ADB1E3F70FB8A5118F39BB795EA3C617> |-
/m <1C60D8A8C9B6D747EDFC1391E3F4C970FDFC446C3436EE2189F3376BC187
BB8B90F6E480DA32B21C8A278541F0577F7C40C0FCF3A9535BD60B5EDF81B315
6B81D1860E33CC04A679205B4C26A8266E31439AA09341A4AF48C7446FF519EB
5B7A7C721CCBF665F071E31284D343352B64199ED355383A681B9AA77CBE1880
0AD30ADFCC7C5D32466324E029F5D9A43AC22C749775EC6E286F93D016A08E3E
A82D32AEB8C486C54A5A8ADAB7C7F13B29A8D4D073489FCBD6017927> |-
/n <1C60D8A8C9B7883C3B86AFB18CE910CE265F409AD8DE8AC035B3458B3F13
2C5F160EBF4631C4E5549ABECEC287FD8B20AF52CE791BEB14B0879B0C7510C2
01478B09E8C0DB57F33DA1E01CE7CF68B483F1401BFFFC0F9D8C6FADC3AFB798
8BA49B3415A4426769F852D49A6725F0C1C7DE70E8CD5009F730B57C187A6563
19> |-
/o <1C60D8A8C9B7A73DFE3EDB9B7762CA8913D78E7155251E7598AF644A18C0
1342B39F593A29DCE6F98E064DD7D682168DF44CE7BE226A222E5D2B0F8B1A68
68645C7EFE8A643F> |-
/p <1C60D8A8C9B7B3D0E446E4E74F8A46E25DAFBA9D0EAB689B0E11B63A9BDA
0E3F17522772083D48C50FBF195D43425E10EF6F0336653A8920D2F027D03BF6
196F713343381BBC5C27AD4CC8EDBABA55742D3DABFEF60B0AF77AA12303BEB2
94469AA11C66B21B16DD14A1F6F2CDCE9143B680002946DDB2BC6A> |-
/q <1C60D8A8C9B7B3D0EBBA260A9D204D47F9B4E02BA669F68074BF09A9CE23
AC6E36BCCAD23230C3D9308520133F1216A6178BD492DA6E4DF350813088DC5A
21AE663FE6CE4DF2B947935EC1C96A3E00D2B10BE366D3D7228793178FC3311A
32F4FCBF90F1BAE5ADC19F5F1D58> |-
/r <1C60D8A8C9B72F60D2CE21E703229D842C25AD58527CAA9CC409E2789518
848D59787ECA99AE84F2B0E1CA5BDA92E1D35C28899A8F8A5F710CC21D7FF6F2
771E0F006A4FA63BA94290FE25AC39109992726576DF1CF3E2D60707E095913A
920FFF2C779FE79ECFF348A81B777307> |-
/s <1C60D8A8C9B81F2C79081770A65387C3504628BB5AC27F3FC1E774BD699D
478B4BFB0DB35B8C08244B54B31E454EB183E33DCE02C1ED53288CF4B5FB2322
A8D996AC8F90110224AFC92C26D89325FD0793E207F9034031E5DF13F4623C3D
F6F6CC3D92641C0BA0246FF1B06B9CEF27FD177FF267796D7C8C79> |-
/t <1C60D8A8C9B849F23C1CDC8CD9D807EAF4512C430D5A9682833865348683
F6B68E6C5F3EA3E33197AF0694152F4E7FECA2E2791C47A79B6DDC05A4816E4F
BDD598691EAAC5658D14D2C3E8CB2A09> |-
/u <1C60D8A8C9B7B3D0EBBDB107BF4FF7F53E53DB646AD98E4AFED201FB9DAA
271CC92F80C7EEDC76789A536CCCF127271B86657BCAD91AAA8797D0E3917899
C8A5B15B08382D956636844C8B581015351F41F3882022A15DE4A9EB6D36FFBE
7C7DF1634C93F80DFB87250CFD0053E08FF3A48233> |-
/v <1C60D8A8C9B771A8F4F11A7377B8F512C27E49A972B14F16CD654B1A76CD
325F12C0D7919C7CEF44EC85180EA4D9AEE20D0EFF1006B377BA0E0A0C17B35E
CDCE1EC70FDED5FD177EC529FD569D9C2C7B08B2843F1ECA34E65912FC9945DE> |-
/w <1C60D8A8C9B658EF0A5F519CE149F074B4ECD1D8170B46AE2D0DD7E71534
DE8D8BB1B59894B41B75446465C5093CB88F5115687DBCB64C0905D8A86867D1
D554CEABAFA2A6A876DD50DB12D99EE173425C0B76EB68B6EF158C613CE369F6
BB59D0517B9CE5ECFA47C02AB755203C5F44878824A2B62A4B6DE1CD4C2B47B3
0391007490> |-
/x <1C60D8A8C9B75CBB5CC342A963C1E7DC7EDCCCCA1CEF6E69E98825B1AAD9
2BEF33E709EDF78A529C064B47793098167DA49533FD6B3785B7D5F8C20274C8
1384B187CD6122AB3442A5201D195E7BC38D696F362FF1ED661FA25CF368D269
D37BDA4DE1032614B745C7E7DF542C3E6280A6624EA3850A060AB9FA69C976C9
C76F4D79B3269F6279FC1D61D923C6F1A9E5878B1E03A350A4BF75BEB18D9509
42FDBA27753C0C2AD88FFA> |-
/y <1C60D8A8C9B771A8F4EE2DFD7CF5F2F85A2085970B2A51E09262C4C1FD66
1512D1F90BA29825A2B49850BF6EF157FCAE5CDA573B539FAD373DE9683BA64E
1A053CC3DA6D068887A3D35660E14F8F200686E700CE45A7E9B8B4E1578E6488
B247F2E7DC4DB05D0051C90804E56F701A50F142676DA2C648E21C> |-
/z <1C60D8A8C9B710637214B0EAB4BC49D7E72A9673C9A9EC1739528D23570F
80FCE481B457A26ADF9B486391AE7587982444F525B40B16070ECF53EA0013E7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NVLZZB+AdvP49811 /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
pop
%ADOEndSubsetFont
reset_gvm
/NVLZZB+AdvP49811*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period 2{/.notdef}rp 
/one /two /three /four /five 4{/.notdef}rp /colon 6{/.notdef}rp 
/A /B /.notdef /D /E /F 2{/.notdef}rp /I 
3{/.notdef}rp /M /.notdef /O /P 2{/.notdef}rp /S /T 
6{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /.notdef /k 
/l /m /n /o /p /q /r /s 
/t /u /v /w /x /y /z 133{/.notdef}rp]
NVLZZB+AdvP49811 nf
NVLZZB+AdvP49811*1 [8.9663 0 0 -8.9663 0 0 ]msf
67.011 515.282 mo
(Mathematicalmodelingisakeytooltoinvestigatehowthe)
[8.31178 4.19625 2.6092 4.76115 3.91824 7.19099 4.19625 2.6092 2.24158 3.82863 4.19624 6.59021 
7.19099 4.48315 4.66251 3.91824 2.14294 2.24158 4.76115 8.58257 2.24158 7.39622 8.56105 4.10651 
3.91823 8.52869 2.60919 4.48315 4.48315 6.50861 2.60921 8.89905 2.24158 4.76115 4.10651 3.91824 
2.9857 2.60919 2.24158 4.19626 4.19624 2.60918 8.31265 4.76114 4.48315 10.4279 2.60919 4.76117 
0 ]xsh
58.0537 525.94 mo
(dynamicsofbiochemicalsystemsemergesfromtheinteractionsof)
[4.66251 4.1065 4.76115 4.19625 7.19099 2.24158 3.82863 5.63436 4.48315 5.04089 4.66252 2.24158 
4.48315 3.82863 4.76116 3.91824 7.19099 2.24156 3.82863 4.19626 4.79337 2.98572 4.10649 2.98572 
2.60919 3.91824 7.19098 5.6263 3.91824 7.19098 3.91824 3.26372 4.19624 3.91824 5.6245 2.42094 
3.26372 4.48314 9.84413 2.60919 4.76115 6.51936 2.24158 4.76115 2.60921 3.91826 3.2637 4.19626 
3.82861 2.60919 2.24158 4.48315 4.76117 5.64511 4.48315 0 ]xsh
58.0537 536.598 mo
(cellularmolecularcomponents[1].Thereliabilityofthe)
[3.82863 3.91824 2.14293 2.14294 4.66251 2.14293 4.19625 10.9236 7.19099 4.48315 2.14293 3.91824 
3.82863 4.66251 2.14294 4.19625 10.9165 3.82863 4.48314 7.19099 4.66252 4.48314 4.76117 3.91823 
4.76117 2.60919 10.6636 3.07545 4.48315 3.07545 9.83156 6.24956 4.76117 11.553 3.26372 3.91824 
2.14293 2.24158 4.19624 4.66252 2.24158 2.14293 2.24159 2.60919 11.7807 4.48315 10.0298 2.60919 
4.76117 0 ]xsh
58.0537 547.257 mo
(predictionsderivedfromamodelbasedonordinarydifferential)
[4.66251 3.26372 3.91824 4.66251 2.24158 3.82863 2.6092 2.24157 4.48315 4.76115 6.63948 4.66252 
3.91824 3.26373 2.24157 4.1065 3.91824 8.33241 2.42094 3.26372 4.48315 10.8645 7.82402 7.19098 
4.48315 4.66252 3.91823 5.82271 4.66251 4.19626 2.9857 3.91824 8.27414 4.48314 8.44273 4.48314 
3.26373 4.66251 2.24158 4.76115 4.19626 3.26372 7.76653 4.66254 2.24158 2.42093 2.42093 3.91824 
3.26373 3.91824 4.76114 2.60922 2.24155 4.19626 0 ]xsh
58.0537 557.915 mo
(equations\(ODE\)oftendependsonfindingaccurateparameter)
[3.91824 4.66251 4.66251 4.19625 2.6092 2.24158 4.48315 4.76116 7.35588 2.14293 7.37036 6.81433 
5.60394 6.47096 4.48315 2.42094 2.60919 3.91824 9.13223 4.66251 3.91824 4.66252 3.91824 4.76115 
4.66251 7.31644 4.48314 9.12326 2.42094 2.24158 4.76117 4.66251 2.24158 4.76115 8.56105 4.19624 
3.82863 3.82863 4.66251 3.26372 4.19626 2.60919 8.28035 4.66251 4.19626 3.26373 4.19623 7.19101 
3.91824 2.60919 3.91824 0 ]xsh
58.0537 568.573 mo
(valuesandselectingthemostappropriatenetworkstructureand)
[4.1065 4.19625 2.14294 4.66251 3.91824 6.42787 4.19624 4.76116 8.10737 2.9857 3.91824 2.14293 
3.91824 3.82863 2.6092 2.24157 4.76117 7.60881 2.60921 4.76115 7.36937 7.19099 4.48314 2.98572 
6.03253 4.19624 4.66252 4.66251 3.26372 4.48315 4.66251 3.26372 2.24158 4.19626 2.60919 7.39447 
4.76115 3.91824 2.60919 6.07021 4.48315 3.26372 7.49127 2.98572 2.60919 3.26373 4.66251 3.82864 
2.60919 4.66251 3.26373 7.37653 4.19626 4.76117 0 ]xsh
58.0537 579.231 mo
(rateequations.Parameterestimationandmodeldiscrimination)
[3.26372 4.19625 2.6092 8.24179 3.91824 4.66251 4.66251 4.19625 2.6092 2.24158 4.48314 4.76116 
2.98571 6.52388 5.03903 4.19624 3.26373 4.19624 7.19099 3.91824 2.60919 3.91824 7.56306 3.91823 
2.98572 2.60919 2.24158 7.19099 4.19624 2.60921 2.24156 4.48315 9.07843 4.19624 4.76115 8.95737 
7.19099 4.48315 4.66251 3.91824 6.39026 4.66252 2.24158 2.9857 3.82864 3.2637 2.24158 7.19101 
2.24158 4.76114 4.19626 2.60919 2.24158 4.48315 0 ]xsh
58.0537 589.889 mo
(are,therefore,twomainconcernsinSystemsBiochemistry.To)
[4.19625 3.26372 3.91824 6.19572 2.60919 4.76116 3.91824 3.26372 3.91824 2.42094 4.48315 3.26373 
3.91824 6.21992 2.6092 6.0702 8.38528 7.19099 4.19624 2.24158 8.70813 3.82863 4.48314 4.76117 
3.82861 3.91824 3.26372 4.76117 6.92729 2.24158 8.70004 4.85078 4.10649 2.98572 2.60919 3.91824 
7.19099 6.93536 5.50529 2.24158 4.48315 3.82863 4.76115 3.91826 7.19098 2.24158 2.98572 2.60919 
3.2637 4.10651 6.15356 6.24957 0 ]xsh
58.0537 600.548 mo
(solvetheseproblems,severalconditionsmustbefulfilled.For)
[2.98571 4.48315 2.14293 4.1065 8.73135 2.60919 4.76116 3.91824 2.98571 8.68562 4.66251 3.26373 
4.48314 4.66252 2.14293 3.91824 7.19099 2.9857 7.0538 2.9857 3.91824 4.10651 3.91823 3.26373 
4.19624 6.97755 3.82863 4.48315 4.76115 4.66251 2.24158 2.60921 2.24156 4.48317 4.76115 7.76564 
7.19099 4.66252 2.9857 7.38374 4.66252 8.71701 2.42093 4.66254 2.14291 2.42096 2.24158 2.14291 
2.14294 3.91824 4.66251 7.08875 4.94943 4.48315 0 ]xsh
58.0537 611.206 mo
(instance,itisparamountthataminimalsetofvariablescanbe)
[2.24157 4.76116 2.98571 2.60919 4.19625 4.76116 3.82863 3.91824 5.84693 2.24157 6.20558 2.24158 
6.60271 4.66251 4.19625 3.26372 4.19624 7.19099 4.48315 4.66251 4.76117 6.23517 2.60919 4.76115 
4.19624 6.1778 7.82401 7.19099 2.24158 4.76115 2.24158 7.19099 4.19624 5.73843 2.9857 3.91824 
6.19214 4.48315 6.00478 4.10649 4.19626 3.26372 2.24158 4.19624 4.66251 2.14294 3.91824 6.59018 
3.82861 4.19626 8.35934 4.66251 0 ]xsh
58.0537 621.864 mo
(experimentallyobservedtoensureparameteridentifiability,)
[3.91824 4.29489 4.66252 3.91824 3.26373 2.24157 7.19099 3.91824 4.76116 2.6092 4.19624 2.14293 
2.14294 11.3988 4.48315 4.66252 2.9857 3.91824 3.26372 4.10651 3.91824 11.9485 2.60919 11.6777 
3.91824 4.76115 2.9857 4.66252 3.26372 11.1917 4.66251 4.19626 3.26372 4.19624 7.19099 3.91824 
2.60919 3.91824 10.547 2.24158 4.66251 3.91826 4.76114 2.60922 2.24158 2.42093 2.24158 4.19623 
4.66254 2.24158 2.14291 2.24158 2.60919 4.10651 0 ]xsh
58.0537 632.522 mo
(meaningthattheparametersofthemodelcanbeuniquely)
[7.19099 3.91824 4.19624 4.76116 2.24158 4.76115 9.66659 2.60919 4.76116 4.19625 8.04905 2.6092 
4.76115 9.35362 4.66251 4.19624 3.26373 4.19624 7.19099 3.91824 2.60919 3.91824 3.26372 8.47398 
4.48314 7.87604 2.60919 4.76117 9.35361 7.19099 4.48315 4.66251 3.91824 7.58009 3.82863 4.19624 
10.1732 4.66252 9.39755 4.66251 4.76114 2.24158 4.66254 4.66251 3.91824 2.14291 0 ]xsh
58.0537 643.181 mo
(estimated.Often,despitesatisfactoryparameterestimation,the)
[3.91824 2.98571 2.6092 2.24158 7.19099 4.19625 2.60919 3.91824 4.66252 6.65569 7.37035 2.42094 
2.60919 3.91824 4.76115 6.58575 4.66251 3.91824 2.98572 4.66251 2.24158 2.60919 8.28662 2.98572 
4.19624 2.60921 2.24158 2.9857 2.42094 4.19624 3.82863 2.60919 4.48315 3.26372 8.51164 4.66251 
4.19626 3.26372 4.19624 7.19099 3.91824 2.60919 3.91824 7.65541 3.91824 2.9857 2.60919 2.24158 
7.19099 4.19626 2.60919 2.24158 4.48315 4.76117 6.64133 2.60919 4.76117 0 ]xsh
58.0537 653.839 mo
(selectionofthebestmodelfromasetofcandidatemodelsisnot)
[2.98571 3.91824 2.14294 3.91824 3.82863 2.6092 2.24158 4.48315 7.9433 4.48315 5.55108 2.6092 
4.76115 7.08604 4.66251 3.91824 2.9857 5.78148 7.19099 4.48315 4.66251 3.91824 5.31253 2.42093 
3.26372 4.48315 10.3543 7.37032 2.9857 3.91824 5.73843 4.48314 5.55109 3.82863 4.19624 4.76115 
4.66252 2.24158 4.66251 4.19626 2.60919 7.10846 7.19098 4.48317 4.66251 3.91824 2.14294 6.17413 
2.24155 6.14905 4.76114 4.48315 0 ]xsh
58.0537 664.497 mo
(clearfromtheexperimentaldataavailable)
[3.82863 2.14293 3.91824 4.19625 6.436 2.42094 3.26372 4.48315 10.3543 2.6092 4.76116 7.08603 
3.91824 4.29489 4.66252 3.91823 3.26373 2.24156 7.19099 3.91824 4.76115 2.60921 4.19624 5.36632 
4.66251 4.19626 2.60919 7.35329 4.19624 4.10651 4.19624 2.24158 2.14293 4.19624 4.66251 2.14294 
0 ]xsh
true set_gvm
%ADOBeginSubsetFont: YFQAAA+AdvP49812 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
NVLZZC+AdvP49812 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/L <1C60D8A8C9B79EE3433E566837C57D475C4D6A8BCBC2E2146A32BFD25E50
F01298FE8BC64BA856E1CC00215F7228E518D10CC23E6BED521464338B094D38
D151F19CC3E3FE337F984F6076434597FDFB7DBA094BE4BE6629E87650940AD4
92D66F08168372A789AF9EBBCF4443B071FDD6E7717CF1B2> |-
/a <1C60D8A8C9B71B40B07AECDB3D0FE610017E316105DE45769CC35CC6E046
D0E0368FF78853AA31D00FC0B2B3E4C442AE55264E0443D06BB9D42C9E5DBBEA
8DC7AFC4459CB696272102C96CC59043561269AC139690EE1D667C52E6DE29D7
543FCBF3C7E39019C782A506B4D2EF1BFCF53E472B55D37D4D9AD7B17D0E7DE6
FE7E351EC71E811204B20775C0257D8A0A64> |-
/i <1C60D8A8C9B87DE0528568566F666655CB9CE27F8E51332206BF2534ED53
58408D3CA28C490A2E19BF88C886EC2AFD91AF59556853BFD45932C603A191B6
27521E3696F0604206EA976231D40CAFF515414789CF38140E2ECEE0A894501B
9120B04F8B63DA9C96294F731C3A0C6985228F2533DD0AC20BAC2BF9A9343285
8D7ABC79CF48> |-
/o <1C60D8A8C9B72F609908D835C69A556FDDFEE3DB532D7737FAEA5C87894A
AC2E5CA3445C0FF30A6018425140E28FBC7C914CF2F8C325B24D9DD86EF21E59
F54CCF34> |-
/p <1C60D8A8C9B71B408523A37D840BD3136CDAEE4963E7CEEA08C7888E712A
F899D031C53F2F47EEADCC2560428CBC2AAFF15AF05B8EA014F0B17FF6D7CFE6
FC04CFC15D0FFA55C099062FCF6F32A52D0A0DC808E2B5D9AF411A50B1C74A12
D6F3BDFFF0BFB1888240A49E2BBDD8410145E8AC964FC4A6E3181CFEFF419B2F
21BBAF2E8D50F22A71F3936E20F1094C0E71A92265E2E0D8312B1BDC18775AF3
C9933D77BC357255EEDD8BD49636E458E5F36D7A86E103FD853B60EE91811E6E
90E8CA95EC566130CEBC> |-
/r <1C60D8A8C9B849F20201CD75986839EAFBB94F6D3646E1EF99E9AB438F9D
4F1D4DD8A87A6BAF57B814DDCF568C4EE5FE074DCB872104CC2B44B10155F4DC
1E6C14FF14E2E12506E3F9FA2A779562D5416AC53A691FB4BD5527334CFF40B5
DFF218270B48C112B88FCFCB1A63013935219A6D4611C2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NVLZZC+AdvP49812 /Encoding get
dup 76 /L put
dup 97 /a put
dup 105 /i put
dup 111 /o put
dup 112 /p put
dup 114 /r put
pop
%ADOEndSubsetFont
reset_gvm
/NVLZZC+AdvP49812*1 
[76{/.notdef}rp /L 20{/.notdef}rp /a 7{/.notdef}rp /i 5{/.notdef}rp /o 
/p /.notdef /r 141{/.notdef}rp]
NVLZZC+AdvP49812 nf
NVLZZC+AdvP49812*1 [8.9663 0 0 -8.9663 0 0 ]msf
217.701 664.497 mo
(apriori)
[6.91661 3.72998 2.60919 2.14293 3.26373 2.60919 0 ]xsh
NVLZZB+AdvP49811*1 [8.9663 0 0 -8.9663 0 0 ]msf
241.116 664.497 mo
(.Insuchcases,)
[5.38606 3.1741 7.93793 2.98569 4.66254 3.82861 7.91193 3.82861 4.19626 2.98572 3.91824 2.98569 
0 ]xsh
58.0537 675.155 mo
(onepossiblestrategyistodesignexperimentsspecificallyto)
[4.48315 4.76115 9.57777 4.66251 4.48315 2.9857 2.98572 2.24157 4.66251 2.14293 9.56702 2.98571 
2.6092 3.26372 4.19624 2.60921 3.91823 4.19626 9.78217 2.24158 8.64345 2.60919 10.1463 4.66252 
3.91824 2.9857 2.24158 4.19624 10.3983 3.91824 4.29489 4.66251 3.91824 3.26372 2.24158 7.19099 
3.91824 4.76115 2.60919 8.71249 2.98572 4.66251 3.91823 3.82864 2.24158 2.42093 2.24158 3.82861 
4.19626 2.14294 2.14291 9.77948 2.60919 0 ]xsh
58.0537 685.814 mo
(discriminatewhichmodelbetterexplainstheobservedbehaviorof)
[4.66251 2.24157 2.98571 3.82863 3.26373 2.24157 7.19099 2.24157 4.76116 4.19625 2.60919 6.32031 
6.07021 4.76115 2.24158 3.82863 7.07895 7.19098 4.48315 4.66252 3.91823 4.51901 4.66251 3.91824 
2.60921 2.60919 3.91824 5.63889 3.91824 4.29489 4.66252 2.14293 4.19626 2.24156 4.76117 5.30261 
2.60919 4.76115 6.29251 4.48315 4.66251 2.98572 3.91824 3.26372 4.10649 3.91824 7.01617 4.66251 
3.91824 4.76117 4.19623 4.10651 2.24158 4.48315 5.64517 4.48315 0 ]xsh
58.0537 696.472 mo
(theinvestigatedbiochemicalsystem.Thispaperfocusesonthe)
[2.6092 4.76116 8.04991 2.24157 4.76116 4.1065 3.91824 2.9857 2.60921 2.24158 4.19624 4.19625 
2.6092 3.91824 8.81571 4.66251 2.24158 4.48314 3.82863 4.76117 3.91824 7.19098 2.24158 3.82863 
4.19624 6.26744 2.9857 4.10651 2.9857 2.60921 3.91824 7.19099 6.41986 6.24956 4.76115 2.24158 
7.10036 4.66251 4.19626 4.66251 3.91824 7.39091 2.42093 4.48315 3.82863 4.66252 2.98569 3.91824 
7.12366 4.48315 8.89642 2.60919 4.76117 0 ]xsh
58.0537 707.13 mo
(implementationofthisstrategy,assumingthat\(i\)theobservable)
[2.24157 7.19099 4.66251 2.14293 3.91824 7.19099 3.91824 4.76116 2.60919 4.19625 2.6092 2.24157 
4.48315 8.43645 4.48315 6.00476 2.60921 4.76115 2.24158 6.60182 2.9857 2.60921 3.26372 4.19624 
2.60919 3.91824 4.19626 4.10649 5.84604 4.19624 2.98572 2.9857 4.66252 7.19099 2.24158 4.76115 
7.82491 2.60919 4.76115 4.19626 6.23427 2.14294 2.24156 5.76353 2.60921 4.76115 7.53972 4.48315 
4.66251 2.98572 3.91824 3.2637 4.10651 4.19626 4.66251 2.14294 0 ]xsh
58.0537 717.788 mo
(variablestobemeasuredwerealreadychosen\(possiblydueto)
[4.1065 4.19625 3.26373 2.24157 4.19625 4.66251 2.14293 3.91824 7.21422 2.6092 8.6722 4.66251 
8.09295 7.19099 3.91824 4.19626 2.9857 4.66252 3.26372 3.91824 8.86771 6.07021 3.91823 3.26372 
8.12076 4.19624 2.14293 3.26373 3.91824 4.19624 4.66252 8.29018 3.82863 4.76115 4.48315 2.9857 
3.91824 8.93585 2.14294 4.66251 4.48315 2.9857 2.98572 2.24158 4.66251 2.14294 8.33139 4.66251 
4.66254 8.13599 2.60919 0 ]xsh
58.0537 728.447 mo
(experimentalconstraintsconcerningwhichbiochemicalvariables)
[3.91824 4.29489 4.66251 3.91824 3.26372 2.24158 7.19099 3.91824 4.76115 2.60919 4.19625 5.42281 
3.82862 4.48315 4.76115 2.98572 2.60919 3.26372 4.19626 2.24158 4.76115 2.60919 6.26828 3.82863 
4.48314 4.76117 3.82863 3.91824 3.26372 4.76115 2.24158 4.76115 7.46446 6.07021 4.76117 2.24158 
3.82863 7.98633 4.66251 2.24158 4.48315 3.82863 4.76115 3.91824 7.19099 2.24158 3.82863 4.19624 
5.41742 4.10651 4.19623 3.26373 2.24158 4.19626 4.66251 2.14291 3.91824 0 ]xsh
315.1 493.963 mo
(canactuallybemeasured\)and\(ii\)estimatesfortheparametersof)
[3.82861 4.19626 7.6788 4.19623 3.82864 2.60919 4.66251 4.19626 2.14294 2.14291 7.06091 4.66251 
6.84573 7.19098 3.91824 4.19626 2.98572 4.66251 3.2637 3.91827 4.66251 5.05518 4.19626 4.76117 
7.59628 2.14291 2.24158 2.24158 5.05249 3.91824 2.98572 2.60919 2.24158 7.19101 4.19623 2.60919 
3.91827 5.93201 2.42096 4.48315 6.19208 2.60919 4.76117 6.85919 4.66251 4.19626 3.26373 4.19623 
7.19098 3.91827 2.60919 3.91821 3.26373 5.92218 4.48315 0 ]xsh
315.1 504.622 mo
(thecandidatemodelswerepreviouslyobtained.Aprocedureis)
[2.60919 4.76117 7.87955 3.82861 4.19626 4.76117 4.66251 2.24158 4.66251 4.19626 2.60919 7.95935 
7.19101 4.48312 4.66251 3.91827 2.14291 6.96854 6.07022 3.91824 3.2637 7.83743 4.66251 3.2637 
3.91827 4.10648 2.24158 4.48315 4.66251 2.98572 2.14294 8.12341 4.48315 4.66248 2.60922 4.19626 
2.24158 4.76114 3.91824 4.66251 6.22171 10.0351 4.66254 3.26373 4.48315 3.82861 3.91821 4.66254 
4.66254 3.26367 7.90289 2.24158 0 ]xsh
315.1 515.28 mo
(presentedtooptimizetime-coursekineticexperimentssothatthe)
[4.66251 3.26373 3.91824 2.98572 3.91821 4.76117 2.60919 3.91824 7.66263 2.60922 7.42499 4.48315 
4.66251 2.60919 2.24158 7.19098 2.24158 3.82864 6.92734 2.60919 2.24158 7.19098 3.91824 2.79745 
3.82861 4.48315 4.66254 3.2637 2.98572 6.91745 4.10651 2.24158 4.76117 3.91821 2.60922 2.24158 
6.76688 3.91824 4.29489 4.66251 3.91824 3.26373 2.24158 7.19098 3.91824 4.76114 2.60919 5.99121 
2.98572 7.44562 2.60919 4.76117 4.19623 5.55469 2.60919 4.76117 0 ]xsh
315.1 525.938 mo
(divergencebetweenthetimecoursespredictedbythemodels)
[4.66251 2.24158 4.10651 3.91824 3.2637 4.19626 3.91824 4.76117 3.82861 8.64169 4.66251 3.91824 
2.60919 6.07022 3.91824 3.91824 9.54196 2.60922 4.76114 8.61658 2.60922 2.24158 7.19098 8.65067 
3.82861 4.48315 4.66251 3.2637 2.98572 3.91827 7.69751 4.66248 3.26373 3.91824 4.66251 2.24158 
3.82861 2.60922 3.91824 9.38864 4.66251 8.82996 2.60919 4.76117 8.67303 7.19104 4.48315 4.66248 
3.91827 2.14288 0 ]xsh
315.1 536.596 mo
(underconsiderationismaximized.Intheseconditions,therelative)
[4.66251 4.76117 4.66251 3.91824 5.6362 3.82864 4.48312 4.76117 2.98572 2.24158 4.66251 3.91824 
3.26373 4.19623 2.60919 2.24158 4.48315 7.1767 2.24158 5.3555 7.19098 4.19626 4.29489 2.24158 
7.19098 2.24158 3.82864 3.91821 4.66254 4.62302 3.1741 7.14441 2.60919 4.76117 3.91821 2.98572 
6.24768 3.82864 4.48315 4.76114 4.66254 2.24158 2.60919 2.24158 4.48315 4.76117 2.98569 4.66696 
2.60919 4.76117 6.29248 3.26373 3.91827 2.14294 4.19623 2.60919 2.24158 4.10651 0 ]xsh
315.1 547.255 mo
(competenceofthecandidatemodelsindescribingnewexper-)
[3.82861 4.48315 7.19101 4.66251 3.91824 2.60919 3.91824 4.76117 3.82861 8.41931 4.48315 6.91217 
2.60919 4.76117 8.38971 3.82864 4.19626 4.76114 4.66251 2.24158 4.66254 4.19623 2.60919 8.41217 
7.19098 4.48315 4.66254 3.91821 2.14294 7.4787 2.24158 9.26672 4.66254 3.91824 2.98569 3.82864 
3.2637 2.24158 4.66254 2.24158 4.76117 8.70538 4.76117 3.91821 10.539 3.91821 4.29492 4.66254 
3.91821 3.26373 0 ]xsh
315.1 557.913 mo
(imentaldata,accordingtoappropriatestatisticalcriteria,should)
[2.24158 7.19098 3.91824 4.76117 2.60919 4.19626 5.75275 4.66254 4.19623 2.60919 4.19626 5.82181 
4.19626 3.82864 3.82861 4.48315 3.26373 4.66251 2.24158 4.76114 7.85181 2.60922 8.04904 4.19626 
4.66251 4.66251 3.26373 4.48312 4.66254 3.26373 2.24158 4.19623 2.60919 7.56482 2.98572 2.60919 
4.19626 2.60919 2.24158 2.98572 2.60919 2.24158 3.82864 4.19623 5.72229 3.82861 3.26373 2.24158 
2.60919 3.91827 3.26367 2.24158 4.19629 5.84424 2.98572 4.76111 4.48315 4.66254 2.14288 0 
]xsh
315.1 568.571 mo
(beclear.Thisideahasbeenexploredbeforefortwocandidate-)
[4.66251 7.46979 3.82864 2.14294 3.91821 4.19626 3.26373 5.72318 6.24957 4.76117 2.24158 6.53278 
2.24158 4.66251 3.91824 7.71552 4.76117 4.19623 6.46286 4.66251 3.91824 3.91824 8.30643 3.91824 
4.29489 4.66251 2.14294 4.48315 3.26373 3.91821 8.18182 4.66248 3.91827 2.42093 4.48315 3.2637 
7.44293 2.4209 4.48315 6.81531 2.60919 6.07019 7.9881 3.82861 4.19623 4.76117 4.66254 2.24158 
4.66248 4.19629 2.60919 3.91821 0 ]xsh
315.1 579.229 mo
(modelproblems[2,3,4,5].Theseworkssharethecommonfeature)
[7.19098 4.48315 4.66254 3.91821 4.68936 4.66254 3.2637 4.48315 4.66251 2.14294 3.91824 7.19098 
5.50433 3.07547 4.48315 2.24158 4.48315 2.24158 4.48312 2.24158 4.48315 3.07547 4.7934 6.24954 
4.76117 3.91824 2.98572 6.46286 6.07022 4.48315 3.2637 4.10651 5.48999 2.98572 4.76117 4.19623 
3.26373 6.44943 2.60919 4.76117 6.46194 3.82864 4.48315 7.19101 7.19098 4.48315 7.23499 2.4209 
3.91821 4.19629 2.60919 4.66254 3.26367 0 ]xsh
315.1 589.888 mo
(thatadistancebetweenquantitativepredictionsdrawnfromthe)
[2.60919 4.76117 4.19623 6.06482 7.65366 4.66251 2.24158 2.98572 2.60919 4.19626 4.76114 3.82864 
7.31198 4.66251 3.91824 2.60919 6.07022 3.91824 3.91824 8.2374 4.66251 4.66251 4.19626 4.76114 
2.60922 2.24155 2.60922 4.19626 2.60919 2.24158 4.10648 7.36398 4.66254 3.26373 3.91821 4.66254 
2.24158 3.82861 2.60919 2.24158 4.48315 4.76117 6.46912 4.66251 3.26373 4.19626 6.07019 8.22577 
2.4209 3.26373 4.48315 10.5811 2.60919 4.76117 0 ]xsh
315.1 600.546 mo
(models\(oftentheweightedsumofthesquareddifferencesbetween)
[7.19098 4.48315 4.66254 3.91821 2.14294 5.21027 2.14291 4.48315 2.42093 2.60919 3.91824 6.9884 
2.60919 4.76117 6.17862 6.07022 3.91824 2.24158 4.19623 4.76117 2.60919 3.91824 6.86642 2.98572 
4.66251 9.41644 4.48312 4.64459 2.60919 4.76117 6.17865 2.98572 4.66248 4.66254 4.19623 3.26373 
3.91824 6.92471 4.66254 2.24158 2.4209 2.42096 3.91824 3.2637 3.91827 4.76114 3.82864 3.91821 
5.23627 4.66248 3.91827 2.60919 6.07019 3.91827 3.91821 0 ]xsh
315.1 611.204 mo
(outputscomputedoverthetimecoursespredictedbyeachmodel\))
[4.48315 4.66251 2.60919 4.66254 4.66251 2.60919 5.62 3.82864 4.48315 7.19098 4.66251 4.66254 
2.60919 3.91824 7.25107 4.48315 4.10651 3.91824 5.86038 2.60919 4.76114 6.51938 2.60919 2.24158 
7.19098 6.55344 3.82864 4.48315 4.66248 3.26373 2.98572 3.91824 5.60028 4.66251 3.26373 3.91821 
4.66254 2.24158 3.82861 2.60919 3.91827 7.23404 4.66251 6.73273 3.91821 4.19629 3.82861 7.33179 
7.19098 4.48315 4.66254 3.91821 2.14294 0 ]xsh
315.1 621.862 mo
(ismaximizedtofindtheoptimalexperimentalconditions.They)
[2.24158 6.54532 7.19101 4.19623 4.29492 2.24155 7.19101 2.24158 3.82861 3.91824 8.26517 2.60922 
8.04904 2.42093 2.24158 4.76117 8.26425 2.60922 4.76114 7.48325 4.48315 4.66251 2.60919 2.24158 
7.19101 4.19626 5.7402 3.91824 4.29489 4.66251 3.91824 3.2637 2.24158 7.19101 3.91824 4.76117 
2.60919 4.19623 5.70706 3.82861 4.48315 4.76114 4.66254 2.24158 2.60919 2.24158 4.48315 4.76117 
2.98572 5.85767 6.24957 4.76111 3.91827 0 ]xsh
315.1 632.521 mo
(differintheexperimentalparametersandmanipulationsconsid-)
[4.66251 2.24158 2.42096 2.42093 3.91824 6.72919 2.24158 8.13339 2.60919 4.76114 7.36938 3.91824 
4.29489 4.66251 3.91824 3.26373 2.24158 7.19098 3.91824 4.76117 2.60919 4.19623 5.59317 4.66251 
4.19626 3.26373 4.19623 7.19101 3.91824 2.60919 3.91824 3.26373 6.43234 4.19626 4.76114 8.04999 
7.19101 4.19623 4.76117 2.24158 4.66251 4.66251 2.14294 4.19623 2.60919 2.24158 4.48315 4.76117 
6.44403 3.82861 4.48315 4.76117 2.98572 2.24158 4.66248 0 ]xsh
315.1 643.179 mo
(eredinthedesignofthediscriminatoryexperiments:theoptimal)
[3.91824 3.2637 3.91824 7.72092 2.24158 7.73618 2.60922 4.76114 6.91568 4.66251 3.91824 2.98572 
2.24158 4.19626 7.78995 4.48315 5.43811 2.60919 4.76117 6.91568 4.66251 2.24158 2.98572 3.82861 
3.26373 2.24158 7.19098 2.24158 4.76117 4.19623 2.60919 4.48315 3.26373 7.13354 3.91821 4.29492 
4.66248 3.91827 3.2637 2.24158 7.19101 3.91821 4.76117 2.60919 2.98572 5.27307 2.60919 4.76117 
6.97308 4.48309 4.66254 2.60919 2.24158 7.19104 4.19623 0 ]xsh
315.1 653.837 mo
(spacinginthetimebetweenmeasurements[5],theperturbation)
[2.98572 4.66251 4.19626 3.82861 2.24158 4.76117 7.59717 2.24158 8.07687 2.60922 4.76114 7.3129 
2.60919 2.24158 7.19098 7.28958 4.66251 3.91824 2.60919 6.07022 3.91821 3.91827 8.12439 7.19101 
3.91824 4.19623 2.98572 4.66254 3.2637 3.91824 7.19098 3.91824 4.76114 2.60919 6.375 3.07544 
4.48315 3.07547 5.6362 2.60919 4.76117 7.25641 4.66248 3.91827 3.26373 2.60919 4.66248 3.26373 
4.66254 4.19623 2.60919 2.24158 4.48315 0 ]xsh
315.1 664.495 mo
(appliedtoarunningbiochemicalsystemandtheoptimalinstant)
[4.19626 4.66251 4.66251 2.14294 2.24158 3.91824 7.88229 2.60919 7.65186 7.42679 3.26373 4.66251 
4.76117 4.76114 2.24158 4.76117 7.35239 4.66251 2.24158 4.48315 3.82864 4.76114 3.91824 7.19101 
2.24158 3.82861 4.19626 5.36093 2.98572 4.10651 2.98569 2.60922 3.91821 10.3794 4.19626 4.76117 
7.88052 2.60919 4.76117 7.086 4.48315 4.66254 2.60919 2.24158 7.19098 4.19623 5.34302 2.24158 
4.76117 2.98572 2.60919 4.19623 4.76117 0 ]xsh
315.1 675.153 mo
(forsuchperturbation[3]ordifferentcombinationsofconstantor)
[2.42093 4.48315 6.07825 2.98572 4.66251 3.82861 7.57123 4.66251 3.91824 3.2637 2.60922 4.66251 
3.2637 4.66254 4.19623 2.60919 2.24158 4.48315 7.61514 3.07547 4.48315 5.9339 4.48315 6.06122 
4.66251 2.24158 2.42093 2.42096 3.91821 3.26373 3.91824 4.76114 5.44348 3.82861 4.48315 7.19098 
4.66254 2.24158 4.76114 4.19626 2.60919 2.24158 4.48315 4.76117 5.78946 4.48312 5.26776 3.82861 
4.48315 4.76117 2.98572 2.60919 4.19623 4.76117 5.42548 4.48315 0 ]xsh
315.1 685.812 mo
(sinusoidalinputvariablevalues[2].Themeasureusedtochoose)
[2.98572 2.24158 4.76114 4.66254 2.98569 4.48315 2.24158 4.66251 4.19626 5.32956 2.24158 4.76114 
4.66254 4.66251 5.72498 4.10651 4.19626 3.2637 2.24158 4.19626 4.66251 2.14294 7.10754 4.10651 
4.19626 2.14291 4.66251 3.91824 6.14456 3.07544 4.48315 3.07544 5.35291 6.24957 4.76117 7.07349 
7.19098 3.91824 4.19626 2.98572 4.66248 3.26373 7.06006 4.66251 2.98569 3.91827 7.8222 2.60919 
7.59534 3.82867 4.76117 4.48315 4.48315 2.98566 0 ]xsh
315.1 696.47 mo
(thebestmodelalsodiffersamongthedifferentapproachesand)
[2.60919 4.76117 7.76657 4.66251 3.91824 2.98572 6.46112 7.19098 4.48315 4.66251 3.91824 5.93658 
4.19626 2.14291 2.98572 8.36285 4.66254 2.24155 2.42096 2.42093 3.91824 3.26373 6.80981 4.19626 
7.19101 4.48315 4.76114 8.05444 2.60922 4.76114 7.76657 4.66251 2.24158 2.42093 2.42096 3.91824 
3.2637 3.91824 4.76117 6.46378 4.19629 4.66248 4.66254 3.26373 4.48315 4.19623 3.82861 4.76117 
3.91821 6.81348 4.19623 4.76117 0 ]xsh
315.1 707.128 mo
(ranges,fromsimple)
[3.26373 4.19623 4.76117 4.19626 3.91824 2.98569 5.5914 2.42093 3.26373 4.48312 10.4682 2.98569 
2.24158 7.19101 4.66251 2.14291 0 ]xsh
NVLZZC+AdvP49812*1 [8.9663 0 0 -8.9663 0 0 ]msf
391.126 707.128 mo
(L)sh
NVLZZB+AdvP49811*1 [6.7246 0 0 -5.9768 0 0 ]msf
396 708.661 mo
(2)sh
NVLZZB+AdvP49811*1 [8.9663 0 0 -8.9663 0 0 ]msf
402.633 707.131 mo
(distancesintheamplitudes[4]orphases)
[4.66251 2.24158 2.98572 2.60919 4.19626 4.76114 3.82864 3.91824 6.3418 2.24158 8.0195 2.60919 
4.76117 7.25641 4.19623 7.19101 4.66251 2.14294 2.24158 2.60919 4.66251 4.66251 3.91824 6.34448 
3.07547 4.48315 6.38763 4.48315 6.57135 4.66254 4.76117 4.19623 2.98572 3.91821 0 ]xsh
315.099 717.789 mo
([2]ofthemodeloutputs,tothefittingscorestonewdata)
[3.07547 4.48315 8.59869 4.48315 7.87604 2.60919 4.76117 9.46747 7.19098 4.48315 4.66254 3.91821 
7.63748 4.48315 4.66251 2.60919 4.66254 4.66251 2.60919 2.98572 7.73703 2.60919 9.97681 2.60919 
4.76117 9.4101 2.42093 2.24158 2.60922 2.60919 2.24158 4.76114 9.70517 2.98572 3.82861 4.48315 
3.2637 3.91824 8.50537 2.60919 9.97681 4.76117 3.91821 11.5594 4.66248 4.19629 2.60919 0 
]xsh
315.099 728.447 mo
(generatedatthediscriminatoryconditions[2].Thegoaloffinding)
[4.19626 3.91824 4.76114 3.91824 3.26373 4.19623 2.60922 3.91821 7.08792 4.19626 4.98795 2.60919 
4.76117 6.29251 4.66251 2.24158 2.98572 3.82861 3.26373 2.24158 7.19098 2.24158 4.76117 4.19623 
2.60922 4.48312 3.26373 6.45389 3.82861 4.48315 4.76117 4.66248 2.24158 2.60919 2.24158 4.48318 
4.76114 5.3851 3.07547 4.48315 3.07544 4.61584 6.24957 4.76117 6.27994 4.19626 4.48315 4.19623 
4.52887 4.48315 4.75757 2.42096 2.24158 4.76111 4.66254 2.24158 4.76117 0 ]xsh
58.054 42.35 mo
554.23 42.35 li
554.23 41.8398 li
58.054 41.8398 li
cp
0 0 0 1 cmyk
f
80.484 30.131 mo
80.484 30.5671 li
81.762 30.5671 li
81.762 30.131 li
81.762 29.0771 82.621 28.2191 83.675 28.2191 cv
84.729 28.2191 85.588 29.0771 85.588 30.131 cv
85.588 33.2831 li
86.865 33.2831 li
86.865 30.131 li
86.865 28.3721 85.434 26.9411 83.675 26.9411 cv
81.916 26.9411 80.484 28.3721 80.484 30.131 cv
.957 .345 .125 .027 cmyk
f
84.733 35.121 mo
84.733 35.704 84.261 36.1771 83.679 36.1771 cv
83.097 36.1771 82.626 35.704 82.626 35.121 cv
82.626 34.5391 83.097 34.0671 83.679 34.0671 cv
84.261 34.0671 84.733 34.5391 84.733 35.121 cv
f
81.183 35.111 mo
81.183 33.741 82.297 32.6271 83.667 32.6271 cv
85.037 32.6271 86.151 33.741 86.151 35.111 cv
86.151 36.4811 85.037 37.595 83.667 37.595 cv
82.297 37.595 81.183 36.4811 81.183 35.111 cv
cp
79.905 35.111 mo
79.905 37.186 81.592 38.873 83.667 38.873 cv
85.741 38.873 87.429 37.186 87.429 35.111 cv
87.429 33.037 85.741 31.3491 83.667 31.3491 cv
81.592 31.3491 79.905 33.037 79.905 35.111 cv
f
60.654 36.162 mo
61.478 36.162 61.95 35.3871 61.95 34.3301 cv
61.95 33.3621 61.494 32.5311 60.654 32.5311 cv
59.814 32.5311 59.342 33.3481 59.342 34.3541 cv
59.342 35.3701 59.83 36.162 60.646 36.162 cv
60.654 36.162 li
cp
60.59 37.1311 mo
58.998 37.1311 58.054 35.9221 58.054 34.3871 cv
58.054 32.7701 59.094 31.5621 60.678 31.5621 cv
62.334 31.5621 63.238 32.8031 63.238 34.2901 cv
63.238 36.0661 62.174 37.1311 60.598 37.1311 cv
60.59 37.1311 li
f
65.246 34.169 mo
65.35 34.1931 65.47 34.202 65.654 34.202 cv
66.302 34.202 66.702 33.873 66.702 33.329 cv
66.702 32.833 66.358 32.537 65.742 32.537 cv
65.502 32.537 65.332 32.554 65.246 32.577 cv
65.246 34.169 li
cp
64.038 31.722 mo
64.414 31.658 64.942 31.609 65.686 31.609 cv
66.436 31.609 66.974 31.7531 67.333 32.049 cv
67.685 32.314 67.91 32.762 67.91 33.2891 cv
67.91 33.826 67.742 34.273 67.414 34.569 cv
66.998 34.9531 66.382 35.1381 65.662 35.1381 cv
65.502 35.1381 65.358 35.1301 65.246 35.106 cv
65.246 37.041 li
64.038 37.041 li
64.038 31.722 li
f
71.893 34.763 mo
69.909 34.763 li
69.909 36.041 li
72.124 36.041 li
72.124 37.041 li
68.693 37.041 li
68.693 31.65 li
72.013 31.65 li
72.013 32.65 li
69.909 32.65 li
69.909 33.77 li
71.893 33.77 li
71.893 34.763 li
f
72.958 37.041 mo
72.958 31.649 li
74.382 31.649 li
75.501 33.6251 li
75.822 34.1931 76.134 34.866 76.382 35.4741 cv
76.397 35.4741 li
76.326 34.7631 76.302 34.0341 76.302 33.218 cv
76.302 31.649 li
77.421 31.649 li
77.421 37.041 li
76.142 37.041 li
74.99 34.9611 li
74.669 34.3771 74.31 33.689 74.054 33.058 cv
74.021 33.058 li
74.062 33.777 74.078 34.537 74.078 35.4171 cv
74.078 37.041 li
72.958 37.041 li
f
92.404 34.746 mo
92.068 33.6011 li
91.98 33.2831 91.884 32.8741 91.804 32.5621 cv
91.78 32.5621 li
91.708 32.8821 91.62 33.29 91.54 33.6011 cv
91.212 34.746 li
92.404 34.746 li
cp
91.036 35.6591 mo
90.66 37.0421 li
89.396 37.0421 li
91.044 31.6501 li
92.636 31.6501 li
94.316 37.0421 li
93.004 37.0421 li
92.588 35.6591 li
91.036 35.6591 li
f
98.789 36.8911 mo
98.573 36.9951 98.061 37.1211 97.414 37.1211 cv
95.548 37.1211 94.588 35.9531 94.588 34.4171 cv
94.588 32.5851 95.9 31.5701 97.533 31.5701 cv
98.165 31.5701 98.644 31.6991 98.86 31.8031 cv
98.605 32.7701 li
98.365 32.6651 98.02 32.5701 97.581 32.5701 cv
96.621 32.5701 95.87 33.1541 95.87 34.3541 cv
95.87 35.4251 96.509 36.1061 97.588 36.1061 cv
97.964 36.1061 98.365 36.0351 98.612 35.9311 cv
98.789 36.8911 li
f
103.309 36.8911 mo
103.093 36.9951 102.581 37.1211 101.933 37.1211 cv
100.068 37.1211 99.108 35.9531 99.108 34.4171 cv
99.108 32.5851 100.42 31.5701 102.053 31.5701 cv
102.685 31.5701 103.165 31.6991 103.38 31.8031 cv
103.124 32.7701 li
102.885 32.6651 102.54 32.5701 102.101 32.5701 cv
101.141 32.5701 100.389 33.1541 100.389 34.3541 cv
100.389 35.4251 101.029 36.1061 102.108 36.1061 cv
102.484 36.1061 102.885 36.0351 103.132 35.9311 cv
103.309 36.8911 li
f
107.324 34.763 mo
105.34 34.763 li
105.34 36.041 li
107.556 36.041 li
107.556 37.041 li
104.124 37.041 li
104.124 31.65 li
107.444 31.65 li
107.444 32.65 li
105.34 32.65 li
105.34 33.77 li
107.324 33.77 li
107.324 34.763 li
f
108.428 35.787 mo
108.748 35.9541 109.26 36.1221 109.78 36.1221 cv
110.34 36.1221 110.636 35.8911 110.636 35.5381 cv
110.636 35.2031 110.38 35.0101 109.732 34.787 cv
108.836 34.4671 108.244 33.9711 108.244 33.1861 cv
108.244 32.2661 109.02 31.5701 110.284 31.5701 cv
110.9 31.5701 111.34 31.6901 111.66 31.8431 cv
111.388 32.8181 li
111.18 32.7141 110.788 32.5621 110.268 32.5621 cv
109.74 32.5621 109.484 32.8101 109.484 33.0821 cv
109.484 33.4261 109.78 33.5781 110.484 33.8421 cv
111.436 34.1941 111.876 34.6901 111.876 35.451 cv
111.876 36.3541 111.188 37.1221 109.709 37.1221 cv
109.092 37.1221 108.484 36.9541 108.18 36.787 cv
108.428 35.787 li
f
112.749 35.787 mo
113.069 35.9541 113.581 36.1221 114.101 36.1221 cv
114.661 36.1221 114.957 35.8911 114.957 35.5381 cv
114.957 35.2031 114.701 35.0101 114.053 34.787 cv
113.157 34.4671 112.565 33.9711 112.565 33.1861 cv
112.565 32.2661 113.341 31.5701 114.604 31.5701 cv
115.221 31.5701 115.661 31.6901 115.981 31.8431 cv
115.709 32.8181 li
115.501 32.7141 115.108 32.5621 114.589 32.5621 cv
114.06 32.5621 113.805 32.8101 113.805 33.0821 cv
113.805 33.4261 114.101 33.5781 114.805 33.8421 cv
115.757 34.1941 116.197 34.6901 116.197 35.451 cv
116.197 36.3541 115.509 37.1221 114.029 37.1221 cv
113.413 37.1221 112.805 36.9541 112.501 36.787 cv
112.749 35.787 li
f
120.268 31.65 mo
123.556 31.65 li
123.556 32.65 li
121.484 32.65 li
121.484 33.8821 li
123.42 33.8821 li
123.42 34.8741 li
121.484 34.8741 li
121.484 37.0421 li
120.268 37.0421 li
120.268 31.65 li
f
124.276 34.4171 mo
124.276 33.8411 124.268 33.4661 124.244 33.1291 cv
125.284 33.1291 li
125.332 33.8571 li
125.364 33.8571 li
125.564 33.2821 126.036 33.0411 126.42 33.0411 cv
126.532 33.0411 126.588 33.0491 126.676 33.0651 cv
126.676 34.2101 li
126.58 34.1931 126.484 34.1791 126.348 34.1791 cv
125.9 34.1791 125.596 34.4101 125.516 34.7931 cv
125.5 34.8731 125.492 34.9611 125.492 35.0651 cv
125.492 37.0411 li
124.276 37.0411 li
124.276 34.4171 li
f
129.62 34.642 mo
129.62 34.347 129.492 33.85 128.94 33.85 cv
128.42 33.85 128.212 34.3231 128.18 34.642 cv
129.62 34.642 li
cp
128.188 35.4741 mo
128.228 35.9781 128.724 36.2181 129.292 36.2181 cv
129.708 36.2181 130.044 36.162 130.372 36.05 cv
130.532 36.873 li
130.132 37.0411 129.643 37.121 129.116 37.121 cv
127.789 37.121 127.028 36.3541 127.028 35.1301 cv
127.028 34.1381 127.652 33.0411 129.005 33.0411 cv
130.268 33.0411 130.749 34.0261 130.749 34.9951 cv
130.749 35.2031 130.724 35.386 130.708 35.4741 cv
128.188 35.4741 li
f
133.845 34.642 mo
133.845 34.347 133.716 33.85 133.165 33.85 cv
132.644 33.85 132.437 34.3231 132.405 34.642 cv
133.845 34.642 li
cp
132.413 35.4741 mo
132.452 35.9781 132.948 36.2181 133.517 36.2181 cv
133.933 36.2181 134.269 36.162 134.597 36.05 cv
134.757 36.873 li
134.357 37.0411 133.868 37.121 133.341 37.121 cv
132.013 37.121 131.253 36.3541 131.253 35.1301 cv
131.253 34.1381 131.876 33.0411 133.228 33.0411 cv
134.492 33.0411 134.972 34.0261 134.972 34.9951 cv
134.972 35.2031 134.949 35.386 134.933 35.4741 cv
132.413 35.4741 li
f
135.7 37.041 mo
136.916 37.041 li
136.916 31.3531 li
135.7 31.3531 li
cp
f
138.811 33.13 mo
139.396 35.058 li
139.459 35.283 139.539 35.5781 139.588 35.787 cv
139.612 35.787 li
139.668 35.57 139.731 35.283 139.788 35.05 cv
140.268 33.13 li
141.572 33.13 li
140.66 35.7061 li
140.1 37.2661 139.723 37.882 139.284 38.274 cv
138.868 38.642 138.42 38.778 138.108 38.8101 cv
137.852 37.787 li
138.004 37.754 138.196 37.683 138.379 37.5781 cv
138.564 37.4821 138.772 37.283 138.883 37.0891 cv
138.924 37.0261 138.948 36.962 138.948 36.9141 cv
138.948 36.8671 138.94 36.8101 138.899 36.7141 cv
137.459 33.13 li
138.811 33.13 li
f
145.78 35.194 mo
145.139 35.194 144.643 35.347 144.643 35.8101 cv
144.643 36.1221 144.852 36.274 145.124 36.274 cv
145.421 36.274 145.676 36.0751 145.757 35.8271 cv
145.772 35.7631 145.78 35.6901 145.78 35.6191 cv
145.78 35.194 li
cp
146.956 36.0991 mo
146.956 36.4661 146.971 36.8271 147.02 37.0421 cv
145.925 37.0421 li
145.852 36.6501 li
145.828 36.6501 li
145.572 36.962 145.173 37.131 144.708 37.131 cv
143.917 37.131 143.444 36.5541 143.444 35.9311 cv
143.444 34.9141 144.356 34.433 145.74 34.433 cv
145.74 34.386 li
145.74 34.1791 145.628 33.8821 145.028 33.8821 cv
144.628 33.8821 144.204 34.0171 143.948 34.17 cv
143.723 33.394 li
143.997 33.243 144.532 33.0421 145.245 33.0421 cv
146.548 33.0421 146.956 33.8101 146.956 34.73 cv
146.956 36.0991 li
f
148.731 33.13 mo
149.26 34.946 li
149.356 35.274 149.42 35.5861 149.484 35.898 cv
149.508 35.898 li
149.572 35.5781 149.635 35.283 149.723 34.946 cv
150.227 33.13 li
151.508 33.13 li
150.051 37.0421 li
148.836 37.0421 li
147.413 33.13 li
148.731 33.13 li
f
154.093 35.194 mo
153.452 35.194 152.956 35.347 152.956 35.8101 cv
152.956 36.1221 153.164 36.274 153.437 36.274 cv
153.733 36.274 153.988 36.0751 154.069 35.8271 cv
154.085 35.7631 154.093 35.6901 154.093 35.6191 cv
154.093 35.194 li
cp
155.269 36.0991 mo
155.269 36.4661 155.284 36.8271 155.332 37.0421 cv
154.236 37.0421 li
154.164 36.6501 li
154.14 36.6501 li
153.884 36.962 153.485 37.131 153.021 37.131 cv
152.228 37.131 151.757 36.5541 151.757 35.9311 cv
151.757 34.9141 152.669 34.433 154.052 34.433 cv
154.052 34.386 li
154.052 34.1791 153.941 33.8821 153.341 33.8821 cv
152.941 33.8821 152.517 34.0171 152.261 34.17 cv
152.036 33.394 li
152.308 33.243 152.845 33.0421 153.556 33.0421 cv
154.861 33.0421 155.269 33.8101 155.269 34.73 cv
155.269 36.0991 li
f
157.452 37.041 mo
156.236 37.041 li
156.236 33.129 li
157.452 33.129 li
cp
156.236 37.041 mo
cp
156.837 32.649 mo
156.452 32.649 156.204 32.3771 156.204 32.041 cv
156.204 31.6981 156.46 31.433 156.852 31.433 cv
157.245 31.433 157.484 31.6981 157.492 32.041 cv
157.492 32.3771 157.245 32.649 156.844 32.649 cv
156.837 32.649 li
f
158.428 37.041 mo
159.643 37.041 li
159.643 31.3531 li
158.428 31.3531 li
cp
f
162.708 35.194 mo
162.068 35.194 161.572 35.347 161.572 35.8101 cv
161.572 36.1221 161.78 36.274 162.052 36.274 cv
162.348 36.274 162.604 36.0751 162.684 35.8271 cv
162.7 35.7631 162.708 35.6901 162.708 35.6191 cv
162.708 35.194 li
cp
163.884 36.0991 mo
163.884 36.4661 163.9 36.8271 163.948 37.0421 cv
162.852 37.0421 li
162.78 36.6501 li
162.757 36.6501 li
162.501 36.962 162.1 37.131 161.636 37.131 cv
160.845 37.131 160.372 36.5541 160.372 35.9311 cv
160.372 34.9141 161.284 34.433 162.669 34.433 cv
162.669 34.386 li
162.669 34.1791 162.555 33.8821 161.956 33.8821 cv
161.555 33.8821 161.132 34.0171 160.876 34.17 cv
160.652 33.394 li
160.925 33.243 161.46 33.0421 162.173 33.0421 cv
163.475 33.0421 163.884 33.8101 163.884 34.73 cv
163.884 36.0991 li
f
166.068 35.377 mo
166.068 35.457 166.076 35.5291 166.093 35.595 cv
166.173 35.913 166.452 36.1691 166.803 36.1691 cv
167.324 36.1691 167.643 35.77 167.643 35.0651 cv
167.643 34.457 167.372 33.978 166.803 33.978 cv
166.475 33.978 166.173 34.2261 166.093 34.577 cv
166.076 34.649 166.068 34.722 166.068 34.8021 cv
166.068 35.377 li
cp
164.852 31.3541 mo
166.068 31.3541 li
166.068 33.595 li
166.083 33.595 li
166.315 33.257 166.723 33.041 167.268 33.041 cv
168.204 33.041 168.884 33.817 168.876 35.0181 cv
168.876 36.425 167.988 37.1301 167.093 37.1301 cv
166.636 37.1301 166.188 36.9611 165.915 36.4971 cv
165.899 36.4971 li
165.852 37.041 li
164.82 37.041 li
164.837 36.7861 164.852 36.314 164.852 35.873 cv
164.852 31.3541 li
f
169.636 37.041 mo
170.852 37.041 li
170.852 31.3531 li
169.636 31.3531 li
cp
f
174.204 34.642 mo
174.204 34.347 174.076 33.85 173.522 33.85 cv
173.003 33.85 172.796 34.3231 172.764 34.642 cv
174.204 34.642 li
cp
172.771 35.4741 mo
172.811 35.9781 173.307 36.2181 173.876 36.2181 cv
174.292 36.2181 174.628 36.162 174.956 36.05 cv
175.116 36.873 li
174.716 37.0411 174.227 37.121 173.7 37.121 cv
172.372 37.121 171.612 36.3541 171.612 35.1301 cv
171.612 34.1381 172.236 33.0411 173.587 33.0411 cv
174.852 33.0411 175.333 34.0261 175.333 34.9951 cv
175.333 35.2031 175.307 35.386 175.292 35.4741 cv
172.771 35.4741 li
f
179.509 36.257 mo
179.988 36.257 180.284 35.7861 180.284 35.0811 cv
180.284 34.5051 180.059 33.913 179.509 33.913 cv
178.932 33.913 178.708 34.5051 178.708 35.0891 cv
178.708 35.7531 178.988 36.257 179.501 36.257 cv
179.509 36.257 li
cp
179.475 37.1301 mo
178.333 37.1301 177.452 36.3771 177.452 35.1141 cv
177.452 33.85 178.284 33.0411 179.548 33.0411 cv
180.74 33.0411 181.54 33.866 181.54 35.05 cv
181.54 36.4741 180.524 37.1301 179.484 37.1301 cv
179.475 37.1301 li
f
182.292 34.377 mo
182.292 33.89 182.276 33.4821 182.261 33.129 cv
183.316 33.129 li
183.372 33.673 li
183.395 33.673 li
183.555 33.4171 183.948 33.041 184.602 33.041 cv
185.404 33.041 186.003 33.577 186.003 34.73 cv
186.003 37.041 li
184.788 37.041 li
184.788 34.873 li
184.788 34.369 184.612 34.025 184.173 34.025 cv
183.835 34.025 183.636 34.257 183.548 34.481 cv
183.516 34.5621 183.509 34.673 183.509 34.7861 cv
183.509 37.041 li
182.292 37.041 li
182.292 34.377 li
f
186.979 37.041 mo
188.196 37.041 li
188.196 31.3531 li
186.979 31.3531 li
cp
f
190.395 37.041 mo
189.18 37.041 li
189.18 33.129 li
190.395 33.129 li
cp
189.18 37.041 mo
cp
189.78 32.649 mo
189.395 32.649 189.148 32.3771 189.148 32.041 cv
189.148 31.6981 189.404 31.433 189.796 31.433 cv
190.188 31.433 190.428 31.6981 190.436 32.041 cv
190.436 32.3771 190.188 32.649 189.788 32.649 cv
189.78 32.649 li
f
191.371 34.377 mo
191.371 33.89 191.355 33.4821 191.339 33.129 cv
192.395 33.129 li
192.451 33.673 li
192.475 33.673 li
192.636 33.4171 193.027 33.041 193.682 33.041 cv
194.483 33.041 195.083 33.577 195.083 34.73 cv
195.083 37.041 li
193.867 37.041 li
193.867 34.873 li
193.867 34.369 193.69 34.025 193.251 34.025 cv
192.915 34.025 192.716 34.257 192.628 34.481 cv
192.595 34.5621 192.587 34.673 192.587 34.7861 cv
192.587 37.041 li
191.371 37.041 li
191.371 34.377 li
f
198.428 34.642 mo
198.428 34.347 198.3 33.85 197.748 33.85 cv
197.227 33.85 197.018 34.3231 196.988 34.642 cv
198.428 34.642 li
cp
196.996 35.4741 mo
197.036 35.9781 197.532 36.2181 198.1 36.2181 cv
198.516 36.2181 198.852 36.162 199.18 36.05 cv
199.341 36.873 li
198.94 37.0411 198.452 37.121 197.925 37.121 cv
196.596 37.121 195.837 36.3541 195.837 35.1301 cv
195.837 34.1381 196.46 33.0411 197.811 33.0411 cv
199.076 33.0411 199.555 34.0261 199.555 34.9951 cv
199.555 35.2031 199.532 35.386 199.516 35.4741 cv
196.996 35.4741 li
f
80.484 30.131 mo
80.484 30.5671 li
81.762 30.5671 li
81.762 30.131 li
81.762 29.0771 82.621 28.2191 83.675 28.2191 cv
84.729 28.2191 85.588 29.0771 85.588 30.131 cv
85.588 33.2831 li
86.865 33.2831 li
86.865 30.131 li
86.865 28.3721 85.434 26.9411 83.675 26.9411 cv
81.916 26.9411 80.484 28.3721 80.484 30.131 cv
.95686 .3451 .12549 .027451 cmyk
f
84.733 35.121 mo
84.733 35.704 84.261 36.1771 83.679 36.1771 cv
83.097 36.1771 82.626 35.704 82.626 35.121 cv
82.626 34.5391 83.097 34.0671 83.679 34.0671 cv
84.261 34.0671 84.733 34.5391 84.733 35.121 cv
f
81.183 35.111 mo
81.183 33.741 82.297 32.6271 83.667 32.6271 cv
85.037 32.6271 86.151 33.741 86.151 35.111 cv
86.151 36.4811 85.037 37.595 83.667 37.595 cv
82.297 37.595 81.183 36.4811 81.183 35.111 cv
cp
79.905 35.111 mo
79.905 37.186 81.592 38.873 83.667 38.873 cv
85.741 38.873 87.429 37.186 87.429 35.111 cv
87.429 33.037 85.741 31.3491 83.667 31.3491 cv
81.592 31.3491 79.905 33.037 79.905 35.111 cv
f
60.654 36.162 mo
61.478 36.162 61.95 35.3871 61.95 34.3301 cv
61.95 33.3621 61.494 32.5311 60.654 32.5311 cv
59.814 32.5311 59.342 33.3481 59.342 34.3541 cv
59.342 35.3701 59.83 36.162 60.646 36.162 cv
60.654 36.162 li
cp
60.59 37.1311 mo
58.998 37.1311 58.054 35.9221 58.054 34.3871 cv
58.054 32.7701 59.094 31.5621 60.678 31.5621 cv
62.334 31.5621 63.238 32.8031 63.238 34.2901 cv
63.238 36.0661 62.174 37.1311 60.598 37.1311 cv
60.59 37.1311 li
f
65.246 34.169 mo
65.35 34.1931 65.47 34.202 65.654 34.202 cv
66.302 34.202 66.702 33.873 66.702 33.329 cv
66.702 32.833 66.358 32.537 65.742 32.537 cv
65.502 32.537 65.332 32.554 65.246 32.577 cv
65.246 34.169 li
cp
64.038 31.722 mo
64.414 31.658 64.942 31.609 65.686 31.609 cv
66.436 31.609 66.974 31.7531 67.333 32.049 cv
67.685 32.314 67.91 32.762 67.91 33.2891 cv
67.91 33.826 67.742 34.273 67.414 34.569 cv
66.998 34.9531 66.382 35.1381 65.662 35.1381 cv
65.502 35.1381 65.358 35.1301 65.246 35.106 cv
65.246 37.041 li
64.038 37.041 li
64.038 31.722 li
f
71.893 34.763 mo
69.909 34.763 li
69.909 36.041 li
72.124 36.041 li
72.124 37.041 li
68.693 37.041 li
68.693 31.65 li
72.013 31.65 li
72.013 32.65 li
69.909 32.65 li
69.909 33.77 li
71.893 33.77 li
71.893 34.763 li
f
72.958 37.041 mo
72.958 31.649 li
74.382 31.649 li
75.501 33.6251 li
75.822 34.1931 76.134 34.866 76.382 35.4741 cv
76.397 35.4741 li
76.326 34.7631 76.302 34.0341 76.302 33.218 cv
76.302 31.649 li
77.421 31.649 li
77.421 37.041 li
76.142 37.041 li
74.99 34.9611 li
74.669 34.3771 74.31 33.689 74.054 33.058 cv
74.021 33.058 li
74.062 33.777 74.078 34.537 74.078 35.4171 cv
74.078 37.041 li
72.958 37.041 li
f
92.404 34.746 mo
92.068 33.6011 li
91.98 33.2831 91.884 32.8741 91.804 32.5621 cv
91.78 32.5621 li
91.708 32.8821 91.62 33.29 91.54 33.6011 cv
91.212 34.746 li
92.404 34.746 li
cp
91.036 35.6591 mo
90.66 37.0421 li
89.396 37.0421 li
91.044 31.6501 li
92.636 31.6501 li
94.316 37.0421 li
93.004 37.0421 li
92.588 35.6591 li
91.036 35.6591 li
f
98.789 36.8911 mo
98.573 36.9951 98.061 37.1211 97.414 37.1211 cv
95.548 37.1211 94.588 35.9531 94.588 34.4171 cv
94.588 32.5851 95.9 31.5701 97.533 31.5701 cv
98.165 31.5701 98.644 31.6991 98.86 31.8031 cv
98.605 32.7701 li
98.365 32.6651 98.02 32.5701 97.581 32.5701 cv
96.621 32.5701 95.87 33.1541 95.87 34.3541 cv
95.87 35.4251 96.509 36.1061 97.588 36.1061 cv
97.964 36.1061 98.365 36.0351 98.612 35.9311 cv
98.789 36.8911 li
f
103.309 36.8911 mo
103.093 36.9951 102.581 37.1211 101.933 37.1211 cv
100.068 37.1211 99.108 35.9531 99.108 34.4171 cv
99.108 32.5851 100.42 31.5701 102.053 31.5701 cv
102.685 31.5701 103.165 31.6991 103.38 31.8031 cv
103.124 32.7701 li
102.885 32.6651 102.54 32.5701 102.101 32.5701 cv
101.141 32.5701 100.389 33.1541 100.389 34.3541 cv
100.389 35.4251 101.029 36.1061 102.108 36.1061 cv
102.484 36.1061 102.885 36.0351 103.132 35.9311 cv
103.309 36.8911 li
f
107.324 34.763 mo
105.34 34.763 li
105.34 36.041 li
107.556 36.041 li
107.556 37.041 li
104.124 37.041 li
104.124 31.65 li
107.444 31.65 li
107.444 32.65 li
105.34 32.65 li
105.34 33.77 li
107.324 33.77 li
107.324 34.763 li
f
108.428 35.787 mo
108.748 35.9541 109.26 36.1221 109.78 36.1221 cv
110.34 36.1221 110.636 35.8911 110.636 35.5381 cv
110.636 35.2031 110.38 35.0101 109.732 34.787 cv
108.836 34.4671 108.244 33.9711 108.244 33.1861 cv
108.244 32.2661 109.02 31.5701 110.284 31.5701 cv
110.9 31.5701 111.34 31.6901 111.66 31.8431 cv
111.388 32.8181 li
111.18 32.7141 110.788 32.5621 110.268 32.5621 cv
109.74 32.5621 109.484 32.8101 109.484 33.0821 cv
109.484 33.4261 109.78 33.5781 110.484 33.8421 cv
111.436 34.1941 111.876 34.6901 111.876 35.451 cv
111.876 36.3541 111.188 37.1221 109.709 37.1221 cv
109.092 37.1221 108.484 36.9541 108.18 36.787 cv
108.428 35.787 li
f
112.749 35.787 mo
113.069 35.9541 113.581 36.1221 114.101 36.1221 cv
114.661 36.1221 114.957 35.8911 114.957 35.5381 cv
114.957 35.2031 114.701 35.0101 114.053 34.787 cv
113.157 34.4671 112.565 33.9711 112.565 33.1861 cv
112.565 32.2661 113.341 31.5701 114.604 31.5701 cv
115.221 31.5701 115.661 31.6901 115.981 31.8431 cv
115.709 32.8181 li
115.501 32.7141 115.108 32.5621 114.589 32.5621 cv
114.06 32.5621 113.805 32.8101 113.805 33.0821 cv
113.805 33.4261 114.101 33.5781 114.805 33.8421 cv
115.757 34.1941 116.197 34.6901 116.197 35.451 cv
116.197 36.3541 115.509 37.1221 114.029 37.1221 cv
113.413 37.1221 112.805 36.9541 112.501 36.787 cv
112.749 35.787 li
f
120.268 31.65 mo
123.556 31.65 li
123.556 32.65 li
121.484 32.65 li
121.484 33.8821 li
123.42 33.8821 li
123.42 34.8741 li
121.484 34.8741 li
121.484 37.0421 li
120.268 37.0421 li
120.268 31.65 li
f
124.276 34.4171 mo
124.276 33.8411 124.268 33.4661 124.244 33.1291 cv
125.284 33.1291 li
125.332 33.8571 li
125.364 33.8571 li
125.564 33.2821 126.036 33.0411 126.42 33.0411 cv
126.532 33.0411 126.588 33.0491 126.676 33.0651 cv
126.676 34.2101 li
126.58 34.1931 126.484 34.1791 126.348 34.1791 cv
125.9 34.1791 125.596 34.4101 125.516 34.7931 cv
125.5 34.8731 125.492 34.9611 125.492 35.0651 cv
125.492 37.0411 li
124.276 37.0411 li
124.276 34.4171 li
f
129.62 34.642 mo
129.62 34.347 129.492 33.85 128.94 33.85 cv
128.42 33.85 128.212 34.3231 128.18 34.642 cv
129.62 34.642 li
cp
128.188 35.4741 mo
128.228 35.9781 128.724 36.2181 129.292 36.2181 cv
129.708 36.2181 130.044 36.162 130.372 36.05 cv
130.532 36.873 li
130.132 37.0411 129.643 37.121 129.116 37.121 cv
127.789 37.121 127.028 36.3541 127.028 35.1301 cv
127.028 34.1381 127.652 33.0411 129.005 33.0411 cv
130.268 33.0411 130.749 34.0261 130.749 34.9951 cv
130.749 35.2031 130.724 35.386 130.708 35.4741 cv
128.188 35.4741 li
f
133.845 34.642 mo
133.845 34.347 133.716 33.85 133.165 33.85 cv
132.644 33.85 132.437 34.3231 132.405 34.642 cv
133.845 34.642 li
cp
132.413 35.4741 mo
132.452 35.9781 132.948 36.2181 133.517 36.2181 cv
133.933 36.2181 134.269 36.162 134.597 36.05 cv
134.757 36.873 li
134.357 37.0411 133.868 37.121 133.341 37.121 cv
132.013 37.121 131.253 36.3541 131.253 35.1301 cv
131.253 34.1381 131.876 33.0411 133.228 33.0411 cv
134.492 33.0411 134.972 34.0261 134.972 34.9951 cv
134.972 35.2031 134.949 35.386 134.933 35.4741 cv
132.413 35.4741 li
f
135.7 37.041 mo
136.916 37.041 li
136.916 31.3531 li
135.7 31.3531 li
cp
f
138.811 33.13 mo
139.396 35.058 li
139.459 35.283 139.539 35.5781 139.588 35.787 cv
139.612 35.787 li
139.668 35.57 139.731 35.283 139.788 35.05 cv
140.268 33.13 li
141.572 33.13 li
140.66 35.7061 li
140.1 37.2661 139.723 37.882 139.284 38.274 cv
138.868 38.642 138.42 38.778 138.108 38.8101 cv
137.852 37.787 li
138.004 37.754 138.196 37.683 138.379 37.5781 cv
138.564 37.4821 138.772 37.283 138.883 37.0891 cv
138.924 37.0261 138.948 36.962 138.948 36.9141 cv
138.948 36.8671 138.94 36.8101 138.899 36.7141 cv
137.459 33.13 li
138.811 33.13 li
f
145.78 35.194 mo
145.139 35.194 144.643 35.347 144.643 35.8101 cv
144.643 36.1221 144.852 36.274 145.124 36.274 cv
145.421 36.274 145.676 36.0751 145.757 35.8271 cv
145.772 35.7631 145.78 35.6901 145.78 35.6191 cv
145.78 35.194 li
cp
146.956 36.0991 mo
146.956 36.4661 146.971 36.8271 147.02 37.0421 cv
145.925 37.0421 li
145.852 36.6501 li
145.828 36.6501 li
145.572 36.962 145.173 37.131 144.708 37.131 cv
143.917 37.131 143.444 36.5541 143.444 35.9311 cv
143.444 34.9141 144.356 34.433 145.74 34.433 cv
145.74 34.386 li
145.74 34.1791 145.628 33.8821 145.028 33.8821 cv
144.628 33.8821 144.204 34.0171 143.948 34.17 cv
143.723 33.394 li
143.997 33.243 144.532 33.0421 145.245 33.0421 cv
146.548 33.0421 146.956 33.8101 146.956 34.73 cv
146.956 36.0991 li
f
148.731 33.13 mo
149.26 34.946 li
149.356 35.274 149.42 35.5861 149.484 35.898 cv
149.508 35.898 li
149.572 35.5781 149.635 35.283 149.723 34.946 cv
150.227 33.13 li
151.508 33.13 li
150.051 37.0421 li
148.836 37.0421 li
147.413 33.13 li
148.731 33.13 li
f
154.093 35.194 mo
153.452 35.194 152.956 35.347 152.956 35.8101 cv
152.956 36.1221 153.164 36.274 153.437 36.274 cv
153.733 36.274 153.988 36.0751 154.069 35.8271 cv
154.085 35.7631 154.093 35.6901 154.093 35.6191 cv
154.093 35.194 li
cp
155.269 36.0991 mo
155.269 36.4661 155.284 36.8271 155.332 37.0421 cv
154.236 37.0421 li
154.164 36.6501 li
154.14 36.6501 li
153.884 36.962 153.485 37.131 153.021 37.131 cv
152.228 37.131 151.757 36.5541 151.757 35.9311 cv
151.757 34.9141 152.669 34.433 154.052 34.433 cv
154.052 34.386 li
154.052 34.1791 153.941 33.8821 153.341 33.8821 cv
152.941 33.8821 152.517 34.0171 152.261 34.17 cv
152.036 33.394 li
152.308 33.243 152.845 33.0421 153.556 33.0421 cv
154.861 33.0421 155.269 33.8101 155.269 34.73 cv
155.269 36.0991 li
f
157.452 37.041 mo
156.236 37.041 li
156.236 33.129 li
157.452 33.129 li
cp
156.236 37.041 mo
cp
156.837 32.649 mo
156.452 32.649 156.204 32.3771 156.204 32.041 cv
156.204 31.6981 156.46 31.433 156.852 31.433 cv
157.245 31.433 157.484 31.6981 157.492 32.041 cv
157.492 32.3771 157.245 32.649 156.844 32.649 cv
156.837 32.649 li
f
158.428 37.041 mo
159.643 37.041 li
159.643 31.3531 li
158.428 31.3531 li
cp
f
162.708 35.194 mo
162.068 35.194 161.572 35.347 161.572 35.8101 cv
161.572 36.1221 161.78 36.274 162.052 36.274 cv
162.348 36.274 162.604 36.0751 162.684 35.8271 cv
162.7 35.7631 162.708 35.6901 162.708 35.6191 cv
162.708 35.194 li
cp
163.884 36.0991 mo
163.884 36.4661 163.9 36.8271 163.948 37.0421 cv
162.852 37.0421 li
162.78 36.6501 li
162.757 36.6501 li
162.501 36.962 162.1 37.131 161.636 37.131 cv
160.845 37.131 160.372 36.5541 160.372 35.9311 cv
160.372 34.9141 161.284 34.433 162.669 34.433 cv
162.669 34.386 li
162.669 34.1791 162.555 33.8821 161.956 33.8821 cv
161.555 33.8821 161.132 34.0171 160.876 34.17 cv
160.652 33.394 li
160.925 33.243 161.46 33.0421 162.173 33.0421 cv
163.475 33.0421 163.884 33.8101 163.884 34.73 cv
163.884 36.0991 li
f
166.068 35.377 mo
166.068 35.457 166.076 35.5291 166.093 35.595 cv
166.173 35.913 166.452 36.1691 166.803 36.1691 cv
167.324 36.1691 167.643 35.77 167.643 35.0651 cv
167.643 34.457 167.372 33.978 166.803 33.978 cv
166.475 33.978 166.173 34.2261 166.093 34.577 cv
166.076 34.649 166.068 34.722 166.068 34.8021 cv
166.068 35.377 li
cp
164.852 31.3541 mo
166.068 31.3541 li
166.068 33.595 li
166.083 33.595 li
166.315 33.257 166.723 33.041 167.268 33.041 cv
168.204 33.041 168.884 33.817 168.876 35.0181 cv
168.876 36.425 167.988 37.1301 167.093 37.1301 cv
166.636 37.1301 166.188 36.9611 165.915 36.4971 cv
165.899 36.4971 li
165.852 37.041 li
164.82 37.041 li
164.837 36.7861 164.852 36.314 164.852 35.873 cv
164.852 31.3541 li
f
169.636 37.041 mo
170.852 37.041 li
170.852 31.3531 li
169.636 31.3531 li
cp
f
174.204 34.642 mo
174.204 34.347 174.076 33.85 173.522 33.85 cv
173.003 33.85 172.796 34.3231 172.764 34.642 cv
174.204 34.642 li
cp
172.771 35.4741 mo
172.811 35.9781 173.307 36.2181 173.876 36.2181 cv
174.292 36.2181 174.628 36.162 174.956 36.05 cv
175.116 36.873 li
174.716 37.0411 174.227 37.121 173.7 37.121 cv
172.372 37.121 171.612 36.3541 171.612 35.1301 cv
171.612 34.1381 172.236 33.0411 173.587 33.0411 cv
174.852 33.0411 175.333 34.0261 175.333 34.9951 cv
175.333 35.2031 175.307 35.386 175.292 35.4741 cv
172.771 35.4741 li
f
179.509 36.257 mo
179.988 36.257 180.284 35.7861 180.284 35.0811 cv
180.284 34.5051 180.059 33.913 179.509 33.913 cv
178.932 33.913 178.708 34.5051 178.708 35.0891 cv
178.708 35.7531 178.988 36.257 179.501 36.257 cv
179.509 36.257 li
cp
179.475 37.1301 mo
178.333 37.1301 177.452 36.3771 177.452 35.1141 cv
177.452 33.85 178.284 33.0411 179.548 33.0411 cv
180.74 33.0411 181.54 33.866 181.54 35.05 cv
181.54 36.4741 180.524 37.1301 179.484 37.1301 cv
179.475 37.1301 li
f
182.292 34.377 mo
182.292 33.89 182.276 33.4821 182.261 33.129 cv
183.316 33.129 li
183.372 33.673 li
183.395 33.673 li
183.555 33.4171 183.948 33.041 184.602 33.041 cv
185.404 33.041 186.003 33.577 186.003 34.73 cv
186.003 37.041 li
184.788 37.041 li
184.788 34.873 li
184.788 34.369 184.612 34.025 184.173 34.025 cv
183.835 34.025 183.636 34.257 183.548 34.481 cv
183.516 34.5621 183.509 34.673 183.509 34.7861 cv
183.509 37.041 li
182.292 37.041 li
182.292 34.377 li
f
186.979 37.041 mo
188.196 37.041 li
188.196 31.3531 li
186.979 31.3531 li
cp
f
190.395 37.041 mo
189.18 37.041 li
189.18 33.129 li
190.395 33.129 li
cp
189.18 37.041 mo
cp
189.78 32.649 mo
189.395 32.649 189.148 32.3771 189.148 32.041 cv
189.148 31.6981 189.404 31.433 189.796 31.433 cv
190.188 31.433 190.428 31.6981 190.436 32.041 cv
190.436 32.3771 190.188 32.649 189.788 32.649 cv
189.78 32.649 li
f
191.371 34.377 mo
191.371 33.89 191.355 33.4821 191.339 33.129 cv
192.395 33.129 li
192.451 33.673 li
192.475 33.673 li
192.636 33.4171 193.027 33.041 193.682 33.041 cv
194.483 33.041 195.083 33.577 195.083 34.73 cv
195.083 37.041 li
193.867 37.041 li
193.867 34.873 li
193.867 34.369 193.69 34.025 193.251 34.025 cv
192.915 34.025 192.716 34.257 192.628 34.481 cv
192.595 34.5621 192.587 34.673 192.587 34.7861 cv
192.587 37.041 li
191.371 37.041 li
191.371 34.377 li
f
198.428 34.642 mo
198.428 34.347 198.3 33.85 197.748 33.85 cv
197.227 33.85 197.018 34.3231 196.988 34.642 cv
198.428 34.642 li
cp
196.996 35.4741 mo
197.036 35.9781 197.532 36.2181 198.1 36.2181 cv
198.516 36.2181 198.852 36.162 199.18 36.05 cv
199.341 36.873 li
198.94 37.0411 198.452 37.121 197.925 37.121 cv
196.596 37.121 195.837 36.3541 195.837 35.1301 cv
195.837 34.1381 196.46 33.0411 197.811 33.0411 cv
199.076 33.0411 199.555 34.0261 199.555 34.9951 cv
199.555 35.2031 199.532 35.386 199.516 35.4741 cv
196.996 35.4741 li
f
536.922 28.8 mo
538.885 28.8 li
538.885 30.1261 li
538.918 30.1261 li
539.297 29.3 540.07 28.5951 541.447 28.5951 cv
543.668 28.5951 544.461 30.1591 544.461 31.8471 cv
544.461 37.0601 li
542.395 37.0601 li
542.395 32.8781 li
542.395 31.9661 542.324 30.4521 540.879 30.4521 cv
539.52 30.4521 538.987 31.4501 538.987 32.5521 cv
538.987 37.0601 li
536.922 37.0601 li
536.922 28.8 li
.49 .365 .345 .22 cmyk
f
552.731 32.414 mo
552.731 30.882 551.749 29.833 550.116 29.833 cv
548.635 29.833 547.294 31.0891 547.294 32.414 cv
552.731 32.414 li
cp
547.26 33.343 mo
547.399 34.96 548.62 36.233 550.219 36.233 cv
551.424 36.233 552.352 35.561 552.799 34.8391 cv
553.678 35.561 li
552.731 36.7661 551.544 37.2661 550.219 37.2661 cv
547.827 37.2661 546.055 35.459 546.055 33.033 cv
546.055 30.606 547.827 28.8 550.116 28.8 cv
552.559 28.817 553.969 30.624 553.969 32.825 cv
553.969 33.343 li
547.26 33.343 li
f
488.485 23.31 mo
489.831 25.45 489.188 28.286 487.048 29.634 cv
484.907 30.979 482.071 30.336 480.725 28.196 cv
480.249 27.44 480.022 26.595 480.022 25.761 cv
480.022 24.236 480.778 22.744 482.161 21.873 cv
484.301 20.527 487.139 21.1721 488.485 23.31 cv
cp
481.944 21.526 mo
479.612 22.992 478.911 26.084 480.378 28.415 cv
481.844 30.746 484.936 31.448 487.266 29.979 cv
489.598 28.515 490.299 25.423 488.833 23.092 cv
487.364 20.761 484.276 20.059 481.944 21.526 cv
.957 .345 .125 .026993 cmyk
f
484.016 28.376 mo
481.555 27.816 479.817 26.1921 480.145 24.7571 cv
480.469 23.321 482.737 22.6091 485.2 23.1691 cv
487.661 23.7281 489.399 25.3511 489.071 26.7861 cv
488.744 28.2211 486.479 28.9351 484.016 28.376 cv
cp
479.944 24.7121 mo
479.594 26.256 481.401 27.9881 483.971 28.5731 cv
486.539 29.157 488.92 28.3771 489.27 26.8311 cv
489.621 25.2861 487.817 23.5551 485.245 22.9701 cv
482.674 22.3871 480.297 23.1681 479.944 24.7121 cv
f
484.249 21.5891 mo
484.737 21.2881 485.237 21.1871 485.694 21.2941 cv
487.128 21.6321 487.819 23.9061 487.239 26.3631 cv
486.659 28.8191 485.02 30.5431 483.589 30.2041 cv
482.501 29.9461 481.839 28.5711 481.839 26.8471 cv
481.839 26.3031 481.903 25.7241 482.044 25.1361 cv
482.417 23.5591 483.261 22.2001 484.249 21.5891 cv
cp
484.142 21.4171 mo
483.093 22.0641 482.235 23.4371 481.845 25.0891 cv
481.239 27.6551 482.001 30.0391 483.542 30.4011 cv
485.085 30.7671 486.831 28.9761 487.438 26.4091 cv
488.044 23.8441 487.28 21.4611 485.739 21.0961 cv
485.229 20.9761 484.679 21.0871 484.142 21.4171 cv
f
482.102 21.682 mo
482.211 21.8541 li
482.719 21.527 484.409 22.8521 485.834 25.0521 cv
487.325 27.359 487.801 29.2501 487.313 29.5681 cv
487.422 29.7401 li
488.194 29.238 487.268 26.8931 486.006 24.941 cv
484.577 22.73 482.786 21.2371 482.102 21.682 cv
f
481.278 22.282 mo
481.391 22.4551 li
481.872 22.1441 483.434 23.3801 484.903 25.6531 cv
486.028 27.3931 486.704 29.136 486.54 29.8941 cv
486.514 30.0271 486.46 30.1181 486.381 30.1691 cv
486.493 30.3411 li
486.618 30.261 486.702 30.1241 486.741 29.9371 cv
486.919 29.1181 486.247 27.3521 485.075 25.5421 cv
483.796 23.5621 482.024 21.8011 481.278 22.282 cv
f
488.692 23.525 mo
488.741 23.603 488.751 23.709 488.721 23.8391 cv
488.549 24.5931 487.204 25.892 485.448 26.9971 cv
483.137 28.4531 481.174 28.915 480.862 28.418 cv
480.688 28.5261 li
481.171 29.293 483.544 28.439 485.559 27.17 cv
487.385 26.0211 488.735 24.701 488.922 23.8851 cv
488.964 23.699 488.944 23.5411 488.864 23.415 cv
488.692 23.525 li
f
488.102 22.587 mo
488.407 23.071 487.151 24.618 484.86 26.0611 cv
482.534 27.5231 480.637 27.9771 480.325 27.4821 cv
480.153 27.5901 li
480.643 28.368 483 27.4731 484.969 26.2341 cv
486.965 24.9771 488.748 23.2281 488.278 22.4771 cv
488.102 22.587 li
f
487.514 19.6541 mo
487.514 20.0961 487.875 20.4551 488.319 20.4551 cv
488.762 20.4551 489.123 20.0961 489.123 19.6541 cv
489.123 19.2091 488.762 18.8501 488.319 18.8501 cv
487.875 18.8501 487.514 19.2091 487.514 19.6541 cv
f
481.174 19.314 mo
481.174 19.4901 481.319 19.6351 481.494 19.6351 cv
481.674 19.6351 481.817 19.4901 481.817 19.314 cv
481.817 19.136 481.674 18.991 481.494 18.991 cv
481.319 18.991 481.174 19.136 481.174 19.314 cv
f
480.141 30.742 mo
480.141 30.92 480.284 31.064 480.463 31.064 cv
480.639 31.064 480.782 30.92 480.782 30.742 cv
480.782 30.564 480.639 30.421 480.463 30.421 cv
480.284 30.421 480.141 30.564 480.141 30.742 cv
f
477.241 23.207 mo
477.241 23.384 477.386 23.5281 477.561 23.5281 cv
477.739 23.5281 477.884 23.384 477.884 23.207 cv
477.884 23.0291 477.739 22.886 477.561 22.886 cv
477.386 22.886 477.241 23.0291 477.241 23.207 cv
f
489.489 28.855 mo
489.489 29.0311 489.632 29.175 489.809 29.175 cv
489.987 29.175 490.132 29.0311 490.132 28.855 cv
490.132 28.675 489.987 28.5311 489.809 28.5311 cv
489.632 28.5311 489.489 28.675 489.489 28.855 cv
f
483.026 25.741 mo
483.026 26.0081 483.243 26.222 483.508 26.222 cv
483.772 26.222 483.987 26.0081 483.987 25.741 cv
483.987 25.475 483.772 25.2601 483.508 25.2601 cv
483.243 25.2601 483.026 25.475 483.026 25.741 cv
f
491.034 27.51 mo
491.034 27.777 491.249 27.991 491.516 27.991 cv
491.78 27.991 491.997 27.777 491.997 27.51 cv
491.997 27.244 491.78 27.028 491.516 27.028 cv
491.249 27.028 491.034 27.244 491.034 27.51 cv
f
490.543 21.886 mo
490.543 22.1081 490.723 22.2881 490.943 22.2881 cv
491.166 22.2881 491.346 22.1081 491.346 21.886 cv
491.346 21.6641 491.166 21.4841 490.943 21.4841 cv
490.723 21.4841 490.543 21.6641 490.543 21.886 cv
f
478.303 21.343 mo
478.303 21.697 478.59 21.986 478.946 21.986 cv
479.303 21.986 479.588 21.697 479.588 21.343 cv
479.588 20.988 479.303 20.699 478.946 20.699 cv
478.59 20.699 478.303 20.988 478.303 21.343 cv
f
486.436 32.23 mo
486.436 32.584 486.725 32.873 487.079 32.873 cv
487.434 32.873 487.721 32.584 487.721 32.23 cv
487.721 31.8741 487.434 31.5851 487.079 31.5851 cv
486.725 31.5851 486.436 31.8741 486.436 32.23 cv
f
477.729 28.427 mo
477.729 28.648 477.907 28.827 478.129 28.827 cv
478.35 28.827 478.53 28.648 478.53 28.427 cv
478.53 28.204 478.35 28.025 478.129 28.025 cv
477.907 28.025 477.729 28.204 477.729 28.427 cv
f
478.237 24.911 mo
478.237 25.134 478.417 25.313 478.637 25.313 cv
478.86 25.313 479.04 25.134 479.04 24.911 cv
479.04 24.689 478.86 24.5101 478.637 24.5101 cv
478.417 24.5101 478.237 24.689 478.237 24.911 cv
f
497.758 32.1281 mo
498.004 32.1421 498.266 32.1871 498.514 32.1871 cv
499.852 32.1871 500.516 31.5371 500.516 29.9441 cv
500.516 28.5131 499.918 27.7761 498.654 27.7761 cv
498.5 27.7761 497.979 27.7761 497.85 27.8651 cv
497.744 27.9391 497.758 28.1001 497.758 28.4721 cv
497.758 32.1281 li
cp
497.758 34.3101 mo
497.758 34.7801 497.758 35.8741 497.889 36.2711 cv
498.068 36.8471 498.68 36.7431 499.137 36.7731 cv
499.137 37.1121 li
498.461 37.0971 495.848 37.0971 495.193 37.1121 cv
495.193 36.7731 li
495.611 36.7731 496.158 36.7731 496.301 36.2711 cv
496.418 35.8741 496.418 34.7801 496.418 34.3101 cv
496.418 30.1671 li
496.418 29.6791 496.418 28.5871 496.301 28.1891 cv
496.147 27.6731 495.611 27.6871 495.193 27.6871 cv
495.193 27.3481 li
495.862 27.3631 498.088 27.3131 499.02 27.3481 cv
500.424 27.4021 502.01 28.0271 502.01 29.8991 cv
502.01 32.0541 500.176 32.5691 498.629 32.5691 cv
498.395 32.5691 497.809 32.5241 497.758 32.5241 cv
497.758 34.3101 li
f
503.737 30.152 mo
503.737 29.6791 503.737 28.5881 503.608 28.1901 cv
503.438 27.688 502.905 27.688 502.489 27.688 cv
502.489 27.3491 li
503.221 27.3651 505.768 27.3611 506.323 27.3491 cv
506.323 27.688 li
505.909 27.688 505.376 27.688 505.206 28.1901 cv
505.075 28.5881 505.075 29.6791 505.075 30.152 cv
505.075 34.5171 li
505.075 36.4061 505.337 36.7141 506.987 36.7141 cv
507.6 36.7141 508.2 36.5621 508.481 36.326 cv
508.967 35.9191 509.19 35.1771 509.307 34.3511 cv
509.616 34.3511 li
509.45 37.1131 li
509.229 37.097 504.725 37.097 502.489 37.1131 cv
502.489 36.7731 li
502.905 36.7731 503.438 36.7731 503.608 36.2711 cv
503.737 35.8751 503.737 34.7811 503.737 34.3101 cv
503.737 30.152 li
f
510.772 31.851 mo
510.772 33.2501 511.135 34.873 512.657 34.873 cv
514.075 34.873 514.426 33.2501 514.426 31.9371 cv
514.426 30.5231 514.075 28.871 512.54 28.871 cv
511.122 28.871 510.772 30.566 510.772 31.851 cv
cp
515.725 31.851 mo
515.725 33.8411 514.295 35.2111 512.592 35.2111 cv
510.901 35.2111 509.471 33.738 509.471 31.791 cv
509.471 29.902 511.006 28.5311 512.592 28.5311 cv
514.204 28.5311 515.725 29.947 515.725 31.851 cv
f
516.516 34.351 mo
516.829 34.351 li
517.088 35.8391 517.846 37.025 519.34 37.025 cv
520.354 37.025 521.198 36.376 521.198 35.183 cv
521.198 33.8411 520.172 33.16 519.225 32.7321 cv
518.041 32.2161 516.778 31.507 516.778 29.826 cv
516.778 28.1461 517.936 27.1721 519.354 27.1721 cv
520.069 27.1721 520.733 27.454 521.317 27.9241 cv
521.616 27.3491 li
521.76 27.3491 li
521.821 29.9 li
521.524 29.9 li
521.225 28.6771 520.614 27.5701 519.354 27.5701 cv
518.52 27.5701 517.832 28.175 517.832 29.134 cv
517.832 30.298 518.754 30.697 519.561 31.08 cv
520.914 31.7141 522.42 32.632 522.42 34.564 cv
522.42 36.4951 520.836 37.425 519.313 37.425 cv
518.43 37.425 517.739 37.129 517.039 36.5391 cv
516.785 37.257 li
516.645 37.257 li
516.516 34.351 li
f
534.844 31.216 mo
534.16 29.6461 532.598 28.55 530.778 28.55 cv
530.387 28.55 530.008 28.601 529.647 28.695 cv
527.748 29.197 526.35 30.924 526.35 32.98 cv
526.35 33.2 526.366 33.421 526.399 33.634 cv
526.5 34.322 526.762 34.959 527.141 35.506 cv
527.846 36.5211 528.965 37.226 530.254 37.377 cv
530.426 37.398 530.602 37.4091 530.778 37.4091 cv
532.381 37.4091 533.785 36.5601 534.563 35.2841 cv
534.973 34.613 535.209 33.8231 535.209 32.98 cv
535.209 32.353 535.08 31.756 534.844 31.216 cv
.49 .365 .345 .22 cmyk
f
531.75 30.394 mo
529.277 30.394 li
529.15 30.394 529.051 30.4961 529.051 30.6191 cv
529.051 30.7441 529.15 30.8451 529.277 30.8451 cv
529.81 30.8451 li
529.81 34.9921 li
529.81 35.5271 530.244 35.9621 530.777 35.9621 cv
531.314 35.9621 531.748 35.5271 531.748 34.9921 cv
531.748 30.3961 li
531.75 30.394 li
0 0 0 0 cmyk
f
58.054 766.601 mo
76.059 766.601 li
76.059 749.65 li
58.054 749.65 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[0 1 1 0 -90.6513 -62.6752 ]ct
[0 18.005 -16.951 0 829.276 148.705 ]ct
<<
/T 1
/W 75 
/H 71 
/M[75 0 0 -71 0 71 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3#dGU!dkO9n7VX<#4N/?i)&VN^`O2=^1$PVA.gI2O$mK^2oLR`s*c'N&pFHS,6'o#TM>aQ?17gr
_.KpVJ-'j06+Gbb.A/j%%o9qa/idTnp`gm.hsM=kiUJB@eDZE*9Di9!H,CU,Qr;pV!b\CZn+>\@(lr'"
>Lr+BGQ_Cr[inKP\A?2V6aL;pp[F`Bq09JfE+sB=qYh5)i_RDeI/O"3Zgqc%qY^?56c>T-p%j&b_pH6,
A+k4s)CL6R%kmPO]tQ*T_VYHdUYVI.3UVn\j87*Dm9/e#Ds,<g`fl6A?dHRSNR#H*^RkVhgHERiG]nk[
e:2oViI2:JJH%G(jEuoI$1C'=_9TQ/r?0FOj8C$5MskBNDBI,25'*Ggak5"'jn[2O$jZUtGT:AchHuZ5
i'<MK!."'\KB>2a%A/.Nrc,jZHq&UX^b@rBSmlX[ILHILr')%7q=JhbB*nPZ-tgB9O[m4V%Ki>R1A:0u
!VtXR*7'3RA#2];a?1!s@Er5PkFuXK*\u^1+!V$,^42Wt_D%OIbmH.S!:dX,NfYr`'Ta:7!dq>HiVIG^
XRI]IR3GTC%[#-&3X\APLa;,8W_$Ak5Z%dJ.7bZTPp8[>LB7M~>

%%EndBinary
grestore
np
f
.750179 .679652 .670191 .901488 cmyk
true set_gvm
%ADOBeginSubsetFont: ZFJAAA+AdvP403A40 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
NVLZYZ+AdvP403A40 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/V <1C60D8A8C9B7E965A9D2C1D93E56316358C5525894218D8982A2FA556F43
44E7CAA252931A3270A7C9F635A8F572DBF94E7DD36D> |-
/bar <1C60D8A8C9B87DE04451BD0B96FC528A5220222138E8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NVLZYZ+AdvP403A40 /Encoding get
dup 86 /V put
dup 124 /bar put
pop
%ADOEndSubsetFont
reset_gvm
/NVLZYZ+AdvP403A40*1 
[40{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma /hyphen /period 
/slash /zero /one /two /three /four /five /six 
/seven /eight /nine /colon /semicolon 4{/.notdef}rp /at /A 
/B /C /D /E /F /G /H /I 
/.notdef /K /L /M /N /O /P /Q 
/R /S /T /U /V /W 9{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
/j /k /l /m /n /o /p /q 
/r /s /t /u /v /w /x /y 
/z /.notdef /bar 69{/.notdef}rp /acute /circumflex /tilde 6{/.notdef}rp 
/cedilla 41{/.notdef}rp /dotlessi 10{/.notdef}rp]
NVLZYZ+AdvP403A40 nf
NVLZYZ+AdvP403A40*1 [7.9702 0 0 -7.9702 0 0 ]msf
82.0346 760.138 mo
(PLoSONE|www.plosone.org1March2012|Volume7|Issue3|e32749)
[4.23222 3.73007 4.39957 6.51642 5.4755 5.2285 7.83389 5.89635 5.88997 5.88995 5.88997 1.65775 
4.55901 1.8252 4.39957 3.05261 4.39957 4.39957 3.98511 1.65775 4.39957 2.56645 124.179 98.4192 
6.39212 3.81778 2.56644 3.56274 7.01776 4.06476 4.06476 4.06476 8.04428 5.83975 4.47922 4.39957 
1.8252 4.39957 6.63913 7.90643 8.05066 5.83975 1.90488 3.14825 3.14828 4.39957 7.97812 7.99329 
5.89636 3.98511 4.06476 4.06476 4.06476 4.06476 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
true set_gvm
/NVLZZC+AdvP49812*1 uf
/NVLZZC+AdvP49812 uf
/YFQAAA+AdvP49812 uf
reset_gvm
true set_gvm
/NVLZZB+AdvP49811*1 uf
/NVLZZB+AdvP49811 uf
/ENZAAA+AdvP49811 uf
reset_gvm
true set_gvm
/NVLZZA+AdvT377*1 uf
/NVLZZA+AdvT377 uf
/ICAAAA+AdvT377 uf
reset_gvm
true set_gvm
/NVLZYZ+AdvP403A40*1 uf
/NVLZYZ+AdvP403A40 uf
/ZFJAAA+AdvP403A40 uf
reset_gvm
true set_gvm
/NVLZYY+AdvP41461E*1 uf
/NVLZYY+AdvP41461E uf
/UPTBAA+AdvP41461E uf
reset_gvm
true set_gvm
/NVLZYX+AdvP40319B*1 uf
/NVLZYX+AdvP40319B uf
/GTQAAA+AdvP40319B uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (PANTONE 283 CVP)
%%CMYKCustomColor: 0.3412 0.0589 0 0 (PANTONE 283 CVP)
%%RGBCustomColor: 
%%EOF
